/*
 * OData Service for Business Partner
 * This service enables you to create, read, update, and    delete master data related to Business Partners,    Suppliers, and Customers in an SAP S/4HANA system.
 *
 * OpenAPI spec version: 1 
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.sap.apibhub.sdk.api_business_partner.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.sap.apibhub.sdk.api_business_partner.model.CollectionOfACustSalesPartnerFuncType;
import com.sap.apibhub.sdk.api_business_partner.model.CollectionOfACustomerSalesAreaTaxType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Customer Sales Area
 */
@ApiModel(description = "Customer Sales Area")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-08-01T06:30:25.755Z")
public class APIBUSINESSPARTNERACustomerSalesAreaType {
  @SerializedName("Customer")
  private String customer = null;

  @SerializedName("SalesOrganization")
  private String salesOrganization = null;

  @SerializedName("DistributionChannel")
  private String distributionChannel = null;

  @SerializedName("Division")
  private String division = null;

  @SerializedName("to_PartnerFunction")
  private CollectionOfACustSalesPartnerFuncType toPartnerFunction = null;

  @SerializedName("to_SalesAreaTax")
  private CollectionOfACustomerSalesAreaTaxType toSalesAreaTax = null;

  public APIBUSINESSPARTNERACustomerSalesAreaType customer(String customer) {
    this.customer = customer;
    return this;
  }

   /**
   * Customer Number   Gives an alphanumeric key, which clearly identifies the customer or vendor in the SAP system.
   * @return customer
  **/
  @ApiModelProperty(value = "Customer Number   Gives an alphanumeric key, which clearly identifies the customer or vendor in the SAP system.")
  public String getCustomer() {
    return customer;
  }

  public void setCustomer(String customer) {
    this.customer = customer;
  }

  public APIBUSINESSPARTNERACustomerSalesAreaType salesOrganization(String salesOrganization) {
    this.salesOrganization = salesOrganization;
    return this;
  }

   /**
   * An organizational unit responsible for the sale of certain products or services. The responsibility of a sales organization may include legal liability for products and customer claims.   You can assign any number of distribution channels and divisions to a sales organization. A particular combination of sales organization, distribution channel, and division is known as a sales area.
   * @return salesOrganization
  **/
  @ApiModelProperty(value = "An organizational unit responsible for the sale of certain products or services. The responsibility of a sales organization may include legal liability for products and customer claims.   You can assign any number of distribution channels and divisions to a sales organization. A particular combination of sales organization, distribution channel, and division is known as a sales area.")
  public String getSalesOrganization() {
    return salesOrganization;
  }

  public void setSalesOrganization(String salesOrganization) {
    this.salesOrganization = salesOrganization;
  }

  public APIBUSINESSPARTNERACustomerSalesAreaType distributionChannel(String distributionChannel) {
    this.distributionChannel = distributionChannel;
    return this;
  }

   /**
   * The way in which products or services reach the customer. Typical examples of distribution channels are wholesale, retail, or direct sales.   You can maintain information about customers and materials by sales organization and distribution channel. Within a sales organization you can deliver goods to a given customer through more than one distribution channel.You can assign a distribution channel to one or more sales organizations. If, for example, you have numerous sales organizations, each sales organization may use the \&quot;Wholesale\&quot; distribution channel.For each combination of sales organization and distribution channel, you can further assign one or more of the divisions that are defined for the sales organization. You can, for example, assign \&quot;Food\&quot; and \&quot;Non-food\&quot; divisions to the \&quot;Wholesale\&quot; distribution channel. A particular combination of sales organization, distribution channel, and division is known as a sales area.
   * @return distributionChannel
  **/
  @ApiModelProperty(value = "The way in which products or services reach the customer. Typical examples of distribution channels are wholesale, retail, or direct sales.   You can maintain information about customers and materials by sales organization and distribution channel. Within a sales organization you can deliver goods to a given customer through more than one distribution channel.You can assign a distribution channel to one or more sales organizations. If, for example, you have numerous sales organizations, each sales organization may use the \"Wholesale\" distribution channel.For each combination of sales organization and distribution channel, you can further assign one or more of the divisions that are defined for the sales organization. You can, for example, assign \"Food\" and \"Non-food\" divisions to the \"Wholesale\" distribution channel. A particular combination of sales organization, distribution channel, and division is known as a sales area.")
  public String getDistributionChannel() {
    return distributionChannel;
  }

  public void setDistributionChannel(String distributionChannel) {
    this.distributionChannel = distributionChannel;
  }

  public APIBUSINESSPARTNERACustomerSalesAreaType division(String division) {
    this.division = division;
    return this;
  }

   /**
   * A way of grouping materials, products, or services. The system uses divisions to determine the sales areas and the business areas for a material, product, or service.   A product or service is always assigned to just one division. From the point of view of sales and distribution, the use of divisions lets you organize your sales structure around groups of similar products or product lines. This allows the people in a division who process orders and service customers to specialize within a manageable area of expertise.If a sales organization sells food and non-food products through both retail and wholesaledistribution channels each distribution channel could then be further split into food and non-food divisions.
   * @return division
  **/
  @ApiModelProperty(value = "A way of grouping materials, products, or services. The system uses divisions to determine the sales areas and the business areas for a material, product, or service.   A product or service is always assigned to just one division. From the point of view of sales and distribution, the use of divisions lets you organize your sales structure around groups of similar products or product lines. This allows the people in a division who process orders and service customers to specialize within a manageable area of expertise.If a sales organization sells food and non-food products through both retail and wholesaledistribution channels each distribution channel could then be further split into food and non-food divisions.")
  public String getDivision() {
    return division;
  }

  public void setDivision(String division) {
    this.division = division;
  }

  public APIBUSINESSPARTNERACustomerSalesAreaType toPartnerFunction(CollectionOfACustSalesPartnerFuncType toPartnerFunction) {
    this.toPartnerFunction = toPartnerFunction;
    return this;
  }

   /**
   * Get toPartnerFunction
   * @return toPartnerFunction
  **/
  @ApiModelProperty(value = "")
  public CollectionOfACustSalesPartnerFuncType getToPartnerFunction() {
    return toPartnerFunction;
  }

  public void setToPartnerFunction(CollectionOfACustSalesPartnerFuncType toPartnerFunction) {
    this.toPartnerFunction = toPartnerFunction;
  }

  public APIBUSINESSPARTNERACustomerSalesAreaType toSalesAreaTax(CollectionOfACustomerSalesAreaTaxType toSalesAreaTax) {
    this.toSalesAreaTax = toSalesAreaTax;
    return this;
  }

   /**
   * Get toSalesAreaTax
   * @return toSalesAreaTax
  **/
  @ApiModelProperty(value = "")
  public CollectionOfACustomerSalesAreaTaxType getToSalesAreaTax() {
    return toSalesAreaTax;
  }

  public void setToSalesAreaTax(CollectionOfACustomerSalesAreaTaxType toSalesAreaTax) {
    this.toSalesAreaTax = toSalesAreaTax;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    APIBUSINESSPARTNERACustomerSalesAreaType apIBUSINESSPARTNERACustomerSalesAreaType = (APIBUSINESSPARTNERACustomerSalesAreaType) o;
    return Objects.equals(this.customer, apIBUSINESSPARTNERACustomerSalesAreaType.customer) &&
        Objects.equals(this.salesOrganization, apIBUSINESSPARTNERACustomerSalesAreaType.salesOrganization) &&
        Objects.equals(this.distributionChannel, apIBUSINESSPARTNERACustomerSalesAreaType.distributionChannel) &&
        Objects.equals(this.division, apIBUSINESSPARTNERACustomerSalesAreaType.division) &&
        Objects.equals(this.toPartnerFunction, apIBUSINESSPARTNERACustomerSalesAreaType.toPartnerFunction) &&
        Objects.equals(this.toSalesAreaTax, apIBUSINESSPARTNERACustomerSalesAreaType.toSalesAreaTax);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customer, salesOrganization, distributionChannel, division, toPartnerFunction, toSalesAreaTax);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class APIBUSINESSPARTNERACustomerSalesAreaType {\n");
    
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    salesOrganization: ").append(toIndentedString(salesOrganization)).append("\n");
    sb.append("    distributionChannel: ").append(toIndentedString(distributionChannel)).append("\n");
    sb.append("    division: ").append(toIndentedString(division)).append("\n");
    sb.append("    toPartnerFunction: ").append(toIndentedString(toPartnerFunction)).append("\n");
    sb.append("    toSalesAreaTax: ").append(toIndentedString(toSalesAreaTax)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

