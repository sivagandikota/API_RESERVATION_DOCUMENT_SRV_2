/*
 * OData Service for Business Partner
 * This service enables you to create, read, update, and    delete master data related to Business Partners,    Suppliers, and Customers in an SAP S/4HANA system.
 *
 * OpenAPI spec version: 1 
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.sap.apibhub.sdk.api_business_partner.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Business Partner Address Usage
 */
@ApiModel(description = "Business Partner Address Usage")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-08-01T06:30:25.755Z")
public class APIBUSINESSPARTNERABuPaAddressUsageType {
  @SerializedName("BusinessPartner")
  private String businessPartner = null;

  @SerializedName("ValidityEndDate")
  private String validityEndDate = null;

  @SerializedName("AddressUsage")
  private String addressUsage = null;

  @SerializedName("AddressID")
  private String addressID = null;

  public APIBUSINESSPARTNERABuPaAddressUsageType businessPartner(String businessPartner) {
    this.businessPartner = businessPartner;
    return this;
  }

   /**
   * Business Partner Number   Key identifying a business partner in the SAP system. The key is unique within a client.
   * @return businessPartner
  **/
  @ApiModelProperty(value = "Business Partner Number   Key identifying a business partner in the SAP system. The key is unique within a client.")
  public String getBusinessPartner() {
    return businessPartner;
  }

  public void setBusinessPartner(String businessPartner) {
    this.businessPartner = businessPartner;
  }

  public APIBUSINESSPARTNERABuPaAddressUsageType validityEndDate(String validityEndDate) {
    this.validityEndDate = validityEndDate;
    return this;
  }

   /**
   * Validity End of a Business Partner Address Usage
   * @return validityEndDate
  **/
  @ApiModelProperty(example = "/Date(1492098664000)/", value = "Validity End of a Business Partner Address Usage")
  public String getValidityEndDate() {
    return validityEndDate;
  }

  public void setValidityEndDate(String validityEndDate) {
    this.validityEndDate = validityEndDate;
  }

  public APIBUSINESSPARTNERABuPaAddressUsageType addressUsage(String addressUsage) {
    this.addressUsage = addressUsage;
    return this;
  }

   /**
   * Business partner attribute, which you can use to distinguish between various addresses by defining the address usage for communication with business partners.   Maintain the usage types for addresses (address types) in Customizing.You can create a short description and a name for the address type.When maintaining business partners you can use the function address usage to assign business partner addresses to address types.If necessary, you can set the indicator for multiple use in Customizing.Correspondence addressDelivery address
   * @return addressUsage
  **/
  @ApiModelProperty(value = "Business partner attribute, which you can use to distinguish between various addresses by defining the address usage for communication with business partners.   Maintain the usage types for addresses (address types) in Customizing.You can create a short description and a name for the address type.When maintaining business partners you can use the function address usage to assign business partner addresses to address types.If necessary, you can set the indicator for multiple use in Customizing.Correspondence addressDelivery address")
  public String getAddressUsage() {
    return addressUsage;
  }

  public void setAddressUsage(String addressUsage) {
    this.addressUsage = addressUsage;
  }

  public APIBUSINESSPARTNERABuPaAddressUsageType addressID(String addressID) {
    this.addressID = addressID;
    return this;
  }

   /**
   * Internal key for identifying a Business Address Services address.   For more information about the meaning and use of the address number and the Business Address Services concepts, see the function group SZA0 documentation.
   * @return addressID
  **/
  @ApiModelProperty(value = "Internal key for identifying a Business Address Services address.   For more information about the meaning and use of the address number and the Business Address Services concepts, see the function group SZA0 documentation.")
  public String getAddressID() {
    return addressID;
  }

  public void setAddressID(String addressID) {
    this.addressID = addressID;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    APIBUSINESSPARTNERABuPaAddressUsageType apIBUSINESSPARTNERABuPaAddressUsageType = (APIBUSINESSPARTNERABuPaAddressUsageType) o;
    return Objects.equals(this.businessPartner, apIBUSINESSPARTNERABuPaAddressUsageType.businessPartner) &&
        Objects.equals(this.validityEndDate, apIBUSINESSPARTNERABuPaAddressUsageType.validityEndDate) &&
        Objects.equals(this.addressUsage, apIBUSINESSPARTNERABuPaAddressUsageType.addressUsage) &&
        Objects.equals(this.addressID, apIBUSINESSPARTNERABuPaAddressUsageType.addressID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(businessPartner, validityEndDate, addressUsage, addressID);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class APIBUSINESSPARTNERABuPaAddressUsageType {\n");
    
    sb.append("    businessPartner: ").append(toIndentedString(businessPartner)).append("\n");
    sb.append("    validityEndDate: ").append(toIndentedString(validityEndDate)).append("\n");
    sb.append("    addressUsage: ").append(toIndentedString(addressUsage)).append("\n");
    sb.append("    addressID: ").append(toIndentedString(addressID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

