/*
 * OData Service for Business Partner
 * This service enables you to create, read, update, and    delete master data related to Business Partners,    Suppliers, and Customers in an SAP S/4HANA system.
 *
 * OpenAPI spec version: 1 
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.sap.apibhub.sdk.api_business_partner.api;

import com.sap.apibhub.sdk.client.ApiCallback;
import com.sap.apibhub.sdk.client.ApiClient;
import com.sap.apibhub.sdk.client.ApiException;
import com.sap.apibhub.sdk.client.ApiResponse;
import com.sap.apibhub.sdk.client.Configuration;
import com.sap.apibhub.sdk.client.Pair;
import com.sap.apibhub.sdk.client.ProgressRequestBody;
import com.sap.apibhub.sdk.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.sap.apibhub.sdk.api_business_partner.model.APIBUSINESSPARTNERAAddressHomePageURLType;
import com.sap.apibhub.sdk.api_business_partner.model.CreatedAAddressHomePageURLType;
import com.sap.apibhub.sdk.api_business_partner.model.ModifiedAAddressHomePageURLType;
import com.sap.apibhub.sdk.api_business_partner.model.OdataError;
import com.sap.apibhub.sdk.api_business_partner.model.Wrapper2;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class AAddressHomePageURLApi {
    private ApiClient apiClient;

    public AAddressHomePageURLApi() {
        this(Configuration.getDefaultApiClient());
    }

    public AAddressHomePageURLApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /* Build call for aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressDelete */
    private com.squareup.okhttp.Call aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressDeleteCall(String addressID, String person, String ordinalNumber, String validityStartDate, String isDefaultURLAddress, String ifMatch, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_AddressHomePageURL(AddressID='{AddressID}',Person='{Person}',OrdinalNumber='{OrdinalNumber}',ValidityStartDate={ValidityStartDate},IsDefaultURLAddress='{IsDefaultURLAddress}')".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "AddressID" + "\\}", apiClient.escapeString(addressID.toString()))
        .replaceAll("\\{" + "Person" + "\\}", apiClient.escapeString(person.toString()))
        .replaceAll("\\{" + "OrdinalNumber" + "\\}", apiClient.escapeString(ordinalNumber.toString()))
        .replaceAll("\\{" + "ValidityStartDate" + "\\}", apiClient.escapeString(validityStartDate.toString()))
        .replaceAll("\\{" + "IsDefaultURLAddress" + "\\}", apiClient.escapeString(isDefaultURLAddress.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (ifMatch != null)
        localVarHeaderParams.put("If-Match", apiClient.parameterToString(ifMatch));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "DELETE", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressDeleteValidateBeforeCall(String addressID, String person, String ordinalNumber, String validityStartDate, String isDefaultURLAddress, String ifMatch, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'addressID' is set
        if (addressID == null) {
            throw new ApiException("Missing the required parameter 'addressID' when calling aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressDelete(Async)");
        }
        
        // verify the required parameter 'person' is set
        if (person == null) {
            throw new ApiException("Missing the required parameter 'person' when calling aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressDelete(Async)");
        }
        
        // verify the required parameter 'ordinalNumber' is set
        if (ordinalNumber == null) {
            throw new ApiException("Missing the required parameter 'ordinalNumber' when calling aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressDelete(Async)");
        }
        
        // verify the required parameter 'validityStartDate' is set
        if (validityStartDate == null) {
            throw new ApiException("Missing the required parameter 'validityStartDate' when calling aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressDelete(Async)");
        }
        
        // verify the required parameter 'isDefaultURLAddress' is set
        if (isDefaultURLAddress == null) {
            throw new ApiException("Missing the required parameter 'isDefaultURLAddress' when calling aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressDelete(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressDeleteCall(addressID, person, ordinalNumber, validityStartDate, isDefaultURLAddress, ifMatch, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Delete entity from A_AddressHomePageURL
     * 
     * @param addressID Internal key for identifying a Business Address Services address.   For more information about the meaning and use of the address number and the Business Address Services concepts, see the function group SZA0 documentation. (required)
     * @param person Internal key for identifying a person in Business Address Services.   For more information about the meaning and use of the person number and Business Address Services concepts, see the function group SZA0 documentation. (required)
     * @param ordinalNumber Sequence Number (required)
     * @param validityStartDate Valid-from date - in current Release only 00010101 possible (required)
     * @param isDefaultURLAddress Flag: this address is the default address (required)
     * @param ifMatch ETag (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressDelete(String addressID, String person, String ordinalNumber, String validityStartDate, String isDefaultURLAddress, String ifMatch) throws ApiException {
        aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressDeleteWithHttpInfo(addressID, person, ordinalNumber, validityStartDate, isDefaultURLAddress, ifMatch);
    }

    /**
     * Delete entity from A_AddressHomePageURL
     * 
     * @param addressID Internal key for identifying a Business Address Services address.   For more information about the meaning and use of the address number and the Business Address Services concepts, see the function group SZA0 documentation. (required)
     * @param person Internal key for identifying a person in Business Address Services.   For more information about the meaning and use of the person number and Business Address Services concepts, see the function group SZA0 documentation. (required)
     * @param ordinalNumber Sequence Number (required)
     * @param validityStartDate Valid-from date - in current Release only 00010101 possible (required)
     * @param isDefaultURLAddress Flag: this address is the default address (required)
     * @param ifMatch ETag (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressDeleteWithHttpInfo(String addressID, String person, String ordinalNumber, String validityStartDate, String isDefaultURLAddress, String ifMatch) throws ApiException {
        com.squareup.okhttp.Call call = aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressDeleteValidateBeforeCall(addressID, person, ordinalNumber, validityStartDate, isDefaultURLAddress, ifMatch, null, null);
        return apiClient.execute(call);
    }

    /**
     * Delete entity from A_AddressHomePageURL (asynchronously)
     * 
     * @param addressID Internal key for identifying a Business Address Services address.   For more information about the meaning and use of the address number and the Business Address Services concepts, see the function group SZA0 documentation. (required)
     * @param person Internal key for identifying a person in Business Address Services.   For more information about the meaning and use of the person number and Business Address Services concepts, see the function group SZA0 documentation. (required)
     * @param ordinalNumber Sequence Number (required)
     * @param validityStartDate Valid-from date - in current Release only 00010101 possible (required)
     * @param isDefaultURLAddress Flag: this address is the default address (required)
     * @param ifMatch ETag (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressDeleteAsync(String addressID, String person, String ordinalNumber, String validityStartDate, String isDefaultURLAddress, String ifMatch, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressDeleteValidateBeforeCall(addressID, person, ordinalNumber, validityStartDate, isDefaultURLAddress, ifMatch, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /* Build call for aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressGet */
    private com.squareup.okhttp.Call aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressGetCall(String addressID, String person, String ordinalNumber, String validityStartDate, String isDefaultURLAddress, List<String> select, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_AddressHomePageURL(AddressID='{AddressID}',Person='{Person}',OrdinalNumber='{OrdinalNumber}',ValidityStartDate={ValidityStartDate},IsDefaultURLAddress='{IsDefaultURLAddress}')".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "AddressID" + "\\}", apiClient.escapeString(addressID.toString()))
        .replaceAll("\\{" + "Person" + "\\}", apiClient.escapeString(person.toString()))
        .replaceAll("\\{" + "OrdinalNumber" + "\\}", apiClient.escapeString(ordinalNumber.toString()))
        .replaceAll("\\{" + "ValidityStartDate" + "\\}", apiClient.escapeString(validityStartDate.toString()))
        .replaceAll("\\{" + "IsDefaultURLAddress" + "\\}", apiClient.escapeString(isDefaultURLAddress.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (select != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$select", select));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressGetValidateBeforeCall(String addressID, String person, String ordinalNumber, String validityStartDate, String isDefaultURLAddress, List<String> select, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'addressID' is set
        if (addressID == null) {
            throw new ApiException("Missing the required parameter 'addressID' when calling aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressGet(Async)");
        }
        
        // verify the required parameter 'person' is set
        if (person == null) {
            throw new ApiException("Missing the required parameter 'person' when calling aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressGet(Async)");
        }
        
        // verify the required parameter 'ordinalNumber' is set
        if (ordinalNumber == null) {
            throw new ApiException("Missing the required parameter 'ordinalNumber' when calling aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressGet(Async)");
        }
        
        // verify the required parameter 'validityStartDate' is set
        if (validityStartDate == null) {
            throw new ApiException("Missing the required parameter 'validityStartDate' when calling aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressGet(Async)");
        }
        
        // verify the required parameter 'isDefaultURLAddress' is set
        if (isDefaultURLAddress == null) {
            throw new ApiException("Missing the required parameter 'isDefaultURLAddress' when calling aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressGet(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressGetCall(addressID, person, ordinalNumber, validityStartDate, isDefaultURLAddress, select, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get entity from A_AddressHomePageURL by key
     * 
     * @param addressID Internal key for identifying a Business Address Services address.   For more information about the meaning and use of the address number and the Business Address Services concepts, see the function group SZA0 documentation. (required)
     * @param person Internal key for identifying a person in Business Address Services.   For more information about the meaning and use of the person number and Business Address Services concepts, see the function group SZA0 documentation. (required)
     * @param ordinalNumber Sequence Number (required)
     * @param validityStartDate Valid-from date - in current Release only 00010101 possible (required)
     * @param isDefaultURLAddress Flag: this address is the default address (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620) (optional)
     * @return CreatedAAddressHomePageURLType
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public CreatedAAddressHomePageURLType aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressGet(String addressID, String person, String ordinalNumber, String validityStartDate, String isDefaultURLAddress, List<String> select) throws ApiException {
        ApiResponse<CreatedAAddressHomePageURLType> resp = aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressGetWithHttpInfo(addressID, person, ordinalNumber, validityStartDate, isDefaultURLAddress, select);
        return resp.getData();
    }

    /**
     * Get entity from A_AddressHomePageURL by key
     * 
     * @param addressID Internal key for identifying a Business Address Services address.   For more information about the meaning and use of the address number and the Business Address Services concepts, see the function group SZA0 documentation. (required)
     * @param person Internal key for identifying a person in Business Address Services.   For more information about the meaning and use of the person number and Business Address Services concepts, see the function group SZA0 documentation. (required)
     * @param ordinalNumber Sequence Number (required)
     * @param validityStartDate Valid-from date - in current Release only 00010101 possible (required)
     * @param isDefaultURLAddress Flag: this address is the default address (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620) (optional)
     * @return ApiResponse&lt;CreatedAAddressHomePageURLType&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<CreatedAAddressHomePageURLType> aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressGetWithHttpInfo(String addressID, String person, String ordinalNumber, String validityStartDate, String isDefaultURLAddress, List<String> select) throws ApiException {
        com.squareup.okhttp.Call call = aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressGetValidateBeforeCall(addressID, person, ordinalNumber, validityStartDate, isDefaultURLAddress, select, null, null);
        Type localVarReturnType = new TypeToken<CreatedAAddressHomePageURLType>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get entity from A_AddressHomePageURL by key (asynchronously)
     * 
     * @param addressID Internal key for identifying a Business Address Services address.   For more information about the meaning and use of the address number and the Business Address Services concepts, see the function group SZA0 documentation. (required)
     * @param person Internal key for identifying a person in Business Address Services.   For more information about the meaning and use of the person number and Business Address Services concepts, see the function group SZA0 documentation. (required)
     * @param ordinalNumber Sequence Number (required)
     * @param validityStartDate Valid-from date - in current Release only 00010101 possible (required)
     * @param isDefaultURLAddress Flag: this address is the default address (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressGetAsync(String addressID, String person, String ordinalNumber, String validityStartDate, String isDefaultURLAddress, List<String> select, final ApiCallback<CreatedAAddressHomePageURLType> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressGetValidateBeforeCall(addressID, person, ordinalNumber, validityStartDate, isDefaultURLAddress, select, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<CreatedAAddressHomePageURLType>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressPatch */
    private com.squareup.okhttp.Call aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressPatchCall(String addressID, String person, String ordinalNumber, String validityStartDate, String isDefaultURLAddress, ModifiedAAddressHomePageURLType aAddressHomePageURLType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = aAddressHomePageURLType;
        
        // create path and map variables
        String localVarPath = "/A_AddressHomePageURL(AddressID='{AddressID}',Person='{Person}',OrdinalNumber='{OrdinalNumber}',ValidityStartDate={ValidityStartDate},IsDefaultURLAddress='{IsDefaultURLAddress}')".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "AddressID" + "\\}", apiClient.escapeString(addressID.toString()))
        .replaceAll("\\{" + "Person" + "\\}", apiClient.escapeString(person.toString()))
        .replaceAll("\\{" + "OrdinalNumber" + "\\}", apiClient.escapeString(ordinalNumber.toString()))
        .replaceAll("\\{" + "ValidityStartDate" + "\\}", apiClient.escapeString(validityStartDate.toString()))
        .replaceAll("\\{" + "IsDefaultURLAddress" + "\\}", apiClient.escapeString(isDefaultURLAddress.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "PATCH", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressPatchValidateBeforeCall(String addressID, String person, String ordinalNumber, String validityStartDate, String isDefaultURLAddress, ModifiedAAddressHomePageURLType aAddressHomePageURLType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'addressID' is set
        if (addressID == null) {
            throw new ApiException("Missing the required parameter 'addressID' when calling aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressPatch(Async)");
        }
        
        // verify the required parameter 'person' is set
        if (person == null) {
            throw new ApiException("Missing the required parameter 'person' when calling aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressPatch(Async)");
        }
        
        // verify the required parameter 'ordinalNumber' is set
        if (ordinalNumber == null) {
            throw new ApiException("Missing the required parameter 'ordinalNumber' when calling aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressPatch(Async)");
        }
        
        // verify the required parameter 'validityStartDate' is set
        if (validityStartDate == null) {
            throw new ApiException("Missing the required parameter 'validityStartDate' when calling aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressPatch(Async)");
        }
        
        // verify the required parameter 'isDefaultURLAddress' is set
        if (isDefaultURLAddress == null) {
            throw new ApiException("Missing the required parameter 'isDefaultURLAddress' when calling aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressPatch(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressPatchCall(addressID, person, ordinalNumber, validityStartDate, isDefaultURLAddress, aAddressHomePageURLType, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Update entity in A_AddressHomePageURL
     * 
     * @param addressID Internal key for identifying a Business Address Services address.   For more information about the meaning and use of the address number and the Business Address Services concepts, see the function group SZA0 documentation. (required)
     * @param person Internal key for identifying a person in Business Address Services.   For more information about the meaning and use of the person number and Business Address Services concepts, see the function group SZA0 documentation. (required)
     * @param ordinalNumber Sequence Number (required)
     * @param validityStartDate Valid-from date - in current Release only 00010101 possible (required)
     * @param isDefaultURLAddress Flag: this address is the default address (required)
     * @param aAddressHomePageURLType New property values (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressPatch(String addressID, String person, String ordinalNumber, String validityStartDate, String isDefaultURLAddress, ModifiedAAddressHomePageURLType aAddressHomePageURLType) throws ApiException {
        aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressPatchWithHttpInfo(addressID, person, ordinalNumber, validityStartDate, isDefaultURLAddress, aAddressHomePageURLType);
    }

    /**
     * Update entity in A_AddressHomePageURL
     * 
     * @param addressID Internal key for identifying a Business Address Services address.   For more information about the meaning and use of the address number and the Business Address Services concepts, see the function group SZA0 documentation. (required)
     * @param person Internal key for identifying a person in Business Address Services.   For more information about the meaning and use of the person number and Business Address Services concepts, see the function group SZA0 documentation. (required)
     * @param ordinalNumber Sequence Number (required)
     * @param validityStartDate Valid-from date - in current Release only 00010101 possible (required)
     * @param isDefaultURLAddress Flag: this address is the default address (required)
     * @param aAddressHomePageURLType New property values (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressPatchWithHttpInfo(String addressID, String person, String ordinalNumber, String validityStartDate, String isDefaultURLAddress, ModifiedAAddressHomePageURLType aAddressHomePageURLType) throws ApiException {
        com.squareup.okhttp.Call call = aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressPatchValidateBeforeCall(addressID, person, ordinalNumber, validityStartDate, isDefaultURLAddress, aAddressHomePageURLType, null, null);
        return apiClient.execute(call);
    }

    /**
     * Update entity in A_AddressHomePageURL (asynchronously)
     * 
     * @param addressID Internal key for identifying a Business Address Services address.   For more information about the meaning and use of the address number and the Business Address Services concepts, see the function group SZA0 documentation. (required)
     * @param person Internal key for identifying a person in Business Address Services.   For more information about the meaning and use of the person number and Business Address Services concepts, see the function group SZA0 documentation. (required)
     * @param ordinalNumber Sequence Number (required)
     * @param validityStartDate Valid-from date - in current Release only 00010101 possible (required)
     * @param isDefaultURLAddress Flag: this address is the default address (required)
     * @param aAddressHomePageURLType New property values (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressPatchAsync(String addressID, String person, String ordinalNumber, String validityStartDate, String isDefaultURLAddress, ModifiedAAddressHomePageURLType aAddressHomePageURLType, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aAddressHomePageURLAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberValidityStartDateValidityStartDateIsDefaultURLAddressIsDefaultURLAddressPatchValidateBeforeCall(addressID, person, ordinalNumber, validityStartDate, isDefaultURLAddress, aAddressHomePageURLType, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /* Build call for aAddressHomePageURLGet */
    private com.squareup.okhttp.Call aAddressHomePageURLGetCall(Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_AddressHomePageURL".replaceAll("\\{format\\}","json");

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (top != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$top", top));
        if (skip != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$skip", skip));
        if (filter != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$filter", filter));
        if (inlinecount != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$inlinecount", inlinecount));
        if (orderby != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$orderby", orderby));
        if (select != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$select", select));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aAddressHomePageURLGetValidateBeforeCall(Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        
        com.squareup.okhttp.Call call = aAddressHomePageURLGetCall(top, skip, filter, inlinecount, orderby, select, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get entities from A_AddressHomePageURL
     * 
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374630) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374631) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374625) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374629) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620) (optional)
     * @return Wrapper2
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Wrapper2 aAddressHomePageURLGet(Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select) throws ApiException {
        ApiResponse<Wrapper2> resp = aAddressHomePageURLGetWithHttpInfo(top, skip, filter, inlinecount, orderby, select);
        return resp.getData();
    }

    /**
     * Get entities from A_AddressHomePageURL
     * 
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374630) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374631) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374625) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374629) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620) (optional)
     * @return ApiResponse&lt;Wrapper2&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Wrapper2> aAddressHomePageURLGetWithHttpInfo(Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select) throws ApiException {
        com.squareup.okhttp.Call call = aAddressHomePageURLGetValidateBeforeCall(top, skip, filter, inlinecount, orderby, select, null, null);
        Type localVarReturnType = new TypeToken<Wrapper2>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get entities from A_AddressHomePageURL (asynchronously)
     * 
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374630) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374631) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374625) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374629) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aAddressHomePageURLGetAsync(Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, final ApiCallback<Wrapper2> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aAddressHomePageURLGetValidateBeforeCall(top, skip, filter, inlinecount, orderby, select, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Wrapper2>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for aAddressHomePageURLPost */
    private com.squareup.okhttp.Call aAddressHomePageURLPostCall(APIBUSINESSPARTNERAAddressHomePageURLType aAddressHomePageURLType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = aAddressHomePageURLType;
        
        // create path and map variables
        String localVarPath = "/A_AddressHomePageURL".replaceAll("\\{format\\}","json");

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aAddressHomePageURLPostValidateBeforeCall(APIBUSINESSPARTNERAAddressHomePageURLType aAddressHomePageURLType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        
        com.squareup.okhttp.Call call = aAddressHomePageURLPostCall(aAddressHomePageURLType, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Add new entity to A_AddressHomePageURL
     * 
     * @param aAddressHomePageURLType New entity (optional)
     * @return CreatedAAddressHomePageURLType
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public CreatedAAddressHomePageURLType aAddressHomePageURLPost(APIBUSINESSPARTNERAAddressHomePageURLType aAddressHomePageURLType) throws ApiException {
        ApiResponse<CreatedAAddressHomePageURLType> resp = aAddressHomePageURLPostWithHttpInfo(aAddressHomePageURLType);
        return resp.getData();
    }

    /**
     * Add new entity to A_AddressHomePageURL
     * 
     * @param aAddressHomePageURLType New entity (optional)
     * @return ApiResponse&lt;CreatedAAddressHomePageURLType&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<CreatedAAddressHomePageURLType> aAddressHomePageURLPostWithHttpInfo(APIBUSINESSPARTNERAAddressHomePageURLType aAddressHomePageURLType) throws ApiException {
        com.squareup.okhttp.Call call = aAddressHomePageURLPostValidateBeforeCall(aAddressHomePageURLType, null, null);
        Type localVarReturnType = new TypeToken<CreatedAAddressHomePageURLType>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Add new entity to A_AddressHomePageURL (asynchronously)
     * 
     * @param aAddressHomePageURLType New entity (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aAddressHomePageURLPostAsync(APIBUSINESSPARTNERAAddressHomePageURLType aAddressHomePageURLType, final ApiCallback<CreatedAAddressHomePageURLType> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aAddressHomePageURLPostValidateBeforeCall(aAddressHomePageURLType, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<CreatedAAddressHomePageURLType>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
