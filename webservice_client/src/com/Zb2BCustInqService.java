package com;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.2.6
 * 2019-07-30T15:34:59.979+05:30
 * Generated source version: 3.2.6
 *
 */
@WebServiceClient(name = "Zb2bCustInqService",
                  wsdlLocation = "https://person1hb65b1d56.us3.hana.ondemand.com/Person-0.0.1-SNAPSHOT/ws/Z_B2B_CUST_INQ?wsdl",
                  targetNamespace = "http://com/")
public class Zb2BCustInqService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://com/", "Zb2BCustInqService");
    public final static QName Zb2BCustInqPort = new QName("http://com/", "Zb2BCustInqPort");
    static {
        URL url = null;
        try {
            url = new URL("https://person1hb65b1d56.us3.hana.ondemand.com/Person-0.0.1-SNAPSHOT/ws/Z_B2B_CUST_INQ?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(Zb2BCustInqService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "https://person1hb65b1d56.us3.hana.ondemand.com/Person-0.0.1-SNAPSHOT/ws/Z_B2B_CUST_INQ?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public Zb2BCustInqService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public Zb2BCustInqService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Zb2BCustInqService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public Zb2BCustInqService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public Zb2BCustInqService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public Zb2BCustInqService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns ZB2BCUSTINQ
     */
    @WebEndpoint(name = "Zb2bCustInqPort")
    public ZB2BCUSTINQ getZb2BCustInqPort() {
        return super.getPort(Zb2BCustInqPort, ZB2BCUSTINQ.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ZB2BCUSTINQ
     */
    @WebEndpoint(name = "Zb2bCustInqPort")
    public ZB2BCUSTINQ getZb2BCustInqPort(WebServiceFeature... features) {
        return super.getPort(Zb2BCustInqPort, ZB2BCUSTINQ.class, features);
    }

}
