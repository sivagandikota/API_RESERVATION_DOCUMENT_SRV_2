package com.sap.xi.sd_sls;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 3.2.6
 * 2018-11-21T10:16:43.756+05:30
 * Generated source version: 3.2.6
 *
 */
@WebServiceClient(name = "service",
                  wsdlLocation = "file:C:\\Users\\sivag\\eclipse-workspace1\\SalesOrder\\src\\com\\salesorder.wsdl",
                  targetNamespace = "http://sap.com/xi/SD-SLS")
public class Service extends javax.xml.ws.Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://sap.com/xi/SD-SLS", "service");
    public final static QName BindingSoap12 = new QName("http://sap.com/xi/SD-SLS", "binding_soap12");
    public final static QName Binding = new QName("http://sap.com/xi/SD-SLS", "binding");
    static {
        URL url = null;
        try {
            url = new URL("file:C:\\Users\\sivag\\eclipse-workspace1\\SalesOrder\\src\\com\\salesorder.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(Service.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:salesorder.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Service() {
        super(WSDL_LOCATION, SERVICE);
    }

    public Service(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public Service(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public Service(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns SalesOrderBulkRequestIn
     */
    @WebEndpoint(name = "binding_soap12")
    public SalesOrderBulkRequestIn getBindingSoap12() {
        return super.getPort(BindingSoap12, SalesOrderBulkRequestIn.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SalesOrderBulkRequestIn
     */
    @WebEndpoint(name = "binding_soap12")
    public SalesOrderBulkRequestIn getBindingSoap12(WebServiceFeature... features) {
        return super.getPort(BindingSoap12, SalesOrderBulkRequestIn.class, features);
    }


    /**
     *
     * @return
     *     returns SalesOrderBulkRequestIn
     */
    @WebEndpoint(name = "binding")
    public SalesOrderBulkRequestIn getBinding() {
        return super.getPort(Binding, SalesOrderBulkRequestIn.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SalesOrderBulkRequestIn
     */
    @WebEndpoint(name = "binding")
    public SalesOrderBulkRequestIn getBinding(WebServiceFeature... features) {
        return super.getPort(Binding, SalesOrderBulkRequestIn.class, features);
    }

}
