/*
 * Sales Order - Create, Read, Update, Delete (A2X)
 * You can use this service to integrate external  applications with sales order processing in SAP  S/4HANA Cloud. In every API call, you can make  use of the following operations:  - You can retrieve  sales orders. Apply any of the filters provided or  retrieve all existing data.  - You can create sales  orders. Note that you must use “deep insert”  requests (a header plus the following entities:  header partner, header pricing element, header  text, payment details, item, item partner, item  pricing element, and item text). You cannot create  entities without including any related entities.  - For  existing sales orders, you can create new items.  Note that you must use “deep insert” requests  (with the following entities: item partner, item pricing  element, and item text). You cannot create entities  without including any related entities.  - For existing  sales orders, you can update the header, header  partner, header pricing element, header text,  payment details, item, item partner, item pricing  element, and item text.  - For existing sales  orders, you can delete the header, header partner,  header pricing element, header text, payment  details, item, item partner, item pricing element,  and item text.  - You can accept or deny approval  requests for sales orders that cannot be processed  without the consent of an approver.
 *
 * OpenAPI spec version: 1 
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.sap.apibhub.sdk.api_sales_order_srv.api;

import com.sap.apibhub.sdk.client.ApiCallback;
import com.sap.apibhub.sdk.client.ApiClient;
import com.sap.apibhub.sdk.client.ApiException;
import com.sap.apibhub.sdk.client.ApiResponse;
import com.sap.apibhub.sdk.client.Configuration;
import com.sap.apibhub.sdk.client.Pair;
import com.sap.apibhub.sdk.client.ProgressRequestBody;
import com.sap.apibhub.sdk.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.sap.apibhub.sdk.api_sales_order_srv.model.ASalesOrderHeaderPartnerType;
import com.sap.apibhub.sdk.api_sales_order_srv.model.ModifiedASalesOrderHeaderPartnerType;
import com.sap.apibhub.sdk.api_sales_order_srv.model.OdataError;
import com.sap.apibhub.sdk.api_sales_order_srv.model.Wrapper;
import com.sap.apibhub.sdk.api_sales_order_srv.model.Wrapper2;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ASalesOrderHeaderPartnerApi {
    private ApiClient apiClient;

    public ASalesOrderHeaderPartnerApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ASalesOrderHeaderPartnerApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /* Build call for aSalesOrderHeaderPartnerGet */
    private com.squareup.okhttp.Call aSalesOrderHeaderPartnerGetCall(Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_SalesOrderHeaderPartner".replaceAll("\\{format\\}","json");

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (top != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$top", top));
        if (skip != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$skip", skip));
        if (filter != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$filter", filter));
        if (inlinecount != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$inlinecount", inlinecount));
        if (orderby != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$orderby", orderby));
        if (select != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$select", select));
        if (expand != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$expand", expand));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aSalesOrderHeaderPartnerGetValidateBeforeCall(Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        
        com.squareup.okhttp.Call call = aSalesOrderHeaderPartnerGetCall(top, skip, filter, inlinecount, orderby, select, expand, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get entities from A_SalesOrderHeaderPartner
     * 
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return Wrapper2
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Wrapper2 aSalesOrderHeaderPartnerGet(Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand) throws ApiException {
        ApiResponse<Wrapper2> resp = aSalesOrderHeaderPartnerGetWithHttpInfo(top, skip, filter, inlinecount, orderby, select, expand);
        return resp.getData();
    }

    /**
     * Get entities from A_SalesOrderHeaderPartner
     * 
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return ApiResponse&lt;Wrapper2&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Wrapper2> aSalesOrderHeaderPartnerGetWithHttpInfo(Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand) throws ApiException {
        com.squareup.okhttp.Call call = aSalesOrderHeaderPartnerGetValidateBeforeCall(top, skip, filter, inlinecount, orderby, select, expand, null, null);
        Type localVarReturnType = new TypeToken<Wrapper2>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get entities from A_SalesOrderHeaderPartner (asynchronously)
     * 
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aSalesOrderHeaderPartnerGetAsync(Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand, final ApiCallback<Wrapper2> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aSalesOrderHeaderPartnerGetValidateBeforeCall(top, skip, filter, inlinecount, orderby, select, expand, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Wrapper2>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionDelete */
    private com.squareup.okhttp.Call aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionDeleteCall(String salesOrder, String partnerFunction, String ifMatch, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_SalesOrderHeaderPartner(SalesOrder='{SalesOrder}',PartnerFunction='{PartnerFunction}')".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "SalesOrder" + "\\}", apiClient.escapeString(salesOrder.toString()))
        .replaceAll("\\{" + "PartnerFunction" + "\\}", apiClient.escapeString(partnerFunction.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (ifMatch != null)
        localVarHeaderParams.put("If-Match", apiClient.parameterToString(ifMatch));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "DELETE", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionDeleteValidateBeforeCall(String salesOrder, String partnerFunction, String ifMatch, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'salesOrder' is set
        if (salesOrder == null) {
            throw new ApiException("Missing the required parameter 'salesOrder' when calling aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionDelete(Async)");
        }
        
        // verify the required parameter 'partnerFunction' is set
        if (partnerFunction == null) {
            throw new ApiException("Missing the required parameter 'partnerFunction' when calling aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionDelete(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionDeleteCall(salesOrder, partnerFunction, ifMatch, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Delete entity from A_SalesOrderHeaderPartner
     * 
     * @param salesOrder Sales Order (required)
     * @param partnerFunction The abbreviated form of the name that identifies the partner function. (required)
     * @param ifMatch ETag (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionDelete(String salesOrder, String partnerFunction, String ifMatch) throws ApiException {
        aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionDeleteWithHttpInfo(salesOrder, partnerFunction, ifMatch);
    }

    /**
     * Delete entity from A_SalesOrderHeaderPartner
     * 
     * @param salesOrder Sales Order (required)
     * @param partnerFunction The abbreviated form of the name that identifies the partner function. (required)
     * @param ifMatch ETag (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionDeleteWithHttpInfo(String salesOrder, String partnerFunction, String ifMatch) throws ApiException {
        com.squareup.okhttp.Call call = aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionDeleteValidateBeforeCall(salesOrder, partnerFunction, ifMatch, null, null);
        return apiClient.execute(call);
    }

    /**
     * Delete entity from A_SalesOrderHeaderPartner (asynchronously)
     * 
     * @param salesOrder Sales Order (required)
     * @param partnerFunction The abbreviated form of the name that identifies the partner function. (required)
     * @param ifMatch ETag (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionDeleteAsync(String salesOrder, String partnerFunction, String ifMatch, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionDeleteValidateBeforeCall(salesOrder, partnerFunction, ifMatch, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /* Build call for aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionGet */
    private com.squareup.okhttp.Call aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionGetCall(String salesOrder, String partnerFunction, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_SalesOrderHeaderPartner(SalesOrder='{SalesOrder}',PartnerFunction='{PartnerFunction}')".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "SalesOrder" + "\\}", apiClient.escapeString(salesOrder.toString()))
        .replaceAll("\\{" + "PartnerFunction" + "\\}", apiClient.escapeString(partnerFunction.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (select != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$select", select));
        if (expand != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$expand", expand));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionGetValidateBeforeCall(String salesOrder, String partnerFunction, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'salesOrder' is set
        if (salesOrder == null) {
            throw new ApiException("Missing the required parameter 'salesOrder' when calling aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionGet(Async)");
        }
        
        // verify the required parameter 'partnerFunction' is set
        if (partnerFunction == null) {
            throw new ApiException("Missing the required parameter 'partnerFunction' when calling aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionGet(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionGetCall(salesOrder, partnerFunction, select, expand, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get entity from A_SalesOrderHeaderPartner by key
     * 
     * @param salesOrder Sales Order (required)
     * @param partnerFunction The abbreviated form of the name that identifies the partner function. (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return ASalesOrderHeaderPartnerType
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ASalesOrderHeaderPartnerType aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionGet(String salesOrder, String partnerFunction, List<String> select, List<String> expand) throws ApiException {
        ApiResponse<ASalesOrderHeaderPartnerType> resp = aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionGetWithHttpInfo(salesOrder, partnerFunction, select, expand);
        return resp.getData();
    }

    /**
     * Get entity from A_SalesOrderHeaderPartner by key
     * 
     * @param salesOrder Sales Order (required)
     * @param partnerFunction The abbreviated form of the name that identifies the partner function. (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return ApiResponse&lt;ASalesOrderHeaderPartnerType&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<ASalesOrderHeaderPartnerType> aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionGetWithHttpInfo(String salesOrder, String partnerFunction, List<String> select, List<String> expand) throws ApiException {
        com.squareup.okhttp.Call call = aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionGetValidateBeforeCall(salesOrder, partnerFunction, select, expand, null, null);
        Type localVarReturnType = new TypeToken<ASalesOrderHeaderPartnerType>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get entity from A_SalesOrderHeaderPartner by key (asynchronously)
     * 
     * @param salesOrder Sales Order (required)
     * @param partnerFunction The abbreviated form of the name that identifies the partner function. (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionGetAsync(String salesOrder, String partnerFunction, List<String> select, List<String> expand, final ApiCallback<ASalesOrderHeaderPartnerType> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionGetValidateBeforeCall(salesOrder, partnerFunction, select, expand, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<ASalesOrderHeaderPartnerType>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionPatch */
    private com.squareup.okhttp.Call aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionPatchCall(String salesOrder, String partnerFunction, ModifiedASalesOrderHeaderPartnerType aSalesOrderHeaderPartnerType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = aSalesOrderHeaderPartnerType;
        
        // create path and map variables
        String localVarPath = "/A_SalesOrderHeaderPartner(SalesOrder='{SalesOrder}',PartnerFunction='{PartnerFunction}')".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "SalesOrder" + "\\}", apiClient.escapeString(salesOrder.toString()))
        .replaceAll("\\{" + "PartnerFunction" + "\\}", apiClient.escapeString(partnerFunction.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "PATCH", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionPatchValidateBeforeCall(String salesOrder, String partnerFunction, ModifiedASalesOrderHeaderPartnerType aSalesOrderHeaderPartnerType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'salesOrder' is set
        if (salesOrder == null) {
            throw new ApiException("Missing the required parameter 'salesOrder' when calling aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionPatch(Async)");
        }
        
        // verify the required parameter 'partnerFunction' is set
        if (partnerFunction == null) {
            throw new ApiException("Missing the required parameter 'partnerFunction' when calling aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionPatch(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionPatchCall(salesOrder, partnerFunction, aSalesOrderHeaderPartnerType, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Update entity in A_SalesOrderHeaderPartner
     * 
     * @param salesOrder Sales Order (required)
     * @param partnerFunction The abbreviated form of the name that identifies the partner function. (required)
     * @param aSalesOrderHeaderPartnerType New property values (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionPatch(String salesOrder, String partnerFunction, ModifiedASalesOrderHeaderPartnerType aSalesOrderHeaderPartnerType) throws ApiException {
        aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionPatchWithHttpInfo(salesOrder, partnerFunction, aSalesOrderHeaderPartnerType);
    }

    /**
     * Update entity in A_SalesOrderHeaderPartner
     * 
     * @param salesOrder Sales Order (required)
     * @param partnerFunction The abbreviated form of the name that identifies the partner function. (required)
     * @param aSalesOrderHeaderPartnerType New property values (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionPatchWithHttpInfo(String salesOrder, String partnerFunction, ModifiedASalesOrderHeaderPartnerType aSalesOrderHeaderPartnerType) throws ApiException {
        com.squareup.okhttp.Call call = aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionPatchValidateBeforeCall(salesOrder, partnerFunction, aSalesOrderHeaderPartnerType, null, null);
        return apiClient.execute(call);
    }

    /**
     * Update entity in A_SalesOrderHeaderPartner (asynchronously)
     * 
     * @param salesOrder Sales Order (required)
     * @param partnerFunction The abbreviated form of the name that identifies the partner function. (required)
     * @param aSalesOrderHeaderPartnerType New property values (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionPatchAsync(String salesOrder, String partnerFunction, ModifiedASalesOrderHeaderPartnerType aSalesOrderHeaderPartnerType, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionPatchValidateBeforeCall(salesOrder, partnerFunction, aSalesOrderHeaderPartnerType, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /* Build call for aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionToSalesOrderGet */
    private com.squareup.okhttp.Call aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionToSalesOrderGetCall(String salesOrder, String partnerFunction, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_SalesOrderHeaderPartner(SalesOrder='{SalesOrder}',PartnerFunction='{PartnerFunction}')/to_SalesOrder".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "SalesOrder" + "\\}", apiClient.escapeString(salesOrder.toString()))
        .replaceAll("\\{" + "PartnerFunction" + "\\}", apiClient.escapeString(partnerFunction.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (select != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$select", select));
        if (expand != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$expand", expand));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionToSalesOrderGetValidateBeforeCall(String salesOrder, String partnerFunction, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'salesOrder' is set
        if (salesOrder == null) {
            throw new ApiException("Missing the required parameter 'salesOrder' when calling aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionToSalesOrderGet(Async)");
        }
        
        // verify the required parameter 'partnerFunction' is set
        if (partnerFunction == null) {
            throw new ApiException("Missing the required parameter 'partnerFunction' when calling aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionToSalesOrderGet(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionToSalesOrderGetCall(salesOrder, partnerFunction, select, expand, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get related A_SalesOrderType
     * 
     * @param salesOrder Sales Order (required)
     * @param partnerFunction The abbreviated form of the name that identifies the partner function. (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return Wrapper
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Wrapper aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionToSalesOrderGet(String salesOrder, String partnerFunction, List<String> select, List<String> expand) throws ApiException {
        ApiResponse<Wrapper> resp = aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionToSalesOrderGetWithHttpInfo(salesOrder, partnerFunction, select, expand);
        return resp.getData();
    }

    /**
     * Get related A_SalesOrderType
     * 
     * @param salesOrder Sales Order (required)
     * @param partnerFunction The abbreviated form of the name that identifies the partner function. (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return ApiResponse&lt;Wrapper&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Wrapper> aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionToSalesOrderGetWithHttpInfo(String salesOrder, String partnerFunction, List<String> select, List<String> expand) throws ApiException {
        com.squareup.okhttp.Call call = aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionToSalesOrderGetValidateBeforeCall(salesOrder, partnerFunction, select, expand, null, null);
        Type localVarReturnType = new TypeToken<Wrapper>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get related A_SalesOrderType (asynchronously)
     * 
     * @param salesOrder Sales Order (required)
     * @param partnerFunction The abbreviated form of the name that identifies the partner function. (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionToSalesOrderGetAsync(String salesOrder, String partnerFunction, List<String> select, List<String> expand, final ApiCallback<Wrapper> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionToSalesOrderGetValidateBeforeCall(salesOrder, partnerFunction, select, expand, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Wrapper>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for aSalesOrderSalesOrderToPartnerGet */
    private com.squareup.okhttp.Call aSalesOrderSalesOrderToPartnerGetCall(String salesOrder, Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_SalesOrder('{SalesOrder}')/to_Partner".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "SalesOrder" + "\\}", apiClient.escapeString(salesOrder.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (top != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$top", top));
        if (skip != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$skip", skip));
        if (filter != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$filter", filter));
        if (inlinecount != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$inlinecount", inlinecount));
        if (orderby != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$orderby", orderby));
        if (select != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$select", select));
        if (expand != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$expand", expand));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aSalesOrderSalesOrderToPartnerGetValidateBeforeCall(String salesOrder, Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'salesOrder' is set
        if (salesOrder == null) {
            throw new ApiException("Missing the required parameter 'salesOrder' when calling aSalesOrderSalesOrderToPartnerGet(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aSalesOrderSalesOrderToPartnerGetCall(salesOrder, top, skip, filter, inlinecount, orderby, select, expand, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get related A_SalesOrderHeaderPartner
     * 
     * @param salesOrder Sales Order (required)
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return Wrapper2
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Wrapper2 aSalesOrderSalesOrderToPartnerGet(String salesOrder, Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand) throws ApiException {
        ApiResponse<Wrapper2> resp = aSalesOrderSalesOrderToPartnerGetWithHttpInfo(salesOrder, top, skip, filter, inlinecount, orderby, select, expand);
        return resp.getData();
    }

    /**
     * Get related A_SalesOrderHeaderPartner
     * 
     * @param salesOrder Sales Order (required)
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return ApiResponse&lt;Wrapper2&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Wrapper2> aSalesOrderSalesOrderToPartnerGetWithHttpInfo(String salesOrder, Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand) throws ApiException {
        com.squareup.okhttp.Call call = aSalesOrderSalesOrderToPartnerGetValidateBeforeCall(salesOrder, top, skip, filter, inlinecount, orderby, select, expand, null, null);
        Type localVarReturnType = new TypeToken<Wrapper2>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get related A_SalesOrderHeaderPartner (asynchronously)
     * 
     * @param salesOrder Sales Order (required)
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aSalesOrderSalesOrderToPartnerGetAsync(String salesOrder, Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand, final ApiCallback<Wrapper2> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aSalesOrderSalesOrderToPartnerGetValidateBeforeCall(salesOrder, top, skip, filter, inlinecount, orderby, select, expand, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Wrapper2>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
