/*
 * Sales Order - Create, Read, Update, Delete (A2X)
 * You can use this service to integrate external  applications with sales order processing in SAP  S/4HANA Cloud. In every API call, you can make  use of the following operations:  - You can retrieve  sales orders. Apply any of the filters provided or  retrieve all existing data.  - You can create sales  orders. Note that you must use “deep insert”  requests (a header plus the following entities:  header partner, header pricing element, header  text, payment details, item, item partner, item  pricing element, and item text). You cannot create  entities without including any related entities.  - For  existing sales orders, you can create new items.  Note that you must use “deep insert” requests  (with the following entities: item partner, item pricing  element, and item text). You cannot create entities  without including any related entities.  - For existing  sales orders, you can update the header, header  partner, header pricing element, header text,  payment details, item, item partner, item pricing  element, and item text.  - For existing sales  orders, you can delete the header, header partner,  header pricing element, header text, payment  details, item, item partner, item pricing element,  and item text.  - You can accept or deny approval  requests for sales orders that cannot be processed  without the consent of an approver.
 *
 * OpenAPI spec version: 1 
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.sap.apibhub.sdk.api_sales_order_srv.api;

import com.sap.apibhub.sdk.client.ApiCallback;
import com.sap.apibhub.sdk.client.ApiClient;
import com.sap.apibhub.sdk.client.ApiException;
import com.sap.apibhub.sdk.client.ApiResponse;
import com.sap.apibhub.sdk.client.Configuration;
import com.sap.apibhub.sdk.client.Pair;
import com.sap.apibhub.sdk.client.ProgressRequestBody;
import com.sap.apibhub.sdk.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.sap.apibhub.sdk.api_sales_order_srv.model.ASalesOrderScheduleLineType;
import com.sap.apibhub.sdk.api_sales_order_srv.model.OdataError;
import com.sap.apibhub.sdk.api_sales_order_srv.model.Wrapper8;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ASalesOrderScheduleLineApi {
    private ApiClient apiClient;

    public ASalesOrderScheduleLineApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ASalesOrderScheduleLineApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /* Build call for aSalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToScheduleLineGet */
    private com.squareup.okhttp.Call aSalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToScheduleLineGetCall(String salesOrder, String salesOrderItem, Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_SalesOrderItem(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}')/to_ScheduleLine".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "SalesOrder" + "\\}", apiClient.escapeString(salesOrder.toString()))
        .replaceAll("\\{" + "SalesOrderItem" + "\\}", apiClient.escapeString(salesOrderItem.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (top != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$top", top));
        if (skip != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$skip", skip));
        if (filter != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$filter", filter));
        if (inlinecount != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$inlinecount", inlinecount));
        if (orderby != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$orderby", orderby));
        if (select != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$select", select));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aSalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToScheduleLineGetValidateBeforeCall(String salesOrder, String salesOrderItem, Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'salesOrder' is set
        if (salesOrder == null) {
            throw new ApiException("Missing the required parameter 'salesOrder' when calling aSalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToScheduleLineGet(Async)");
        }
        
        // verify the required parameter 'salesOrderItem' is set
        if (salesOrderItem == null) {
            throw new ApiException("Missing the required parameter 'salesOrderItem' when calling aSalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToScheduleLineGet(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aSalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToScheduleLineGetCall(salesOrder, salesOrderItem, top, skip, filter, inlinecount, orderby, select, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get related A_SalesOrderScheduleLine
     * 
     * @param salesOrder Sales Order (required)
     * @param salesOrderItem Sales Order Item (required)
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @return Wrapper8
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Wrapper8 aSalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToScheduleLineGet(String salesOrder, String salesOrderItem, Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select) throws ApiException {
        ApiResponse<Wrapper8> resp = aSalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToScheduleLineGetWithHttpInfo(salesOrder, salesOrderItem, top, skip, filter, inlinecount, orderby, select);
        return resp.getData();
    }

    /**
     * Get related A_SalesOrderScheduleLine
     * 
     * @param salesOrder Sales Order (required)
     * @param salesOrderItem Sales Order Item (required)
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @return ApiResponse&lt;Wrapper8&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Wrapper8> aSalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToScheduleLineGetWithHttpInfo(String salesOrder, String salesOrderItem, Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select) throws ApiException {
        com.squareup.okhttp.Call call = aSalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToScheduleLineGetValidateBeforeCall(salesOrder, salesOrderItem, top, skip, filter, inlinecount, orderby, select, null, null);
        Type localVarReturnType = new TypeToken<Wrapper8>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get related A_SalesOrderScheduleLine (asynchronously)
     * 
     * @param salesOrder Sales Order (required)
     * @param salesOrderItem Sales Order Item (required)
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aSalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToScheduleLineGetAsync(String salesOrder, String salesOrderItem, Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, final ApiCallback<Wrapper8> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aSalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToScheduleLineGetValidateBeforeCall(salesOrder, salesOrderItem, top, skip, filter, inlinecount, orderby, select, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Wrapper8>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for aSalesOrderScheduleLineGet */
    private com.squareup.okhttp.Call aSalesOrderScheduleLineGetCall(Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_SalesOrderScheduleLine".replaceAll("\\{format\\}","json");

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (top != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$top", top));
        if (skip != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$skip", skip));
        if (filter != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$filter", filter));
        if (inlinecount != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$inlinecount", inlinecount));
        if (orderby != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$orderby", orderby));
        if (select != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$select", select));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aSalesOrderScheduleLineGetValidateBeforeCall(Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        
        com.squareup.okhttp.Call call = aSalesOrderScheduleLineGetCall(top, skip, filter, inlinecount, orderby, select, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get entities from A_SalesOrderScheduleLine
     * 
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @return Wrapper8
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Wrapper8 aSalesOrderScheduleLineGet(Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select) throws ApiException {
        ApiResponse<Wrapper8> resp = aSalesOrderScheduleLineGetWithHttpInfo(top, skip, filter, inlinecount, orderby, select);
        return resp.getData();
    }

    /**
     * Get entities from A_SalesOrderScheduleLine
     * 
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @return ApiResponse&lt;Wrapper8&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Wrapper8> aSalesOrderScheduleLineGetWithHttpInfo(Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select) throws ApiException {
        com.squareup.okhttp.Call call = aSalesOrderScheduleLineGetValidateBeforeCall(top, skip, filter, inlinecount, orderby, select, null, null);
        Type localVarReturnType = new TypeToken<Wrapper8>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get entities from A_SalesOrderScheduleLine (asynchronously)
     * 
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aSalesOrderScheduleLineGetAsync(Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, final ApiCallback<Wrapper8> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aSalesOrderScheduleLineGetValidateBeforeCall(top, skip, filter, inlinecount, orderby, select, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Wrapper8>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for aSalesOrderScheduleLineSalesOrderSalesOrderSalesOrderItemSalesOrderItemScheduleLineScheduleLineGet */
    private com.squareup.okhttp.Call aSalesOrderScheduleLineSalesOrderSalesOrderSalesOrderItemSalesOrderItemScheduleLineScheduleLineGetCall(String salesOrder, String salesOrderItem, String scheduleLine, List<String> select, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_SalesOrderScheduleLine(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}',ScheduleLine='{ScheduleLine}')".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "SalesOrder" + "\\}", apiClient.escapeString(salesOrder.toString()))
        .replaceAll("\\{" + "SalesOrderItem" + "\\}", apiClient.escapeString(salesOrderItem.toString()))
        .replaceAll("\\{" + "ScheduleLine" + "\\}", apiClient.escapeString(scheduleLine.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (select != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$select", select));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aSalesOrderScheduleLineSalesOrderSalesOrderSalesOrderItemSalesOrderItemScheduleLineScheduleLineGetValidateBeforeCall(String salesOrder, String salesOrderItem, String scheduleLine, List<String> select, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'salesOrder' is set
        if (salesOrder == null) {
            throw new ApiException("Missing the required parameter 'salesOrder' when calling aSalesOrderScheduleLineSalesOrderSalesOrderSalesOrderItemSalesOrderItemScheduleLineScheduleLineGet(Async)");
        }
        
        // verify the required parameter 'salesOrderItem' is set
        if (salesOrderItem == null) {
            throw new ApiException("Missing the required parameter 'salesOrderItem' when calling aSalesOrderScheduleLineSalesOrderSalesOrderSalesOrderItemSalesOrderItemScheduleLineScheduleLineGet(Async)");
        }
        
        // verify the required parameter 'scheduleLine' is set
        if (scheduleLine == null) {
            throw new ApiException("Missing the required parameter 'scheduleLine' when calling aSalesOrderScheduleLineSalesOrderSalesOrderSalesOrderItemSalesOrderItemScheduleLineScheduleLineGet(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aSalesOrderScheduleLineSalesOrderSalesOrderSalesOrderItemSalesOrderItemScheduleLineScheduleLineGetCall(salesOrder, salesOrderItem, scheduleLine, select, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get entity from A_SalesOrderScheduleLine by key
     * 
     * @param salesOrder The number that uniquely identifies the sales document. (required)
     * @param salesOrderItem The number that uniquely identifies the item in the sales document. (required)
     * @param scheduleLine The number that uniquely identifies the schedule line in the sales document.   When an item has more than one schedule line, the system automatically assigns a unique number to each line. The number is displayed in the details screens for schedule lines.The schedule line number serves internal purposes and does not, for example, determine the sequence of schedule lines in the overview screen. The schedule lines on the overview screen are sorted by date. (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @return ASalesOrderScheduleLineType
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ASalesOrderScheduleLineType aSalesOrderScheduleLineSalesOrderSalesOrderSalesOrderItemSalesOrderItemScheduleLineScheduleLineGet(String salesOrder, String salesOrderItem, String scheduleLine, List<String> select) throws ApiException {
        ApiResponse<ASalesOrderScheduleLineType> resp = aSalesOrderScheduleLineSalesOrderSalesOrderSalesOrderItemSalesOrderItemScheduleLineScheduleLineGetWithHttpInfo(salesOrder, salesOrderItem, scheduleLine, select);
        return resp.getData();
    }

    /**
     * Get entity from A_SalesOrderScheduleLine by key
     * 
     * @param salesOrder The number that uniquely identifies the sales document. (required)
     * @param salesOrderItem The number that uniquely identifies the item in the sales document. (required)
     * @param scheduleLine The number that uniquely identifies the schedule line in the sales document.   When an item has more than one schedule line, the system automatically assigns a unique number to each line. The number is displayed in the details screens for schedule lines.The schedule line number serves internal purposes and does not, for example, determine the sequence of schedule lines in the overview screen. The schedule lines on the overview screen are sorted by date. (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @return ApiResponse&lt;ASalesOrderScheduleLineType&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<ASalesOrderScheduleLineType> aSalesOrderScheduleLineSalesOrderSalesOrderSalesOrderItemSalesOrderItemScheduleLineScheduleLineGetWithHttpInfo(String salesOrder, String salesOrderItem, String scheduleLine, List<String> select) throws ApiException {
        com.squareup.okhttp.Call call = aSalesOrderScheduleLineSalesOrderSalesOrderSalesOrderItemSalesOrderItemScheduleLineScheduleLineGetValidateBeforeCall(salesOrder, salesOrderItem, scheduleLine, select, null, null);
        Type localVarReturnType = new TypeToken<ASalesOrderScheduleLineType>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get entity from A_SalesOrderScheduleLine by key (asynchronously)
     * 
     * @param salesOrder The number that uniquely identifies the sales document. (required)
     * @param salesOrderItem The number that uniquely identifies the item in the sales document. (required)
     * @param scheduleLine The number that uniquely identifies the schedule line in the sales document.   When an item has more than one schedule line, the system automatically assigns a unique number to each line. The number is displayed in the details screens for schedule lines.The schedule line number serves internal purposes and does not, for example, determine the sequence of schedule lines in the overview screen. The schedule lines on the overview screen are sorted by date. (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aSalesOrderScheduleLineSalesOrderSalesOrderSalesOrderItemSalesOrderItemScheduleLineScheduleLineGetAsync(String salesOrder, String salesOrderItem, String scheduleLine, List<String> select, final ApiCallback<ASalesOrderScheduleLineType> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aSalesOrderScheduleLineSalesOrderSalesOrderSalesOrderItemSalesOrderItemScheduleLineScheduleLineGetValidateBeforeCall(salesOrder, salesOrderItem, scheduleLine, select, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<ASalesOrderScheduleLineType>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
