/*
 * Sales Order - Create, Read, Update, Delete (A2X)
 * You can use this service to integrate external  applications with sales order processing in SAP  S/4HANA Cloud. In every API call, you can make  use of the following operations:  - You can retrieve  sales orders. Apply any of the filters provided or  retrieve all existing data.  - You can create sales  orders. Note that you must use “deep insert”  requests (a header plus the following entities:  header partner, header pricing element, header  text, payment details, item, item partner, item  pricing element, and item text). You cannot create  entities without including any related entities.  - For  existing sales orders, you can create new items.  Note that you must use “deep insert” requests  (with the following entities: item partner, item pricing  element, and item text). You cannot create entities  without including any related entities.  - For existing  sales orders, you can update the header, header  partner, header pricing element, header text,  payment details, item, item partner, item pricing  element, and item text.  - For existing sales  orders, you can delete the header, header partner,  header pricing element, header text, payment  details, item, item partner, item pricing element,  and item text.  - You can accept or deny approval  requests for sales orders that cannot be processed  without the consent of an approver.
 *
 * OpenAPI spec version: 1 
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.sap.apibhub.sdk.api_sales_order_srv.api;

import com.sap.apibhub.sdk.client.ApiCallback;
import com.sap.apibhub.sdk.client.ApiClient;
import com.sap.apibhub.sdk.client.ApiException;
import com.sap.apibhub.sdk.client.ApiResponse;
import com.sap.apibhub.sdk.client.Configuration;
import com.sap.apibhub.sdk.client.Pair;
import com.sap.apibhub.sdk.client.ProgressRequestBody;
import com.sap.apibhub.sdk.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.sap.apibhub.sdk.api_sales_order_srv.model.APISALESORDERSRVASalesOrderItemTypeCreate;
import com.sap.apibhub.sdk.api_sales_order_srv.model.APISALESORDERSRVASalesOrderTypeCreate;
import com.sap.apibhub.sdk.api_sales_order_srv.model.ASalesOrderItemType;
import com.sap.apibhub.sdk.api_sales_order_srv.model.ASalesOrderType;
import com.sap.apibhub.sdk.api_sales_order_srv.model.ModifiedASalesOrderType;
import com.sap.apibhub.sdk.api_sales_order_srv.model.OdataError;
import com.sap.apibhub.sdk.api_sales_order_srv.model.Wrapper;
import com.sap.apibhub.sdk.api_sales_order_srv.model.Wrapper1;
import com.sap.apibhub.sdk.api_sales_order_srv.model.Wrapper2;
import com.sap.apibhub.sdk.api_sales_order_srv.model.Wrapper3;
import com.sap.apibhub.sdk.api_sales_order_srv.model.Wrapper4;
import com.sap.apibhub.sdk.api_sales_order_srv.model.Wrapper5;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ASalesOrderApi {
    private ApiClient apiClient;

    public ASalesOrderApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ASalesOrderApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /* Build call for aSalesOrderGet */
    private com.squareup.okhttp.Call aSalesOrderGetCall(Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_SalesOrder".replaceAll("\\{format\\}","json");

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (top != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$top", top));
        if (skip != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$skip", skip));
        if (filter != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$filter", filter));
        if (inlinecount != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$inlinecount", inlinecount));
        if (orderby != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$orderby", orderby));
        if (select != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$select", select));
        if (expand != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$expand", expand));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aSalesOrderGetValidateBeforeCall(Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        
        com.squareup.okhttp.Call call = aSalesOrderGetCall(top, skip, filter, inlinecount, orderby, select, expand, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get entities from A_SalesOrder
     * 
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return Wrapper
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Wrapper aSalesOrderGet(Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand) throws ApiException {
        ApiResponse<Wrapper> resp = aSalesOrderGetWithHttpInfo(top, skip, filter, inlinecount, orderby, select, expand);
        return resp.getData();
    }

    /**
     * Get entities from A_SalesOrder
     * 
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return ApiResponse&lt;Wrapper&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Wrapper> aSalesOrderGetWithHttpInfo(Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand) throws ApiException {
        com.squareup.okhttp.Call call = aSalesOrderGetValidateBeforeCall(top, skip, filter, inlinecount, orderby, select, expand, null, null);
        Type localVarReturnType = new TypeToken<Wrapper>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get entities from A_SalesOrder (asynchronously)
     * 
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aSalesOrderGetAsync(Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand, final ApiCallback<Wrapper> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aSalesOrderGetValidateBeforeCall(top, skip, filter, inlinecount, orderby, select, expand, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Wrapper>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionToSalesOrderGet */
    private com.squareup.okhttp.Call aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionToSalesOrderGetCall(String salesOrder, String partnerFunction, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_SalesOrderHeaderPartner(SalesOrder='{SalesOrder}',PartnerFunction='{PartnerFunction}')/to_SalesOrder".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "SalesOrder" + "\\}", apiClient.escapeString(salesOrder.toString()))
        .replaceAll("\\{" + "PartnerFunction" + "\\}", apiClient.escapeString(partnerFunction.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (select != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$select", select));
        if (expand != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$expand", expand));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionToSalesOrderGetValidateBeforeCall(String salesOrder, String partnerFunction, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'salesOrder' is set
        if (salesOrder == null) {
            throw new ApiException("Missing the required parameter 'salesOrder' when calling aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionToSalesOrderGet(Async)");
        }
        
        // verify the required parameter 'partnerFunction' is set
        if (partnerFunction == null) {
            throw new ApiException("Missing the required parameter 'partnerFunction' when calling aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionToSalesOrderGet(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionToSalesOrderGetCall(salesOrder, partnerFunction, select, expand, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get related A_SalesOrderType
     * 
     * @param salesOrder Sales Order (required)
     * @param partnerFunction The abbreviated form of the name that identifies the partner function. (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return Wrapper
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Wrapper aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionToSalesOrderGet(String salesOrder, String partnerFunction, List<String> select, List<String> expand) throws ApiException {
        ApiResponse<Wrapper> resp = aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionToSalesOrderGetWithHttpInfo(salesOrder, partnerFunction, select, expand);
        return resp.getData();
    }

    /**
     * Get related A_SalesOrderType
     * 
     * @param salesOrder Sales Order (required)
     * @param partnerFunction The abbreviated form of the name that identifies the partner function. (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return ApiResponse&lt;Wrapper&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Wrapper> aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionToSalesOrderGetWithHttpInfo(String salesOrder, String partnerFunction, List<String> select, List<String> expand) throws ApiException {
        com.squareup.okhttp.Call call = aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionToSalesOrderGetValidateBeforeCall(salesOrder, partnerFunction, select, expand, null, null);
        Type localVarReturnType = new TypeToken<Wrapper>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get related A_SalesOrderType (asynchronously)
     * 
     * @param salesOrder Sales Order (required)
     * @param partnerFunction The abbreviated form of the name that identifies the partner function. (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionToSalesOrderGetAsync(String salesOrder, String partnerFunction, List<String> select, List<String> expand, final ApiCallback<Wrapper> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aSalesOrderHeaderPartnerSalesOrderSalesOrderPartnerFunctionPartnerFunctionToSalesOrderGetValidateBeforeCall(salesOrder, partnerFunction, select, expand, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Wrapper>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for aSalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet */
    private com.squareup.okhttp.Call aSalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGetCall(String salesOrder, String pricingProcedureStep, String pricingProcedureCounter, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_SalesOrderHeaderPrElement(SalesOrder='{SalesOrder}',PricingProcedureStep='{PricingProcedureStep}',PricingProcedureCounter='{PricingProcedureCounter}')/to_SalesOrder".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "SalesOrder" + "\\}", apiClient.escapeString(salesOrder.toString()))
        .replaceAll("\\{" + "PricingProcedureStep" + "\\}", apiClient.escapeString(pricingProcedureStep.toString()))
        .replaceAll("\\{" + "PricingProcedureCounter" + "\\}", apiClient.escapeString(pricingProcedureCounter.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (select != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$select", select));
        if (expand != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$expand", expand));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aSalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGetValidateBeforeCall(String salesOrder, String pricingProcedureStep, String pricingProcedureCounter, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'salesOrder' is set
        if (salesOrder == null) {
            throw new ApiException("Missing the required parameter 'salesOrder' when calling aSalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet(Async)");
        }
        
        // verify the required parameter 'pricingProcedureStep' is set
        if (pricingProcedureStep == null) {
            throw new ApiException("Missing the required parameter 'pricingProcedureStep' when calling aSalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet(Async)");
        }
        
        // verify the required parameter 'pricingProcedureCounter' is set
        if (pricingProcedureCounter == null) {
            throw new ApiException("Missing the required parameter 'pricingProcedureCounter' when calling aSalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aSalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGetCall(salesOrder, pricingProcedureStep, pricingProcedureCounter, select, expand, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get related A_SalesOrderType
     * 
     * @param salesOrder Sales Order (required)
     * @param pricingProcedureStep Number that determines the sequence of the condition within a procedure. (required)
     * @param pricingProcedureCounter Condition Counter   Access number of the conditions within a step in the pricing procedure.   During automatic pricing, the system takes into account the sequence specified by the counter. (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return Wrapper
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Wrapper aSalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet(String salesOrder, String pricingProcedureStep, String pricingProcedureCounter, List<String> select, List<String> expand) throws ApiException {
        ApiResponse<Wrapper> resp = aSalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGetWithHttpInfo(salesOrder, pricingProcedureStep, pricingProcedureCounter, select, expand);
        return resp.getData();
    }

    /**
     * Get related A_SalesOrderType
     * 
     * @param salesOrder Sales Order (required)
     * @param pricingProcedureStep Number that determines the sequence of the condition within a procedure. (required)
     * @param pricingProcedureCounter Condition Counter   Access number of the conditions within a step in the pricing procedure.   During automatic pricing, the system takes into account the sequence specified by the counter. (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return ApiResponse&lt;Wrapper&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Wrapper> aSalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGetWithHttpInfo(String salesOrder, String pricingProcedureStep, String pricingProcedureCounter, List<String> select, List<String> expand) throws ApiException {
        com.squareup.okhttp.Call call = aSalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGetValidateBeforeCall(salesOrder, pricingProcedureStep, pricingProcedureCounter, select, expand, null, null);
        Type localVarReturnType = new TypeToken<Wrapper>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get related A_SalesOrderType (asynchronously)
     * 
     * @param salesOrder Sales Order (required)
     * @param pricingProcedureStep Number that determines the sequence of the condition within a procedure. (required)
     * @param pricingProcedureCounter Condition Counter   Access number of the conditions within a step in the pricing procedure.   During automatic pricing, the system takes into account the sequence specified by the counter. (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aSalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGetAsync(String salesOrder, String pricingProcedureStep, String pricingProcedureCounter, List<String> select, List<String> expand, final ApiCallback<Wrapper> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aSalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGetValidateBeforeCall(salesOrder, pricingProcedureStep, pricingProcedureCounter, select, expand, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Wrapper>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for aSalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderGet */
    private com.squareup.okhttp.Call aSalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderGetCall(String salesOrder, String salesOrderItem, String partnerFunction, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_SalesOrderItemPartner(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}',PartnerFunction='{PartnerFunction}')/to_SalesOrder".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "SalesOrder" + "\\}", apiClient.escapeString(salesOrder.toString()))
        .replaceAll("\\{" + "SalesOrderItem" + "\\}", apiClient.escapeString(salesOrderItem.toString()))
        .replaceAll("\\{" + "PartnerFunction" + "\\}", apiClient.escapeString(partnerFunction.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (select != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$select", select));
        if (expand != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$expand", expand));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aSalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderGetValidateBeforeCall(String salesOrder, String salesOrderItem, String partnerFunction, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'salesOrder' is set
        if (salesOrder == null) {
            throw new ApiException("Missing the required parameter 'salesOrder' when calling aSalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderGet(Async)");
        }
        
        // verify the required parameter 'salesOrderItem' is set
        if (salesOrderItem == null) {
            throw new ApiException("Missing the required parameter 'salesOrderItem' when calling aSalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderGet(Async)");
        }
        
        // verify the required parameter 'partnerFunction' is set
        if (partnerFunction == null) {
            throw new ApiException("Missing the required parameter 'partnerFunction' when calling aSalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderGet(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aSalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderGetCall(salesOrder, salesOrderItem, partnerFunction, select, expand, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get related A_SalesOrderType
     * 
     * @param salesOrder Sales Order (required)
     * @param salesOrderItem Sales Order Item (required)
     * @param partnerFunction The abbreviated form of the name that identifies the partner function. (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return Wrapper
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Wrapper aSalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderGet(String salesOrder, String salesOrderItem, String partnerFunction, List<String> select, List<String> expand) throws ApiException {
        ApiResponse<Wrapper> resp = aSalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderGetWithHttpInfo(salesOrder, salesOrderItem, partnerFunction, select, expand);
        return resp.getData();
    }

    /**
     * Get related A_SalesOrderType
     * 
     * @param salesOrder Sales Order (required)
     * @param salesOrderItem Sales Order Item (required)
     * @param partnerFunction The abbreviated form of the name that identifies the partner function. (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return ApiResponse&lt;Wrapper&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Wrapper> aSalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderGetWithHttpInfo(String salesOrder, String salesOrderItem, String partnerFunction, List<String> select, List<String> expand) throws ApiException {
        com.squareup.okhttp.Call call = aSalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderGetValidateBeforeCall(salesOrder, salesOrderItem, partnerFunction, select, expand, null, null);
        Type localVarReturnType = new TypeToken<Wrapper>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get related A_SalesOrderType (asynchronously)
     * 
     * @param salesOrder Sales Order (required)
     * @param salesOrderItem Sales Order Item (required)
     * @param partnerFunction The abbreviated form of the name that identifies the partner function. (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aSalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderGetAsync(String salesOrder, String salesOrderItem, String partnerFunction, List<String> select, List<String> expand, final ApiCallback<Wrapper> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aSalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderGetValidateBeforeCall(salesOrder, salesOrderItem, partnerFunction, select, expand, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Wrapper>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet */
    private com.squareup.okhttp.Call aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGetCall(String salesOrder, String salesOrderItem, String pricingProcedureStep, String pricingProcedureCounter, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_SalesOrderItemPrElement(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}',PricingProcedureStep='{PricingProcedureStep}',PricingProcedureCounter='{PricingProcedureCounter}')/to_SalesOrder".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "SalesOrder" + "\\}", apiClient.escapeString(salesOrder.toString()))
        .replaceAll("\\{" + "SalesOrderItem" + "\\}", apiClient.escapeString(salesOrderItem.toString()))
        .replaceAll("\\{" + "PricingProcedureStep" + "\\}", apiClient.escapeString(pricingProcedureStep.toString()))
        .replaceAll("\\{" + "PricingProcedureCounter" + "\\}", apiClient.escapeString(pricingProcedureCounter.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (select != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$select", select));
        if (expand != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$expand", expand));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGetValidateBeforeCall(String salesOrder, String salesOrderItem, String pricingProcedureStep, String pricingProcedureCounter, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'salesOrder' is set
        if (salesOrder == null) {
            throw new ApiException("Missing the required parameter 'salesOrder' when calling aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet(Async)");
        }
        
        // verify the required parameter 'salesOrderItem' is set
        if (salesOrderItem == null) {
            throw new ApiException("Missing the required parameter 'salesOrderItem' when calling aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet(Async)");
        }
        
        // verify the required parameter 'pricingProcedureStep' is set
        if (pricingProcedureStep == null) {
            throw new ApiException("Missing the required parameter 'pricingProcedureStep' when calling aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet(Async)");
        }
        
        // verify the required parameter 'pricingProcedureCounter' is set
        if (pricingProcedureCounter == null) {
            throw new ApiException("Missing the required parameter 'pricingProcedureCounter' when calling aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGetCall(salesOrder, salesOrderItem, pricingProcedureStep, pricingProcedureCounter, select, expand, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get related A_SalesOrderType
     * 
     * @param salesOrder Sales Order (required)
     * @param salesOrderItem Sales Order Item (required)
     * @param pricingProcedureStep Number that determines the sequence of the condition within a procedure. (required)
     * @param pricingProcedureCounter Condition Counter   Access number of the conditions within a step in the pricing procedure.   During automatic pricing, the system takes into account the sequence specified by the counter. (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return Wrapper
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Wrapper aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet(String salesOrder, String salesOrderItem, String pricingProcedureStep, String pricingProcedureCounter, List<String> select, List<String> expand) throws ApiException {
        ApiResponse<Wrapper> resp = aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGetWithHttpInfo(salesOrder, salesOrderItem, pricingProcedureStep, pricingProcedureCounter, select, expand);
        return resp.getData();
    }

    /**
     * Get related A_SalesOrderType
     * 
     * @param salesOrder Sales Order (required)
     * @param salesOrderItem Sales Order Item (required)
     * @param pricingProcedureStep Number that determines the sequence of the condition within a procedure. (required)
     * @param pricingProcedureCounter Condition Counter   Access number of the conditions within a step in the pricing procedure.   During automatic pricing, the system takes into account the sequence specified by the counter. (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return ApiResponse&lt;Wrapper&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Wrapper> aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGetWithHttpInfo(String salesOrder, String salesOrderItem, String pricingProcedureStep, String pricingProcedureCounter, List<String> select, List<String> expand) throws ApiException {
        com.squareup.okhttp.Call call = aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGetValidateBeforeCall(salesOrder, salesOrderItem, pricingProcedureStep, pricingProcedureCounter, select, expand, null, null);
        Type localVarReturnType = new TypeToken<Wrapper>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get related A_SalesOrderType (asynchronously)
     * 
     * @param salesOrder Sales Order (required)
     * @param salesOrderItem Sales Order Item (required)
     * @param pricingProcedureStep Number that determines the sequence of the condition within a procedure. (required)
     * @param pricingProcedureCounter Condition Counter   Access number of the conditions within a step in the pricing procedure.   During automatic pricing, the system takes into account the sequence specified by the counter. (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGetAsync(String salesOrder, String salesOrderItem, String pricingProcedureStep, String pricingProcedureCounter, List<String> select, List<String> expand, final ApiCallback<Wrapper> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGetValidateBeforeCall(salesOrder, salesOrderItem, pricingProcedureStep, pricingProcedureCounter, select, expand, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Wrapper>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for aSalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToSalesOrderGet */
    private com.squareup.okhttp.Call aSalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToSalesOrderGetCall(String salesOrder, String salesOrderItem, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_SalesOrderItem(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}')/to_SalesOrder".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "SalesOrder" + "\\}", apiClient.escapeString(salesOrder.toString()))
        .replaceAll("\\{" + "SalesOrderItem" + "\\}", apiClient.escapeString(salesOrderItem.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (select != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$select", select));
        if (expand != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$expand", expand));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aSalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToSalesOrderGetValidateBeforeCall(String salesOrder, String salesOrderItem, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'salesOrder' is set
        if (salesOrder == null) {
            throw new ApiException("Missing the required parameter 'salesOrder' when calling aSalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToSalesOrderGet(Async)");
        }
        
        // verify the required parameter 'salesOrderItem' is set
        if (salesOrderItem == null) {
            throw new ApiException("Missing the required parameter 'salesOrderItem' when calling aSalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToSalesOrderGet(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aSalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToSalesOrderGetCall(salesOrder, salesOrderItem, select, expand, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get related A_SalesOrderType
     * 
     * @param salesOrder Sales Order (required)
     * @param salesOrderItem Sales Order Item (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return Wrapper
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Wrapper aSalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToSalesOrderGet(String salesOrder, String salesOrderItem, List<String> select, List<String> expand) throws ApiException {
        ApiResponse<Wrapper> resp = aSalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToSalesOrderGetWithHttpInfo(salesOrder, salesOrderItem, select, expand);
        return resp.getData();
    }

    /**
     * Get related A_SalesOrderType
     * 
     * @param salesOrder Sales Order (required)
     * @param salesOrderItem Sales Order Item (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return ApiResponse&lt;Wrapper&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Wrapper> aSalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToSalesOrderGetWithHttpInfo(String salesOrder, String salesOrderItem, List<String> select, List<String> expand) throws ApiException {
        com.squareup.okhttp.Call call = aSalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToSalesOrderGetValidateBeforeCall(salesOrder, salesOrderItem, select, expand, null, null);
        Type localVarReturnType = new TypeToken<Wrapper>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get related A_SalesOrderType (asynchronously)
     * 
     * @param salesOrder Sales Order (required)
     * @param salesOrderItem Sales Order Item (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aSalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToSalesOrderGetAsync(String salesOrder, String salesOrderItem, List<String> select, List<String> expand, final ApiCallback<Wrapper> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aSalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToSalesOrderGetValidateBeforeCall(salesOrder, salesOrderItem, select, expand, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Wrapper>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for aSalesOrderItemTextSalesOrderSalesOrderSalesOrderItemSalesOrderItemLanguageLanguageLongTextIDLongTextIDToSalesOrderGet */
    private com.squareup.okhttp.Call aSalesOrderItemTextSalesOrderSalesOrderSalesOrderItemSalesOrderItemLanguageLanguageLongTextIDLongTextIDToSalesOrderGetCall(String salesOrder, String salesOrderItem, String language, String longTextID, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_SalesOrderItemText(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}',Language='{Language}',LongTextID='{LongTextID}')/to_SalesOrder".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "SalesOrder" + "\\}", apiClient.escapeString(salesOrder.toString()))
        .replaceAll("\\{" + "SalesOrderItem" + "\\}", apiClient.escapeString(salesOrderItem.toString()))
        .replaceAll("\\{" + "Language" + "\\}", apiClient.escapeString(language.toString()))
        .replaceAll("\\{" + "LongTextID" + "\\}", apiClient.escapeString(longTextID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (select != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$select", select));
        if (expand != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$expand", expand));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aSalesOrderItemTextSalesOrderSalesOrderSalesOrderItemSalesOrderItemLanguageLanguageLongTextIDLongTextIDToSalesOrderGetValidateBeforeCall(String salesOrder, String salesOrderItem, String language, String longTextID, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'salesOrder' is set
        if (salesOrder == null) {
            throw new ApiException("Missing the required parameter 'salesOrder' when calling aSalesOrderItemTextSalesOrderSalesOrderSalesOrderItemSalesOrderItemLanguageLanguageLongTextIDLongTextIDToSalesOrderGet(Async)");
        }
        
        // verify the required parameter 'salesOrderItem' is set
        if (salesOrderItem == null) {
            throw new ApiException("Missing the required parameter 'salesOrderItem' when calling aSalesOrderItemTextSalesOrderSalesOrderSalesOrderItemSalesOrderItemLanguageLanguageLongTextIDLongTextIDToSalesOrderGet(Async)");
        }
        
        // verify the required parameter 'language' is set
        if (language == null) {
            throw new ApiException("Missing the required parameter 'language' when calling aSalesOrderItemTextSalesOrderSalesOrderSalesOrderItemSalesOrderItemLanguageLanguageLongTextIDLongTextIDToSalesOrderGet(Async)");
        }
        
        // verify the required parameter 'longTextID' is set
        if (longTextID == null) {
            throw new ApiException("Missing the required parameter 'longTextID' when calling aSalesOrderItemTextSalesOrderSalesOrderSalesOrderItemSalesOrderItemLanguageLanguageLongTextIDLongTextIDToSalesOrderGet(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aSalesOrderItemTextSalesOrderSalesOrderSalesOrderItemSalesOrderItemLanguageLanguageLongTextIDLongTextIDToSalesOrderGetCall(salesOrder, salesOrderItem, language, longTextID, select, expand, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get related A_SalesOrderType
     * 
     * @param salesOrder Sales Order (required)
     * @param salesOrderItem Sales Order Item (required)
     * @param language The language key indicates   - the language in which texts are displayed,- the language in which you enter texts,- the language in which the system prints texts. (required)
     * @param longTextID The text ID defines the various types of texts related to a text object. For example, the object \&quot;TEXT\&quot; (standard texts) can have the following text IDs:   ST for user-specific standard texts (individual texts)SYST for cross-application system textsvarious IDs for specific application departments. You must have the appropriate access authorization in order to access these texts. (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return Wrapper
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Wrapper aSalesOrderItemTextSalesOrderSalesOrderSalesOrderItemSalesOrderItemLanguageLanguageLongTextIDLongTextIDToSalesOrderGet(String salesOrder, String salesOrderItem, String language, String longTextID, List<String> select, List<String> expand) throws ApiException {
        ApiResponse<Wrapper> resp = aSalesOrderItemTextSalesOrderSalesOrderSalesOrderItemSalesOrderItemLanguageLanguageLongTextIDLongTextIDToSalesOrderGetWithHttpInfo(salesOrder, salesOrderItem, language, longTextID, select, expand);
        return resp.getData();
    }

    /**
     * Get related A_SalesOrderType
     * 
     * @param salesOrder Sales Order (required)
     * @param salesOrderItem Sales Order Item (required)
     * @param language The language key indicates   - the language in which texts are displayed,- the language in which you enter texts,- the language in which the system prints texts. (required)
     * @param longTextID The text ID defines the various types of texts related to a text object. For example, the object \&quot;TEXT\&quot; (standard texts) can have the following text IDs:   ST for user-specific standard texts (individual texts)SYST for cross-application system textsvarious IDs for specific application departments. You must have the appropriate access authorization in order to access these texts. (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return ApiResponse&lt;Wrapper&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Wrapper> aSalesOrderItemTextSalesOrderSalesOrderSalesOrderItemSalesOrderItemLanguageLanguageLongTextIDLongTextIDToSalesOrderGetWithHttpInfo(String salesOrder, String salesOrderItem, String language, String longTextID, List<String> select, List<String> expand) throws ApiException {
        com.squareup.okhttp.Call call = aSalesOrderItemTextSalesOrderSalesOrderSalesOrderItemSalesOrderItemLanguageLanguageLongTextIDLongTextIDToSalesOrderGetValidateBeforeCall(salesOrder, salesOrderItem, language, longTextID, select, expand, null, null);
        Type localVarReturnType = new TypeToken<Wrapper>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get related A_SalesOrderType (asynchronously)
     * 
     * @param salesOrder Sales Order (required)
     * @param salesOrderItem Sales Order Item (required)
     * @param language The language key indicates   - the language in which texts are displayed,- the language in which you enter texts,- the language in which the system prints texts. (required)
     * @param longTextID The text ID defines the various types of texts related to a text object. For example, the object \&quot;TEXT\&quot; (standard texts) can have the following text IDs:   ST for user-specific standard texts (individual texts)SYST for cross-application system textsvarious IDs for specific application departments. You must have the appropriate access authorization in order to access these texts. (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aSalesOrderItemTextSalesOrderSalesOrderSalesOrderItemSalesOrderItemLanguageLanguageLongTextIDLongTextIDToSalesOrderGetAsync(String salesOrder, String salesOrderItem, String language, String longTextID, List<String> select, List<String> expand, final ApiCallback<Wrapper> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aSalesOrderItemTextSalesOrderSalesOrderSalesOrderItemSalesOrderItemLanguageLanguageLongTextIDLongTextIDToSalesOrderGetValidateBeforeCall(salesOrder, salesOrderItem, language, longTextID, select, expand, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Wrapper>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for aSalesOrderPost */
    private com.squareup.okhttp.Call aSalesOrderPostCall(APISALESORDERSRVASalesOrderTypeCreate aSalesOrderType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = aSalesOrderType;
        
        // create path and map variables
        String localVarPath = "/A_SalesOrder".replaceAll("\\{format\\}","json");

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aSalesOrderPostValidateBeforeCall(APISALESORDERSRVASalesOrderTypeCreate aSalesOrderType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        
        com.squareup.okhttp.Call call = aSalesOrderPostCall(aSalesOrderType, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Add new entity to A_SalesOrder
     * 
     * @param aSalesOrderType New entity (optional)
     * @return ASalesOrderType
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ASalesOrderType aSalesOrderPost(APISALESORDERSRVASalesOrderTypeCreate aSalesOrderType) throws ApiException {
        ApiResponse<ASalesOrderType> resp = aSalesOrderPostWithHttpInfo(aSalesOrderType);
        return resp.getData();
    }

    /**
     * Add new entity to A_SalesOrder
     * 
     * @param aSalesOrderType New entity (optional)
     * @return ApiResponse&lt;ASalesOrderType&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<ASalesOrderType> aSalesOrderPostWithHttpInfo(APISALESORDERSRVASalesOrderTypeCreate aSalesOrderType) throws ApiException {
        com.squareup.okhttp.Call call = aSalesOrderPostValidateBeforeCall(aSalesOrderType, null, null);
        Type localVarReturnType = new TypeToken<ASalesOrderType>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Add new entity to A_SalesOrder (asynchronously)
     * 
     * @param aSalesOrderType New entity (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aSalesOrderPostAsync(APISALESORDERSRVASalesOrderTypeCreate aSalesOrderType, final ApiCallback<ASalesOrderType> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aSalesOrderPostValidateBeforeCall(aSalesOrderType, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<ASalesOrderType>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for aSalesOrderSalesOrderDelete */
    private com.squareup.okhttp.Call aSalesOrderSalesOrderDeleteCall(String salesOrder, String ifMatch, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_SalesOrder('{SalesOrder}')".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "SalesOrder" + "\\}", apiClient.escapeString(salesOrder.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (ifMatch != null)
        localVarHeaderParams.put("If-Match", apiClient.parameterToString(ifMatch));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "DELETE", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aSalesOrderSalesOrderDeleteValidateBeforeCall(String salesOrder, String ifMatch, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'salesOrder' is set
        if (salesOrder == null) {
            throw new ApiException("Missing the required parameter 'salesOrder' when calling aSalesOrderSalesOrderDelete(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aSalesOrderSalesOrderDeleteCall(salesOrder, ifMatch, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Delete entity from A_SalesOrder
     * 
     * @param salesOrder Sales Order (required)
     * @param ifMatch ETag (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void aSalesOrderSalesOrderDelete(String salesOrder, String ifMatch) throws ApiException {
        aSalesOrderSalesOrderDeleteWithHttpInfo(salesOrder, ifMatch);
    }

    /**
     * Delete entity from A_SalesOrder
     * 
     * @param salesOrder Sales Order (required)
     * @param ifMatch ETag (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> aSalesOrderSalesOrderDeleteWithHttpInfo(String salesOrder, String ifMatch) throws ApiException {
        com.squareup.okhttp.Call call = aSalesOrderSalesOrderDeleteValidateBeforeCall(salesOrder, ifMatch, null, null);
        return apiClient.execute(call);
    }

    /**
     * Delete entity from A_SalesOrder (asynchronously)
     * 
     * @param salesOrder Sales Order (required)
     * @param ifMatch ETag (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aSalesOrderSalesOrderDeleteAsync(String salesOrder, String ifMatch, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aSalesOrderSalesOrderDeleteValidateBeforeCall(salesOrder, ifMatch, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /* Build call for aSalesOrderSalesOrderGet */
    private com.squareup.okhttp.Call aSalesOrderSalesOrderGetCall(String salesOrder, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_SalesOrder('{SalesOrder}')".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "SalesOrder" + "\\}", apiClient.escapeString(salesOrder.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (select != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$select", select));
        if (expand != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$expand", expand));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aSalesOrderSalesOrderGetValidateBeforeCall(String salesOrder, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'salesOrder' is set
        if (salesOrder == null) {
            throw new ApiException("Missing the required parameter 'salesOrder' when calling aSalesOrderSalesOrderGet(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aSalesOrderSalesOrderGetCall(salesOrder, select, expand, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get entity from A_SalesOrder by key
     * 
     * @param salesOrder Sales Order (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return ASalesOrderType
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ASalesOrderType aSalesOrderSalesOrderGet(String salesOrder, List<String> select, List<String> expand) throws ApiException {
        ApiResponse<ASalesOrderType> resp = aSalesOrderSalesOrderGetWithHttpInfo(salesOrder, select, expand);
        return resp.getData();
    }

    /**
     * Get entity from A_SalesOrder by key
     * 
     * @param salesOrder Sales Order (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return ApiResponse&lt;ASalesOrderType&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<ASalesOrderType> aSalesOrderSalesOrderGetWithHttpInfo(String salesOrder, List<String> select, List<String> expand) throws ApiException {
        com.squareup.okhttp.Call call = aSalesOrderSalesOrderGetValidateBeforeCall(salesOrder, select, expand, null, null);
        Type localVarReturnType = new TypeToken<ASalesOrderType>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get entity from A_SalesOrder by key (asynchronously)
     * 
     * @param salesOrder Sales Order (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aSalesOrderSalesOrderGetAsync(String salesOrder, List<String> select, List<String> expand, final ApiCallback<ASalesOrderType> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aSalesOrderSalesOrderGetValidateBeforeCall(salesOrder, select, expand, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<ASalesOrderType>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for aSalesOrderSalesOrderPatch */
    private com.squareup.okhttp.Call aSalesOrderSalesOrderPatchCall(String salesOrder, ModifiedASalesOrderType aSalesOrderType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = aSalesOrderType;
        
        // create path and map variables
        String localVarPath = "/A_SalesOrder('{SalesOrder}')".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "SalesOrder" + "\\}", apiClient.escapeString(salesOrder.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "PATCH", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aSalesOrderSalesOrderPatchValidateBeforeCall(String salesOrder, ModifiedASalesOrderType aSalesOrderType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'salesOrder' is set
        if (salesOrder == null) {
            throw new ApiException("Missing the required parameter 'salesOrder' when calling aSalesOrderSalesOrderPatch(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aSalesOrderSalesOrderPatchCall(salesOrder, aSalesOrderType, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Update entity in A_SalesOrder
     * 
     * @param salesOrder Sales Order (required)
     * @param aSalesOrderType New property values (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void aSalesOrderSalesOrderPatch(String salesOrder, ModifiedASalesOrderType aSalesOrderType) throws ApiException {
        aSalesOrderSalesOrderPatchWithHttpInfo(salesOrder, aSalesOrderType);
    }

    /**
     * Update entity in A_SalesOrder
     * 
     * @param salesOrder Sales Order (required)
     * @param aSalesOrderType New property values (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> aSalesOrderSalesOrderPatchWithHttpInfo(String salesOrder, ModifiedASalesOrderType aSalesOrderType) throws ApiException {
        com.squareup.okhttp.Call call = aSalesOrderSalesOrderPatchValidateBeforeCall(salesOrder, aSalesOrderType, null, null);
        return apiClient.execute(call);
    }

    /**
     * Update entity in A_SalesOrder (asynchronously)
     * 
     * @param salesOrder Sales Order (required)
     * @param aSalesOrderType New property values (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aSalesOrderSalesOrderPatchAsync(String salesOrder, ModifiedASalesOrderType aSalesOrderType, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aSalesOrderSalesOrderPatchValidateBeforeCall(salesOrder, aSalesOrderType, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /* Build call for aSalesOrderSalesOrderToItemGet */
    private com.squareup.okhttp.Call aSalesOrderSalesOrderToItemGetCall(String salesOrder, Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_SalesOrder('{SalesOrder}')/to_Item".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "SalesOrder" + "\\}", apiClient.escapeString(salesOrder.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (top != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$top", top));
        if (skip != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$skip", skip));
        if (filter != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$filter", filter));
        if (inlinecount != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$inlinecount", inlinecount));
        if (orderby != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$orderby", orderby));
        if (select != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$select", select));
        if (expand != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$expand", expand));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aSalesOrderSalesOrderToItemGetValidateBeforeCall(String salesOrder, Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'salesOrder' is set
        if (salesOrder == null) {
            throw new ApiException("Missing the required parameter 'salesOrder' when calling aSalesOrderSalesOrderToItemGet(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aSalesOrderSalesOrderToItemGetCall(salesOrder, top, skip, filter, inlinecount, orderby, select, expand, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get related A_SalesOrderItem
     * 
     * @param salesOrder Sales Order (required)
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return Wrapper1
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Wrapper1 aSalesOrderSalesOrderToItemGet(String salesOrder, Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand) throws ApiException {
        ApiResponse<Wrapper1> resp = aSalesOrderSalesOrderToItemGetWithHttpInfo(salesOrder, top, skip, filter, inlinecount, orderby, select, expand);
        return resp.getData();
    }

    /**
     * Get related A_SalesOrderItem
     * 
     * @param salesOrder Sales Order (required)
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return ApiResponse&lt;Wrapper1&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Wrapper1> aSalesOrderSalesOrderToItemGetWithHttpInfo(String salesOrder, Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand) throws ApiException {
        com.squareup.okhttp.Call call = aSalesOrderSalesOrderToItemGetValidateBeforeCall(salesOrder, top, skip, filter, inlinecount, orderby, select, expand, null, null);
        Type localVarReturnType = new TypeToken<Wrapper1>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get related A_SalesOrderItem (asynchronously)
     * 
     * @param salesOrder Sales Order (required)
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aSalesOrderSalesOrderToItemGetAsync(String salesOrder, Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand, final ApiCallback<Wrapper1> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aSalesOrderSalesOrderToItemGetValidateBeforeCall(salesOrder, top, skip, filter, inlinecount, orderby, select, expand, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Wrapper1>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for aSalesOrderSalesOrderToItemPost */
    private com.squareup.okhttp.Call aSalesOrderSalesOrderToItemPostCall(String salesOrder, APISALESORDERSRVASalesOrderItemTypeCreate aSalesOrderItemType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = aSalesOrderItemType;
        
        // create path and map variables
        String localVarPath = "/A_SalesOrder('{SalesOrder}')/to_Item".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "SalesOrder" + "\\}", apiClient.escapeString(salesOrder.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aSalesOrderSalesOrderToItemPostValidateBeforeCall(String salesOrder, APISALESORDERSRVASalesOrderItemTypeCreate aSalesOrderItemType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'salesOrder' is set
        if (salesOrder == null) {
            throw new ApiException("Missing the required parameter 'salesOrder' when calling aSalesOrderSalesOrderToItemPost(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aSalesOrderSalesOrderToItemPostCall(salesOrder, aSalesOrderItemType, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Add related A_SalesOrderItemType
     * 
     * @param salesOrder Sales Order (required)
     * @param aSalesOrderItemType New entity (optional)
     * @return ASalesOrderItemType
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ASalesOrderItemType aSalesOrderSalesOrderToItemPost(String salesOrder, APISALESORDERSRVASalesOrderItemTypeCreate aSalesOrderItemType) throws ApiException {
        ApiResponse<ASalesOrderItemType> resp = aSalesOrderSalesOrderToItemPostWithHttpInfo(salesOrder, aSalesOrderItemType);
        return resp.getData();
    }

    /**
     * Add related A_SalesOrderItemType
     * 
     * @param salesOrder Sales Order (required)
     * @param aSalesOrderItemType New entity (optional)
     * @return ApiResponse&lt;ASalesOrderItemType&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<ASalesOrderItemType> aSalesOrderSalesOrderToItemPostWithHttpInfo(String salesOrder, APISALESORDERSRVASalesOrderItemTypeCreate aSalesOrderItemType) throws ApiException {
        com.squareup.okhttp.Call call = aSalesOrderSalesOrderToItemPostValidateBeforeCall(salesOrder, aSalesOrderItemType, null, null);
        Type localVarReturnType = new TypeToken<ASalesOrderItemType>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Add related A_SalesOrderItemType (asynchronously)
     * 
     * @param salesOrder Sales Order (required)
     * @param aSalesOrderItemType New entity (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aSalesOrderSalesOrderToItemPostAsync(String salesOrder, APISALESORDERSRVASalesOrderItemTypeCreate aSalesOrderItemType, final ApiCallback<ASalesOrderItemType> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aSalesOrderSalesOrderToItemPostValidateBeforeCall(salesOrder, aSalesOrderItemType, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<ASalesOrderItemType>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for aSalesOrderSalesOrderToPartnerGet */
    private com.squareup.okhttp.Call aSalesOrderSalesOrderToPartnerGetCall(String salesOrder, Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_SalesOrder('{SalesOrder}')/to_Partner".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "SalesOrder" + "\\}", apiClient.escapeString(salesOrder.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (top != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$top", top));
        if (skip != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$skip", skip));
        if (filter != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$filter", filter));
        if (inlinecount != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$inlinecount", inlinecount));
        if (orderby != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$orderby", orderby));
        if (select != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$select", select));
        if (expand != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$expand", expand));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aSalesOrderSalesOrderToPartnerGetValidateBeforeCall(String salesOrder, Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'salesOrder' is set
        if (salesOrder == null) {
            throw new ApiException("Missing the required parameter 'salesOrder' when calling aSalesOrderSalesOrderToPartnerGet(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aSalesOrderSalesOrderToPartnerGetCall(salesOrder, top, skip, filter, inlinecount, orderby, select, expand, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get related A_SalesOrderHeaderPartner
     * 
     * @param salesOrder Sales Order (required)
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return Wrapper2
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Wrapper2 aSalesOrderSalesOrderToPartnerGet(String salesOrder, Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand) throws ApiException {
        ApiResponse<Wrapper2> resp = aSalesOrderSalesOrderToPartnerGetWithHttpInfo(salesOrder, top, skip, filter, inlinecount, orderby, select, expand);
        return resp.getData();
    }

    /**
     * Get related A_SalesOrderHeaderPartner
     * 
     * @param salesOrder Sales Order (required)
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return ApiResponse&lt;Wrapper2&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Wrapper2> aSalesOrderSalesOrderToPartnerGetWithHttpInfo(String salesOrder, Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand) throws ApiException {
        com.squareup.okhttp.Call call = aSalesOrderSalesOrderToPartnerGetValidateBeforeCall(salesOrder, top, skip, filter, inlinecount, orderby, select, expand, null, null);
        Type localVarReturnType = new TypeToken<Wrapper2>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get related A_SalesOrderHeaderPartner (asynchronously)
     * 
     * @param salesOrder Sales Order (required)
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aSalesOrderSalesOrderToPartnerGetAsync(String salesOrder, Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand, final ApiCallback<Wrapper2> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aSalesOrderSalesOrderToPartnerGetValidateBeforeCall(salesOrder, top, skip, filter, inlinecount, orderby, select, expand, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Wrapper2>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for aSalesOrderSalesOrderToPaymentPlanItemDetailsGet */
    private com.squareup.okhttp.Call aSalesOrderSalesOrderToPaymentPlanItemDetailsGetCall(String salesOrder, Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_SalesOrder('{SalesOrder}')/to_PaymentPlanItemDetails".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "SalesOrder" + "\\}", apiClient.escapeString(salesOrder.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (top != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$top", top));
        if (skip != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$skip", skip));
        if (filter != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$filter", filter));
        if (inlinecount != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$inlinecount", inlinecount));
        if (orderby != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$orderby", orderby));
        if (select != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$select", select));
        if (expand != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$expand", expand));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aSalesOrderSalesOrderToPaymentPlanItemDetailsGetValidateBeforeCall(String salesOrder, Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'salesOrder' is set
        if (salesOrder == null) {
            throw new ApiException("Missing the required parameter 'salesOrder' when calling aSalesOrderSalesOrderToPaymentPlanItemDetailsGet(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aSalesOrderSalesOrderToPaymentPlanItemDetailsGetCall(salesOrder, top, skip, filter, inlinecount, orderby, select, expand, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get related A_SlsOrdPaymentPlanItemDetails
     * 
     * @param salesOrder Sales Order (required)
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return Wrapper3
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Wrapper3 aSalesOrderSalesOrderToPaymentPlanItemDetailsGet(String salesOrder, Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand) throws ApiException {
        ApiResponse<Wrapper3> resp = aSalesOrderSalesOrderToPaymentPlanItemDetailsGetWithHttpInfo(salesOrder, top, skip, filter, inlinecount, orderby, select, expand);
        return resp.getData();
    }

    /**
     * Get related A_SlsOrdPaymentPlanItemDetails
     * 
     * @param salesOrder Sales Order (required)
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return ApiResponse&lt;Wrapper3&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Wrapper3> aSalesOrderSalesOrderToPaymentPlanItemDetailsGetWithHttpInfo(String salesOrder, Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand) throws ApiException {
        com.squareup.okhttp.Call call = aSalesOrderSalesOrderToPaymentPlanItemDetailsGetValidateBeforeCall(salesOrder, top, skip, filter, inlinecount, orderby, select, expand, null, null);
        Type localVarReturnType = new TypeToken<Wrapper3>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get related A_SlsOrdPaymentPlanItemDetails (asynchronously)
     * 
     * @param salesOrder Sales Order (required)
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aSalesOrderSalesOrderToPaymentPlanItemDetailsGetAsync(String salesOrder, Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand, final ApiCallback<Wrapper3> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aSalesOrderSalesOrderToPaymentPlanItemDetailsGetValidateBeforeCall(salesOrder, top, skip, filter, inlinecount, orderby, select, expand, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Wrapper3>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for aSalesOrderSalesOrderToPricingElementGet */
    private com.squareup.okhttp.Call aSalesOrderSalesOrderToPricingElementGetCall(String salesOrder, Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_SalesOrder('{SalesOrder}')/to_PricingElement".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "SalesOrder" + "\\}", apiClient.escapeString(salesOrder.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (top != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$top", top));
        if (skip != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$skip", skip));
        if (filter != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$filter", filter));
        if (inlinecount != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$inlinecount", inlinecount));
        if (orderby != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$orderby", orderby));
        if (select != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$select", select));
        if (expand != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$expand", expand));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aSalesOrderSalesOrderToPricingElementGetValidateBeforeCall(String salesOrder, Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'salesOrder' is set
        if (salesOrder == null) {
            throw new ApiException("Missing the required parameter 'salesOrder' when calling aSalesOrderSalesOrderToPricingElementGet(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aSalesOrderSalesOrderToPricingElementGetCall(salesOrder, top, skip, filter, inlinecount, orderby, select, expand, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get related A_SalesOrderHeaderPrElement
     * 
     * @param salesOrder Sales Order (required)
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return Wrapper4
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Wrapper4 aSalesOrderSalesOrderToPricingElementGet(String salesOrder, Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand) throws ApiException {
        ApiResponse<Wrapper4> resp = aSalesOrderSalesOrderToPricingElementGetWithHttpInfo(salesOrder, top, skip, filter, inlinecount, orderby, select, expand);
        return resp.getData();
    }

    /**
     * Get related A_SalesOrderHeaderPrElement
     * 
     * @param salesOrder Sales Order (required)
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return ApiResponse&lt;Wrapper4&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Wrapper4> aSalesOrderSalesOrderToPricingElementGetWithHttpInfo(String salesOrder, Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand) throws ApiException {
        com.squareup.okhttp.Call call = aSalesOrderSalesOrderToPricingElementGetValidateBeforeCall(salesOrder, top, skip, filter, inlinecount, orderby, select, expand, null, null);
        Type localVarReturnType = new TypeToken<Wrapper4>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get related A_SalesOrderHeaderPrElement (asynchronously)
     * 
     * @param salesOrder Sales Order (required)
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aSalesOrderSalesOrderToPricingElementGetAsync(String salesOrder, Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand, final ApiCallback<Wrapper4> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aSalesOrderSalesOrderToPricingElementGetValidateBeforeCall(salesOrder, top, skip, filter, inlinecount, orderby, select, expand, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Wrapper4>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for aSalesOrderSalesOrderToTextGet */
    private com.squareup.okhttp.Call aSalesOrderSalesOrderToTextGetCall(String salesOrder, Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_SalesOrder('{SalesOrder}')/to_Text".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "SalesOrder" + "\\}", apiClient.escapeString(salesOrder.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (top != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$top", top));
        if (skip != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$skip", skip));
        if (filter != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$filter", filter));
        if (inlinecount != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$inlinecount", inlinecount));
        if (orderby != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$orderby", orderby));
        if (select != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$select", select));
        if (expand != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$expand", expand));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aSalesOrderSalesOrderToTextGetValidateBeforeCall(String salesOrder, Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'salesOrder' is set
        if (salesOrder == null) {
            throw new ApiException("Missing the required parameter 'salesOrder' when calling aSalesOrderSalesOrderToTextGet(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aSalesOrderSalesOrderToTextGetCall(salesOrder, top, skip, filter, inlinecount, orderby, select, expand, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get related A_SalesOrderText
     * 
     * @param salesOrder Sales Order (required)
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return Wrapper5
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Wrapper5 aSalesOrderSalesOrderToTextGet(String salesOrder, Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand) throws ApiException {
        ApiResponse<Wrapper5> resp = aSalesOrderSalesOrderToTextGetWithHttpInfo(salesOrder, top, skip, filter, inlinecount, orderby, select, expand);
        return resp.getData();
    }

    /**
     * Get related A_SalesOrderText
     * 
     * @param salesOrder Sales Order (required)
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return ApiResponse&lt;Wrapper5&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Wrapper5> aSalesOrderSalesOrderToTextGetWithHttpInfo(String salesOrder, Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand) throws ApiException {
        com.squareup.okhttp.Call call = aSalesOrderSalesOrderToTextGetValidateBeforeCall(salesOrder, top, skip, filter, inlinecount, orderby, select, expand, null, null);
        Type localVarReturnType = new TypeToken<Wrapper5>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get related A_SalesOrderText (asynchronously)
     * 
     * @param salesOrder Sales Order (required)
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aSalesOrderSalesOrderToTextGetAsync(String salesOrder, Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand, final ApiCallback<Wrapper5> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aSalesOrderSalesOrderToTextGetValidateBeforeCall(salesOrder, top, skip, filter, inlinecount, orderby, select, expand, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Wrapper5>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for aSalesOrderTextSalesOrderSalesOrderLanguageLanguageLongTextIDLongTextIDToSalesOrderGet */
    private com.squareup.okhttp.Call aSalesOrderTextSalesOrderSalesOrderLanguageLanguageLongTextIDLongTextIDToSalesOrderGetCall(String salesOrder, String language, String longTextID, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_SalesOrderText(SalesOrder='{SalesOrder}',Language='{Language}',LongTextID='{LongTextID}')/to_SalesOrder".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "SalesOrder" + "\\}", apiClient.escapeString(salesOrder.toString()))
        .replaceAll("\\{" + "Language" + "\\}", apiClient.escapeString(language.toString()))
        .replaceAll("\\{" + "LongTextID" + "\\}", apiClient.escapeString(longTextID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (select != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$select", select));
        if (expand != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$expand", expand));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aSalesOrderTextSalesOrderSalesOrderLanguageLanguageLongTextIDLongTextIDToSalesOrderGetValidateBeforeCall(String salesOrder, String language, String longTextID, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'salesOrder' is set
        if (salesOrder == null) {
            throw new ApiException("Missing the required parameter 'salesOrder' when calling aSalesOrderTextSalesOrderSalesOrderLanguageLanguageLongTextIDLongTextIDToSalesOrderGet(Async)");
        }
        
        // verify the required parameter 'language' is set
        if (language == null) {
            throw new ApiException("Missing the required parameter 'language' when calling aSalesOrderTextSalesOrderSalesOrderLanguageLanguageLongTextIDLongTextIDToSalesOrderGet(Async)");
        }
        
        // verify the required parameter 'longTextID' is set
        if (longTextID == null) {
            throw new ApiException("Missing the required parameter 'longTextID' when calling aSalesOrderTextSalesOrderSalesOrderLanguageLanguageLongTextIDLongTextIDToSalesOrderGet(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aSalesOrderTextSalesOrderSalesOrderLanguageLanguageLongTextIDLongTextIDToSalesOrderGetCall(salesOrder, language, longTextID, select, expand, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get related A_SalesOrderType
     * 
     * @param salesOrder Sales Order (required)
     * @param language The language key indicates   - the language in which texts are displayed,- the language in which you enter texts,- the language in which the system prints texts. (required)
     * @param longTextID The text ID defines the various types of texts related to a text object. For example, the object \&quot;TEXT\&quot; (standard texts) can have the following text IDs:   ST for user-specific standard texts (individual texts)SYST for cross-application system textsvarious IDs for specific application departments. You must have the appropriate access authorization in order to access these texts. (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return Wrapper
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Wrapper aSalesOrderTextSalesOrderSalesOrderLanguageLanguageLongTextIDLongTextIDToSalesOrderGet(String salesOrder, String language, String longTextID, List<String> select, List<String> expand) throws ApiException {
        ApiResponse<Wrapper> resp = aSalesOrderTextSalesOrderSalesOrderLanguageLanguageLongTextIDLongTextIDToSalesOrderGetWithHttpInfo(salesOrder, language, longTextID, select, expand);
        return resp.getData();
    }

    /**
     * Get related A_SalesOrderType
     * 
     * @param salesOrder Sales Order (required)
     * @param language The language key indicates   - the language in which texts are displayed,- the language in which you enter texts,- the language in which the system prints texts. (required)
     * @param longTextID The text ID defines the various types of texts related to a text object. For example, the object \&quot;TEXT\&quot; (standard texts) can have the following text IDs:   ST for user-specific standard texts (individual texts)SYST for cross-application system textsvarious IDs for specific application departments. You must have the appropriate access authorization in order to access these texts. (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return ApiResponse&lt;Wrapper&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Wrapper> aSalesOrderTextSalesOrderSalesOrderLanguageLanguageLongTextIDLongTextIDToSalesOrderGetWithHttpInfo(String salesOrder, String language, String longTextID, List<String> select, List<String> expand) throws ApiException {
        com.squareup.okhttp.Call call = aSalesOrderTextSalesOrderSalesOrderLanguageLanguageLongTextIDLongTextIDToSalesOrderGetValidateBeforeCall(salesOrder, language, longTextID, select, expand, null, null);
        Type localVarReturnType = new TypeToken<Wrapper>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get related A_SalesOrderType (asynchronously)
     * 
     * @param salesOrder Sales Order (required)
     * @param language The language key indicates   - the language in which texts are displayed,- the language in which you enter texts,- the language in which the system prints texts. (required)
     * @param longTextID The text ID defines the various types of texts related to a text object. For example, the object \&quot;TEXT\&quot; (standard texts) can have the following text IDs:   ST for user-specific standard texts (individual texts)SYST for cross-application system textsvarious IDs for specific application departments. You must have the appropriate access authorization in order to access these texts. (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aSalesOrderTextSalesOrderSalesOrderLanguageLanguageLongTextIDLongTextIDToSalesOrderGetAsync(String salesOrder, String language, String longTextID, List<String> select, List<String> expand, final ApiCallback<Wrapper> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aSalesOrderTextSalesOrderSalesOrderLanguageLanguageLongTextIDLongTextIDToSalesOrderGetValidateBeforeCall(salesOrder, language, longTextID, select, expand, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Wrapper>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for aSlsOrdPaymentPlanItemDetailsSalesOrderSalesOrderPaymentPlanItemPaymentPlanItemToSalesOrderGet */
    private com.squareup.okhttp.Call aSlsOrdPaymentPlanItemDetailsSalesOrderSalesOrderPaymentPlanItemPaymentPlanItemToSalesOrderGetCall(String salesOrder, String paymentPlanItem, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_SlsOrdPaymentPlanItemDetails(SalesOrder='{SalesOrder}',PaymentPlanItem='{PaymentPlanItem}')/to_SalesOrder".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "SalesOrder" + "\\}", apiClient.escapeString(salesOrder.toString()))
        .replaceAll("\\{" + "PaymentPlanItem" + "\\}", apiClient.escapeString(paymentPlanItem.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (select != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$select", select));
        if (expand != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$expand", expand));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aSlsOrdPaymentPlanItemDetailsSalesOrderSalesOrderPaymentPlanItemPaymentPlanItemToSalesOrderGetValidateBeforeCall(String salesOrder, String paymentPlanItem, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'salesOrder' is set
        if (salesOrder == null) {
            throw new ApiException("Missing the required parameter 'salesOrder' when calling aSlsOrdPaymentPlanItemDetailsSalesOrderSalesOrderPaymentPlanItemPaymentPlanItemToSalesOrderGet(Async)");
        }
        
        // verify the required parameter 'paymentPlanItem' is set
        if (paymentPlanItem == null) {
            throw new ApiException("Missing the required parameter 'paymentPlanItem' when calling aSlsOrdPaymentPlanItemDetailsSalesOrderSalesOrderPaymentPlanItemPaymentPlanItemToSalesOrderGet(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aSlsOrdPaymentPlanItemDetailsSalesOrderSalesOrderPaymentPlanItemPaymentPlanItemToSalesOrderGetCall(salesOrder, paymentPlanItem, select, expand, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get related A_SalesOrderType
     * 
     * @param salesOrder Sales Order (required)
     * @param paymentPlanItem Item for billing plan/invoice plan/payment cards (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return Wrapper
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Wrapper aSlsOrdPaymentPlanItemDetailsSalesOrderSalesOrderPaymentPlanItemPaymentPlanItemToSalesOrderGet(String salesOrder, String paymentPlanItem, List<String> select, List<String> expand) throws ApiException {
        ApiResponse<Wrapper> resp = aSlsOrdPaymentPlanItemDetailsSalesOrderSalesOrderPaymentPlanItemPaymentPlanItemToSalesOrderGetWithHttpInfo(salesOrder, paymentPlanItem, select, expand);
        return resp.getData();
    }

    /**
     * Get related A_SalesOrderType
     * 
     * @param salesOrder Sales Order (required)
     * @param paymentPlanItem Item for billing plan/invoice plan/payment cards (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return ApiResponse&lt;Wrapper&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Wrapper> aSlsOrdPaymentPlanItemDetailsSalesOrderSalesOrderPaymentPlanItemPaymentPlanItemToSalesOrderGetWithHttpInfo(String salesOrder, String paymentPlanItem, List<String> select, List<String> expand) throws ApiException {
        com.squareup.okhttp.Call call = aSlsOrdPaymentPlanItemDetailsSalesOrderSalesOrderPaymentPlanItemPaymentPlanItemToSalesOrderGetValidateBeforeCall(salesOrder, paymentPlanItem, select, expand, null, null);
        Type localVarReturnType = new TypeToken<Wrapper>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get related A_SalesOrderType (asynchronously)
     * 
     * @param salesOrder Sales Order (required)
     * @param paymentPlanItem Item for billing plan/invoice plan/payment cards (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aSlsOrdPaymentPlanItemDetailsSalesOrderSalesOrderPaymentPlanItemPaymentPlanItemToSalesOrderGetAsync(String salesOrder, String paymentPlanItem, List<String> select, List<String> expand, final ApiCallback<Wrapper> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aSlsOrdPaymentPlanItemDetailsSalesOrderSalesOrderPaymentPlanItemPaymentPlanItemToSalesOrderGetValidateBeforeCall(salesOrder, paymentPlanItem, select, expand, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Wrapper>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
