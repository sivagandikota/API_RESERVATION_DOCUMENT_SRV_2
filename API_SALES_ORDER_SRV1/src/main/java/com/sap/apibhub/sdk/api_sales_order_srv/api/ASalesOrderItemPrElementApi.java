/*
 * Sales Order - Create, Read, Update, Delete (A2X)
 * You can use this service to integrate external  applications with sales order processing in SAP  S/4HANA Cloud. In every API call, you can make  use of the following operations:  - You can retrieve  sales orders. Apply any of the filters provided or  retrieve all existing data.  - You can create sales  orders. Note that you must use “deep insert”  requests (a header plus the following entities:  header partner, header pricing element, header  text, payment details, item, item partner, item  pricing element, and item text). You cannot create  entities without including any related entities.  - For  existing sales orders, you can create new items.  Note that you must use “deep insert” requests  (with the following entities: item partner, item pricing  element, and item text). You cannot create entities  without including any related entities.  - For existing  sales orders, you can update the header, header  partner, header pricing element, header text,  payment details, item, item partner, item pricing  element, and item text.  - For existing sales  orders, you can delete the header, header partner,  header pricing element, header text, payment  details, item, item partner, item pricing element,  and item text.  - You can accept or deny approval  requests for sales orders that cannot be processed  without the consent of an approver.
 *
 * OpenAPI spec version: 1 
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.sap.apibhub.sdk.api_sales_order_srv.api;

import com.sap.apibhub.sdk.client.ApiCallback;
import com.sap.apibhub.sdk.client.ApiClient;
import com.sap.apibhub.sdk.client.ApiException;
import com.sap.apibhub.sdk.client.ApiResponse;
import com.sap.apibhub.sdk.client.Configuration;
import com.sap.apibhub.sdk.client.Pair;
import com.sap.apibhub.sdk.client.ProgressRequestBody;
import com.sap.apibhub.sdk.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.sap.apibhub.sdk.api_sales_order_srv.model.ASalesOrderItemPrElementType;
import com.sap.apibhub.sdk.api_sales_order_srv.model.ModifiedASalesOrderItemPrElementType;
import com.sap.apibhub.sdk.api_sales_order_srv.model.OdataError;
import com.sap.apibhub.sdk.api_sales_order_srv.model.Wrapper;
import com.sap.apibhub.sdk.api_sales_order_srv.model.Wrapper1;
import com.sap.apibhub.sdk.api_sales_order_srv.model.Wrapper7;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ASalesOrderItemPrElementApi {
    private ApiClient apiClient;

    public ASalesOrderItemPrElementApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ASalesOrderItemPrElementApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /* Build call for aSalesOrderItemPrElementGet */
    private com.squareup.okhttp.Call aSalesOrderItemPrElementGetCall(Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_SalesOrderItemPrElement".replaceAll("\\{format\\}","json");

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (top != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$top", top));
        if (skip != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$skip", skip));
        if (filter != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$filter", filter));
        if (inlinecount != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$inlinecount", inlinecount));
        if (orderby != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$orderby", orderby));
        if (select != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$select", select));
        if (expand != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$expand", expand));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aSalesOrderItemPrElementGetValidateBeforeCall(Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        
        com.squareup.okhttp.Call call = aSalesOrderItemPrElementGetCall(top, skip, filter, inlinecount, orderby, select, expand, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get entities from A_SalesOrderItemPrElement
     * 
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return Wrapper7
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Wrapper7 aSalesOrderItemPrElementGet(Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand) throws ApiException {
        ApiResponse<Wrapper7> resp = aSalesOrderItemPrElementGetWithHttpInfo(top, skip, filter, inlinecount, orderby, select, expand);
        return resp.getData();
    }

    /**
     * Get entities from A_SalesOrderItemPrElement
     * 
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return ApiResponse&lt;Wrapper7&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Wrapper7> aSalesOrderItemPrElementGetWithHttpInfo(Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand) throws ApiException {
        com.squareup.okhttp.Call call = aSalesOrderItemPrElementGetValidateBeforeCall(top, skip, filter, inlinecount, orderby, select, expand, null, null);
        Type localVarReturnType = new TypeToken<Wrapper7>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get entities from A_SalesOrderItemPrElement (asynchronously)
     * 
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aSalesOrderItemPrElementGetAsync(Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand, final ApiCallback<Wrapper7> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aSalesOrderItemPrElementGetValidateBeforeCall(top, skip, filter, inlinecount, orderby, select, expand, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Wrapper7>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDelete */
    private com.squareup.okhttp.Call aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDeleteCall(String salesOrder, String salesOrderItem, String pricingProcedureStep, String pricingProcedureCounter, String ifMatch, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_SalesOrderItemPrElement(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}',PricingProcedureStep='{PricingProcedureStep}',PricingProcedureCounter='{PricingProcedureCounter}')".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "SalesOrder" + "\\}", apiClient.escapeString(salesOrder.toString()))
        .replaceAll("\\{" + "SalesOrderItem" + "\\}", apiClient.escapeString(salesOrderItem.toString()))
        .replaceAll("\\{" + "PricingProcedureStep" + "\\}", apiClient.escapeString(pricingProcedureStep.toString()))
        .replaceAll("\\{" + "PricingProcedureCounter" + "\\}", apiClient.escapeString(pricingProcedureCounter.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (ifMatch != null)
        localVarHeaderParams.put("If-Match", apiClient.parameterToString(ifMatch));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "DELETE", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDeleteValidateBeforeCall(String salesOrder, String salesOrderItem, String pricingProcedureStep, String pricingProcedureCounter, String ifMatch, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'salesOrder' is set
        if (salesOrder == null) {
            throw new ApiException("Missing the required parameter 'salesOrder' when calling aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDelete(Async)");
        }
        
        // verify the required parameter 'salesOrderItem' is set
        if (salesOrderItem == null) {
            throw new ApiException("Missing the required parameter 'salesOrderItem' when calling aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDelete(Async)");
        }
        
        // verify the required parameter 'pricingProcedureStep' is set
        if (pricingProcedureStep == null) {
            throw new ApiException("Missing the required parameter 'pricingProcedureStep' when calling aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDelete(Async)");
        }
        
        // verify the required parameter 'pricingProcedureCounter' is set
        if (pricingProcedureCounter == null) {
            throw new ApiException("Missing the required parameter 'pricingProcedureCounter' when calling aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDelete(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDeleteCall(salesOrder, salesOrderItem, pricingProcedureStep, pricingProcedureCounter, ifMatch, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Delete entity from A_SalesOrderItemPrElement
     * 
     * @param salesOrder Sales Order (required)
     * @param salesOrderItem Sales Order Item (required)
     * @param pricingProcedureStep Number that determines the sequence of the condition within a procedure. (required)
     * @param pricingProcedureCounter Condition Counter   Access number of the conditions within a step in the pricing procedure.   During automatic pricing, the system takes into account the sequence specified by the counter. (required)
     * @param ifMatch ETag (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDelete(String salesOrder, String salesOrderItem, String pricingProcedureStep, String pricingProcedureCounter, String ifMatch) throws ApiException {
        aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDeleteWithHttpInfo(salesOrder, salesOrderItem, pricingProcedureStep, pricingProcedureCounter, ifMatch);
    }

    /**
     * Delete entity from A_SalesOrderItemPrElement
     * 
     * @param salesOrder Sales Order (required)
     * @param salesOrderItem Sales Order Item (required)
     * @param pricingProcedureStep Number that determines the sequence of the condition within a procedure. (required)
     * @param pricingProcedureCounter Condition Counter   Access number of the conditions within a step in the pricing procedure.   During automatic pricing, the system takes into account the sequence specified by the counter. (required)
     * @param ifMatch ETag (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDeleteWithHttpInfo(String salesOrder, String salesOrderItem, String pricingProcedureStep, String pricingProcedureCounter, String ifMatch) throws ApiException {
        com.squareup.okhttp.Call call = aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDeleteValidateBeforeCall(salesOrder, salesOrderItem, pricingProcedureStep, pricingProcedureCounter, ifMatch, null, null);
        return apiClient.execute(call);
    }

    /**
     * Delete entity from A_SalesOrderItemPrElement (asynchronously)
     * 
     * @param salesOrder Sales Order (required)
     * @param salesOrderItem Sales Order Item (required)
     * @param pricingProcedureStep Number that determines the sequence of the condition within a procedure. (required)
     * @param pricingProcedureCounter Condition Counter   Access number of the conditions within a step in the pricing procedure.   During automatic pricing, the system takes into account the sequence specified by the counter. (required)
     * @param ifMatch ETag (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDeleteAsync(String salesOrder, String salesOrderItem, String pricingProcedureStep, String pricingProcedureCounter, String ifMatch, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDeleteValidateBeforeCall(salesOrder, salesOrderItem, pricingProcedureStep, pricingProcedureCounter, ifMatch, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /* Build call for aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet */
    private com.squareup.okhttp.Call aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGetCall(String salesOrder, String salesOrderItem, String pricingProcedureStep, String pricingProcedureCounter, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_SalesOrderItemPrElement(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}',PricingProcedureStep='{PricingProcedureStep}',PricingProcedureCounter='{PricingProcedureCounter}')".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "SalesOrder" + "\\}", apiClient.escapeString(salesOrder.toString()))
        .replaceAll("\\{" + "SalesOrderItem" + "\\}", apiClient.escapeString(salesOrderItem.toString()))
        .replaceAll("\\{" + "PricingProcedureStep" + "\\}", apiClient.escapeString(pricingProcedureStep.toString()))
        .replaceAll("\\{" + "PricingProcedureCounter" + "\\}", apiClient.escapeString(pricingProcedureCounter.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (select != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$select", select));
        if (expand != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$expand", expand));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGetValidateBeforeCall(String salesOrder, String salesOrderItem, String pricingProcedureStep, String pricingProcedureCounter, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'salesOrder' is set
        if (salesOrder == null) {
            throw new ApiException("Missing the required parameter 'salesOrder' when calling aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet(Async)");
        }
        
        // verify the required parameter 'salesOrderItem' is set
        if (salesOrderItem == null) {
            throw new ApiException("Missing the required parameter 'salesOrderItem' when calling aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet(Async)");
        }
        
        // verify the required parameter 'pricingProcedureStep' is set
        if (pricingProcedureStep == null) {
            throw new ApiException("Missing the required parameter 'pricingProcedureStep' when calling aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet(Async)");
        }
        
        // verify the required parameter 'pricingProcedureCounter' is set
        if (pricingProcedureCounter == null) {
            throw new ApiException("Missing the required parameter 'pricingProcedureCounter' when calling aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGetCall(salesOrder, salesOrderItem, pricingProcedureStep, pricingProcedureCounter, select, expand, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get entity from A_SalesOrderItemPrElement by key
     * 
     * @param salesOrder Sales Order (required)
     * @param salesOrderItem Sales Order Item (required)
     * @param pricingProcedureStep Number that determines the sequence of the condition within a procedure. (required)
     * @param pricingProcedureCounter Condition Counter   Access number of the conditions within a step in the pricing procedure.   During automatic pricing, the system takes into account the sequence specified by the counter. (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return ASalesOrderItemPrElementType
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ASalesOrderItemPrElementType aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet(String salesOrder, String salesOrderItem, String pricingProcedureStep, String pricingProcedureCounter, List<String> select, List<String> expand) throws ApiException {
        ApiResponse<ASalesOrderItemPrElementType> resp = aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGetWithHttpInfo(salesOrder, salesOrderItem, pricingProcedureStep, pricingProcedureCounter, select, expand);
        return resp.getData();
    }

    /**
     * Get entity from A_SalesOrderItemPrElement by key
     * 
     * @param salesOrder Sales Order (required)
     * @param salesOrderItem Sales Order Item (required)
     * @param pricingProcedureStep Number that determines the sequence of the condition within a procedure. (required)
     * @param pricingProcedureCounter Condition Counter   Access number of the conditions within a step in the pricing procedure.   During automatic pricing, the system takes into account the sequence specified by the counter. (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return ApiResponse&lt;ASalesOrderItemPrElementType&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<ASalesOrderItemPrElementType> aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGetWithHttpInfo(String salesOrder, String salesOrderItem, String pricingProcedureStep, String pricingProcedureCounter, List<String> select, List<String> expand) throws ApiException {
        com.squareup.okhttp.Call call = aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGetValidateBeforeCall(salesOrder, salesOrderItem, pricingProcedureStep, pricingProcedureCounter, select, expand, null, null);
        Type localVarReturnType = new TypeToken<ASalesOrderItemPrElementType>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get entity from A_SalesOrderItemPrElement by key (asynchronously)
     * 
     * @param salesOrder Sales Order (required)
     * @param salesOrderItem Sales Order Item (required)
     * @param pricingProcedureStep Number that determines the sequence of the condition within a procedure. (required)
     * @param pricingProcedureCounter Condition Counter   Access number of the conditions within a step in the pricing procedure.   During automatic pricing, the system takes into account the sequence specified by the counter. (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGetAsync(String salesOrder, String salesOrderItem, String pricingProcedureStep, String pricingProcedureCounter, List<String> select, List<String> expand, final ApiCallback<ASalesOrderItemPrElementType> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGetValidateBeforeCall(salesOrder, salesOrderItem, pricingProcedureStep, pricingProcedureCounter, select, expand, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<ASalesOrderItemPrElementType>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatch */
    private com.squareup.okhttp.Call aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatchCall(String salesOrder, String salesOrderItem, String pricingProcedureStep, String pricingProcedureCounter, ModifiedASalesOrderItemPrElementType aSalesOrderItemPrElementType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = aSalesOrderItemPrElementType;
        
        // create path and map variables
        String localVarPath = "/A_SalesOrderItemPrElement(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}',PricingProcedureStep='{PricingProcedureStep}',PricingProcedureCounter='{PricingProcedureCounter}')".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "SalesOrder" + "\\}", apiClient.escapeString(salesOrder.toString()))
        .replaceAll("\\{" + "SalesOrderItem" + "\\}", apiClient.escapeString(salesOrderItem.toString()))
        .replaceAll("\\{" + "PricingProcedureStep" + "\\}", apiClient.escapeString(pricingProcedureStep.toString()))
        .replaceAll("\\{" + "PricingProcedureCounter" + "\\}", apiClient.escapeString(pricingProcedureCounter.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "PATCH", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatchValidateBeforeCall(String salesOrder, String salesOrderItem, String pricingProcedureStep, String pricingProcedureCounter, ModifiedASalesOrderItemPrElementType aSalesOrderItemPrElementType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'salesOrder' is set
        if (salesOrder == null) {
            throw new ApiException("Missing the required parameter 'salesOrder' when calling aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatch(Async)");
        }
        
        // verify the required parameter 'salesOrderItem' is set
        if (salesOrderItem == null) {
            throw new ApiException("Missing the required parameter 'salesOrderItem' when calling aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatch(Async)");
        }
        
        // verify the required parameter 'pricingProcedureStep' is set
        if (pricingProcedureStep == null) {
            throw new ApiException("Missing the required parameter 'pricingProcedureStep' when calling aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatch(Async)");
        }
        
        // verify the required parameter 'pricingProcedureCounter' is set
        if (pricingProcedureCounter == null) {
            throw new ApiException("Missing the required parameter 'pricingProcedureCounter' when calling aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatch(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatchCall(salesOrder, salesOrderItem, pricingProcedureStep, pricingProcedureCounter, aSalesOrderItemPrElementType, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Update entity in A_SalesOrderItemPrElement
     * 
     * @param salesOrder Sales Order (required)
     * @param salesOrderItem Sales Order Item (required)
     * @param pricingProcedureStep Number that determines the sequence of the condition within a procedure. (required)
     * @param pricingProcedureCounter Condition Counter   Access number of the conditions within a step in the pricing procedure.   During automatic pricing, the system takes into account the sequence specified by the counter. (required)
     * @param aSalesOrderItemPrElementType New property values (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatch(String salesOrder, String salesOrderItem, String pricingProcedureStep, String pricingProcedureCounter, ModifiedASalesOrderItemPrElementType aSalesOrderItemPrElementType) throws ApiException {
        aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatchWithHttpInfo(salesOrder, salesOrderItem, pricingProcedureStep, pricingProcedureCounter, aSalesOrderItemPrElementType);
    }

    /**
     * Update entity in A_SalesOrderItemPrElement
     * 
     * @param salesOrder Sales Order (required)
     * @param salesOrderItem Sales Order Item (required)
     * @param pricingProcedureStep Number that determines the sequence of the condition within a procedure. (required)
     * @param pricingProcedureCounter Condition Counter   Access number of the conditions within a step in the pricing procedure.   During automatic pricing, the system takes into account the sequence specified by the counter. (required)
     * @param aSalesOrderItemPrElementType New property values (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatchWithHttpInfo(String salesOrder, String salesOrderItem, String pricingProcedureStep, String pricingProcedureCounter, ModifiedASalesOrderItemPrElementType aSalesOrderItemPrElementType) throws ApiException {
        com.squareup.okhttp.Call call = aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatchValidateBeforeCall(salesOrder, salesOrderItem, pricingProcedureStep, pricingProcedureCounter, aSalesOrderItemPrElementType, null, null);
        return apiClient.execute(call);
    }

    /**
     * Update entity in A_SalesOrderItemPrElement (asynchronously)
     * 
     * @param salesOrder Sales Order (required)
     * @param salesOrderItem Sales Order Item (required)
     * @param pricingProcedureStep Number that determines the sequence of the condition within a procedure. (required)
     * @param pricingProcedureCounter Condition Counter   Access number of the conditions within a step in the pricing procedure.   During automatic pricing, the system takes into account the sequence specified by the counter. (required)
     * @param aSalesOrderItemPrElementType New property values (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatchAsync(String salesOrder, String salesOrderItem, String pricingProcedureStep, String pricingProcedureCounter, ModifiedASalesOrderItemPrElementType aSalesOrderItemPrElementType, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatchValidateBeforeCall(salesOrder, salesOrderItem, pricingProcedureStep, pricingProcedureCounter, aSalesOrderItemPrElementType, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /* Build call for aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet */
    private com.squareup.okhttp.Call aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGetCall(String salesOrder, String salesOrderItem, String pricingProcedureStep, String pricingProcedureCounter, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_SalesOrderItemPrElement(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}',PricingProcedureStep='{PricingProcedureStep}',PricingProcedureCounter='{PricingProcedureCounter}')/to_SalesOrder".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "SalesOrder" + "\\}", apiClient.escapeString(salesOrder.toString()))
        .replaceAll("\\{" + "SalesOrderItem" + "\\}", apiClient.escapeString(salesOrderItem.toString()))
        .replaceAll("\\{" + "PricingProcedureStep" + "\\}", apiClient.escapeString(pricingProcedureStep.toString()))
        .replaceAll("\\{" + "PricingProcedureCounter" + "\\}", apiClient.escapeString(pricingProcedureCounter.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (select != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$select", select));
        if (expand != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$expand", expand));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGetValidateBeforeCall(String salesOrder, String salesOrderItem, String pricingProcedureStep, String pricingProcedureCounter, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'salesOrder' is set
        if (salesOrder == null) {
            throw new ApiException("Missing the required parameter 'salesOrder' when calling aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet(Async)");
        }
        
        // verify the required parameter 'salesOrderItem' is set
        if (salesOrderItem == null) {
            throw new ApiException("Missing the required parameter 'salesOrderItem' when calling aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet(Async)");
        }
        
        // verify the required parameter 'pricingProcedureStep' is set
        if (pricingProcedureStep == null) {
            throw new ApiException("Missing the required parameter 'pricingProcedureStep' when calling aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet(Async)");
        }
        
        // verify the required parameter 'pricingProcedureCounter' is set
        if (pricingProcedureCounter == null) {
            throw new ApiException("Missing the required parameter 'pricingProcedureCounter' when calling aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGetCall(salesOrder, salesOrderItem, pricingProcedureStep, pricingProcedureCounter, select, expand, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get related A_SalesOrderType
     * 
     * @param salesOrder Sales Order (required)
     * @param salesOrderItem Sales Order Item (required)
     * @param pricingProcedureStep Number that determines the sequence of the condition within a procedure. (required)
     * @param pricingProcedureCounter Condition Counter   Access number of the conditions within a step in the pricing procedure.   During automatic pricing, the system takes into account the sequence specified by the counter. (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return Wrapper
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Wrapper aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet(String salesOrder, String salesOrderItem, String pricingProcedureStep, String pricingProcedureCounter, List<String> select, List<String> expand) throws ApiException {
        ApiResponse<Wrapper> resp = aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGetWithHttpInfo(salesOrder, salesOrderItem, pricingProcedureStep, pricingProcedureCounter, select, expand);
        return resp.getData();
    }

    /**
     * Get related A_SalesOrderType
     * 
     * @param salesOrder Sales Order (required)
     * @param salesOrderItem Sales Order Item (required)
     * @param pricingProcedureStep Number that determines the sequence of the condition within a procedure. (required)
     * @param pricingProcedureCounter Condition Counter   Access number of the conditions within a step in the pricing procedure.   During automatic pricing, the system takes into account the sequence specified by the counter. (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return ApiResponse&lt;Wrapper&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Wrapper> aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGetWithHttpInfo(String salesOrder, String salesOrderItem, String pricingProcedureStep, String pricingProcedureCounter, List<String> select, List<String> expand) throws ApiException {
        com.squareup.okhttp.Call call = aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGetValidateBeforeCall(salesOrder, salesOrderItem, pricingProcedureStep, pricingProcedureCounter, select, expand, null, null);
        Type localVarReturnType = new TypeToken<Wrapper>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get related A_SalesOrderType (asynchronously)
     * 
     * @param salesOrder Sales Order (required)
     * @param salesOrderItem Sales Order Item (required)
     * @param pricingProcedureStep Number that determines the sequence of the condition within a procedure. (required)
     * @param pricingProcedureCounter Condition Counter   Access number of the conditions within a step in the pricing procedure.   During automatic pricing, the system takes into account the sequence specified by the counter. (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGetAsync(String salesOrder, String salesOrderItem, String pricingProcedureStep, String pricingProcedureCounter, List<String> select, List<String> expand, final ApiCallback<Wrapper> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGetValidateBeforeCall(salesOrder, salesOrderItem, pricingProcedureStep, pricingProcedureCounter, select, expand, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Wrapper>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderItemGet */
    private com.squareup.okhttp.Call aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderItemGetCall(String salesOrder, String salesOrderItem, String pricingProcedureStep, String pricingProcedureCounter, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_SalesOrderItemPrElement(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}',PricingProcedureStep='{PricingProcedureStep}',PricingProcedureCounter='{PricingProcedureCounter}')/to_SalesOrderItem".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "SalesOrder" + "\\}", apiClient.escapeString(salesOrder.toString()))
        .replaceAll("\\{" + "SalesOrderItem" + "\\}", apiClient.escapeString(salesOrderItem.toString()))
        .replaceAll("\\{" + "PricingProcedureStep" + "\\}", apiClient.escapeString(pricingProcedureStep.toString()))
        .replaceAll("\\{" + "PricingProcedureCounter" + "\\}", apiClient.escapeString(pricingProcedureCounter.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (select != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$select", select));
        if (expand != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$expand", expand));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderItemGetValidateBeforeCall(String salesOrder, String salesOrderItem, String pricingProcedureStep, String pricingProcedureCounter, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'salesOrder' is set
        if (salesOrder == null) {
            throw new ApiException("Missing the required parameter 'salesOrder' when calling aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderItemGet(Async)");
        }
        
        // verify the required parameter 'salesOrderItem' is set
        if (salesOrderItem == null) {
            throw new ApiException("Missing the required parameter 'salesOrderItem' when calling aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderItemGet(Async)");
        }
        
        // verify the required parameter 'pricingProcedureStep' is set
        if (pricingProcedureStep == null) {
            throw new ApiException("Missing the required parameter 'pricingProcedureStep' when calling aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderItemGet(Async)");
        }
        
        // verify the required parameter 'pricingProcedureCounter' is set
        if (pricingProcedureCounter == null) {
            throw new ApiException("Missing the required parameter 'pricingProcedureCounter' when calling aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderItemGet(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderItemGetCall(salesOrder, salesOrderItem, pricingProcedureStep, pricingProcedureCounter, select, expand, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get related A_SalesOrderItemType
     * 
     * @param salesOrder Sales Order (required)
     * @param salesOrderItem Sales Order Item (required)
     * @param pricingProcedureStep Number that determines the sequence of the condition within a procedure. (required)
     * @param pricingProcedureCounter Condition Counter   Access number of the conditions within a step in the pricing procedure.   During automatic pricing, the system takes into account the sequence specified by the counter. (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return Wrapper1
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Wrapper1 aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderItemGet(String salesOrder, String salesOrderItem, String pricingProcedureStep, String pricingProcedureCounter, List<String> select, List<String> expand) throws ApiException {
        ApiResponse<Wrapper1> resp = aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderItemGetWithHttpInfo(salesOrder, salesOrderItem, pricingProcedureStep, pricingProcedureCounter, select, expand);
        return resp.getData();
    }

    /**
     * Get related A_SalesOrderItemType
     * 
     * @param salesOrder Sales Order (required)
     * @param salesOrderItem Sales Order Item (required)
     * @param pricingProcedureStep Number that determines the sequence of the condition within a procedure. (required)
     * @param pricingProcedureCounter Condition Counter   Access number of the conditions within a step in the pricing procedure.   During automatic pricing, the system takes into account the sequence specified by the counter. (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return ApiResponse&lt;Wrapper1&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Wrapper1> aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderItemGetWithHttpInfo(String salesOrder, String salesOrderItem, String pricingProcedureStep, String pricingProcedureCounter, List<String> select, List<String> expand) throws ApiException {
        com.squareup.okhttp.Call call = aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderItemGetValidateBeforeCall(salesOrder, salesOrderItem, pricingProcedureStep, pricingProcedureCounter, select, expand, null, null);
        Type localVarReturnType = new TypeToken<Wrapper1>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get related A_SalesOrderItemType (asynchronously)
     * 
     * @param salesOrder Sales Order (required)
     * @param salesOrderItem Sales Order Item (required)
     * @param pricingProcedureStep Number that determines the sequence of the condition within a procedure. (required)
     * @param pricingProcedureCounter Condition Counter   Access number of the conditions within a step in the pricing procedure.   During automatic pricing, the system takes into account the sequence specified by the counter. (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderItemGetAsync(String salesOrder, String salesOrderItem, String pricingProcedureStep, String pricingProcedureCounter, List<String> select, List<String> expand, final ApiCallback<Wrapper1> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aSalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderItemGetValidateBeforeCall(salesOrder, salesOrderItem, pricingProcedureStep, pricingProcedureCounter, select, expand, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Wrapper1>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for aSalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementGet */
    private com.squareup.okhttp.Call aSalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementGetCall(String salesOrder, String salesOrderItem, Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_SalesOrderItem(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}')/to_PricingElement".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "SalesOrder" + "\\}", apiClient.escapeString(salesOrder.toString()))
        .replaceAll("\\{" + "SalesOrderItem" + "\\}", apiClient.escapeString(salesOrderItem.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (top != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$top", top));
        if (skip != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$skip", skip));
        if (filter != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$filter", filter));
        if (inlinecount != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$inlinecount", inlinecount));
        if (orderby != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$orderby", orderby));
        if (select != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$select", select));
        if (expand != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$expand", expand));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aSalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementGetValidateBeforeCall(String salesOrder, String salesOrderItem, Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'salesOrder' is set
        if (salesOrder == null) {
            throw new ApiException("Missing the required parameter 'salesOrder' when calling aSalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementGet(Async)");
        }
        
        // verify the required parameter 'salesOrderItem' is set
        if (salesOrderItem == null) {
            throw new ApiException("Missing the required parameter 'salesOrderItem' when calling aSalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementGet(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aSalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementGetCall(salesOrder, salesOrderItem, top, skip, filter, inlinecount, orderby, select, expand, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get related A_SalesOrderItemPrElement
     * 
     * @param salesOrder Sales Order (required)
     * @param salesOrderItem Sales Order Item (required)
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return Wrapper7
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Wrapper7 aSalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementGet(String salesOrder, String salesOrderItem, Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand) throws ApiException {
        ApiResponse<Wrapper7> resp = aSalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementGetWithHttpInfo(salesOrder, salesOrderItem, top, skip, filter, inlinecount, orderby, select, expand);
        return resp.getData();
    }

    /**
     * Get related A_SalesOrderItemPrElement
     * 
     * @param salesOrder Sales Order (required)
     * @param salesOrderItem Sales Order Item (required)
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @return ApiResponse&lt;Wrapper7&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Wrapper7> aSalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementGetWithHttpInfo(String salesOrder, String salesOrderItem, Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand) throws ApiException {
        com.squareup.okhttp.Call call = aSalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementGetValidateBeforeCall(salesOrder, salesOrderItem, top, skip, filter, inlinecount, orderby, select, expand, null, null);
        Type localVarReturnType = new TypeToken<Wrapper7>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get related A_SalesOrderItemPrElement (asynchronously)
     * 
     * @param salesOrder Sales Order (required)
     * @param salesOrderItem Sales Order Item (required)
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aSalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementGetAsync(String salesOrder, String salesOrderItem, Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand, final ApiCallback<Wrapper7> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aSalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementGetValidateBeforeCall(salesOrder, salesOrderItem, top, skip, filter, inlinecount, orderby, select, expand, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Wrapper7>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
