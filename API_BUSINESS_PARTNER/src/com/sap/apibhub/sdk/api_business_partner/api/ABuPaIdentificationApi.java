/*
 * OData Service for Business Partner
 * This service enables you to create, read, update, and    delete master data related to Business Partners,    Suppliers, and Customers in an SAP S/4HANA system.
 *
 * OpenAPI spec version: 1 
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.sap.apibhub.sdk.api_business_partner.api;

import com.sap.apibhub.sdk.client.ApiCallback;
import com.sap.apibhub.sdk.client.ApiClient;
import com.sap.apibhub.sdk.client.ApiException;
import com.sap.apibhub.sdk.client.ApiResponse;
import com.sap.apibhub.sdk.client.Configuration;
import com.sap.apibhub.sdk.client.Pair;
import com.sap.apibhub.sdk.client.ProgressRequestBody;
import com.sap.apibhub.sdk.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.sap.apibhub.sdk.api_business_partner.model.APIBUSINESSPARTNERABuPaIdentificationType;
import com.sap.apibhub.sdk.api_business_partner.model.CreatedABuPaIdentificationType;
import com.sap.apibhub.sdk.api_business_partner.model.ModifiedABuPaIdentificationType;
import com.sap.apibhub.sdk.api_business_partner.model.OdataError;
import com.sap.apibhub.sdk.api_business_partner.model.Wrapper7;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ABuPaIdentificationApi {
    private ApiClient apiClient;

    public ABuPaIdentificationApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ABuPaIdentificationApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /* Build call for aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberDelete */
    private com.squareup.okhttp.Call aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberDeleteCall(String businessPartner, String bpIdentificationType, String bpIdentificationNumber, String ifMatch, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_BuPaIdentification(BusinessPartner='{BusinessPartner}',BPIdentificationType='{BPIdentificationType}',BPIdentificationNumber='{BPIdentificationNumber}')".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "BusinessPartner" + "\\}", apiClient.escapeString(businessPartner.toString()))
        .replaceAll("\\{" + "BPIdentificationType" + "\\}", apiClient.escapeString(bpIdentificationType.toString()))
        .replaceAll("\\{" + "BPIdentificationNumber" + "\\}", apiClient.escapeString(bpIdentificationNumber.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (ifMatch != null)
        localVarHeaderParams.put("If-Match", apiClient.parameterToString(ifMatch));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "DELETE", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberDeleteValidateBeforeCall(String businessPartner, String bpIdentificationType, String bpIdentificationNumber, String ifMatch, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'businessPartner' is set
        if (businessPartner == null) {
            throw new ApiException("Missing the required parameter 'businessPartner' when calling aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberDelete(Async)");
        }
        
        // verify the required parameter 'bpIdentificationType' is set
        if (bpIdentificationType == null) {
            throw new ApiException("Missing the required parameter 'bpIdentificationType' when calling aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberDelete(Async)");
        }
        
        // verify the required parameter 'bpIdentificationNumber' is set
        if (bpIdentificationNumber == null) {
            throw new ApiException("Missing the required parameter 'bpIdentificationNumber' when calling aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberDelete(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberDeleteCall(businessPartner, bpIdentificationType, bpIdentificationNumber, ifMatch, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Delete entity from A_BuPaIdentification
     * 
     * @param businessPartner Business Partner Number   Key identifying a business partner in the SAP system. The key is unique within a client. (required)
     * @param bpIdentificationType A document (such as an ID card or driver&#39;s license) or an entry in a system of records (such as a commercial register) whose key can be stored as an attribute for a business partner.   The identification type is for classifying identification numbers.You can define the identification types and their descriptions in Customizing.You can also specify for which business partner category an ID type should be valid.If necessary, assign the identification type to an Identification Category.You can only assign one identification type to an identification category. (required)
     * @param bpIdentificationNumber Identification Number   Number that serves to identify a business partner, such as driver&#39;s license, or ID card number. (required)
     * @param ifMatch ETag (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberDelete(String businessPartner, String bpIdentificationType, String bpIdentificationNumber, String ifMatch) throws ApiException {
        aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberDeleteWithHttpInfo(businessPartner, bpIdentificationType, bpIdentificationNumber, ifMatch);
    }

    /**
     * Delete entity from A_BuPaIdentification
     * 
     * @param businessPartner Business Partner Number   Key identifying a business partner in the SAP system. The key is unique within a client. (required)
     * @param bpIdentificationType A document (such as an ID card or driver&#39;s license) or an entry in a system of records (such as a commercial register) whose key can be stored as an attribute for a business partner.   The identification type is for classifying identification numbers.You can define the identification types and their descriptions in Customizing.You can also specify for which business partner category an ID type should be valid.If necessary, assign the identification type to an Identification Category.You can only assign one identification type to an identification category. (required)
     * @param bpIdentificationNumber Identification Number   Number that serves to identify a business partner, such as driver&#39;s license, or ID card number. (required)
     * @param ifMatch ETag (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberDeleteWithHttpInfo(String businessPartner, String bpIdentificationType, String bpIdentificationNumber, String ifMatch) throws ApiException {
        com.squareup.okhttp.Call call = aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberDeleteValidateBeforeCall(businessPartner, bpIdentificationType, bpIdentificationNumber, ifMatch, null, null);
        return apiClient.execute(call);
    }

    /**
     * Delete entity from A_BuPaIdentification (asynchronously)
     * 
     * @param businessPartner Business Partner Number   Key identifying a business partner in the SAP system. The key is unique within a client. (required)
     * @param bpIdentificationType A document (such as an ID card or driver&#39;s license) or an entry in a system of records (such as a commercial register) whose key can be stored as an attribute for a business partner.   The identification type is for classifying identification numbers.You can define the identification types and their descriptions in Customizing.You can also specify for which business partner category an ID type should be valid.If necessary, assign the identification type to an Identification Category.You can only assign one identification type to an identification category. (required)
     * @param bpIdentificationNumber Identification Number   Number that serves to identify a business partner, such as driver&#39;s license, or ID card number. (required)
     * @param ifMatch ETag (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberDeleteAsync(String businessPartner, String bpIdentificationType, String bpIdentificationNumber, String ifMatch, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberDeleteValidateBeforeCall(businessPartner, bpIdentificationType, bpIdentificationNumber, ifMatch, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /* Build call for aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberGet */
    private com.squareup.okhttp.Call aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberGetCall(String businessPartner, String bpIdentificationType, String bpIdentificationNumber, List<String> select, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_BuPaIdentification(BusinessPartner='{BusinessPartner}',BPIdentificationType='{BPIdentificationType}',BPIdentificationNumber='{BPIdentificationNumber}')".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "BusinessPartner" + "\\}", apiClient.escapeString(businessPartner.toString()))
        .replaceAll("\\{" + "BPIdentificationType" + "\\}", apiClient.escapeString(bpIdentificationType.toString()))
        .replaceAll("\\{" + "BPIdentificationNumber" + "\\}", apiClient.escapeString(bpIdentificationNumber.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (select != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$select", select));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberGetValidateBeforeCall(String businessPartner, String bpIdentificationType, String bpIdentificationNumber, List<String> select, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'businessPartner' is set
        if (businessPartner == null) {
            throw new ApiException("Missing the required parameter 'businessPartner' when calling aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberGet(Async)");
        }
        
        // verify the required parameter 'bpIdentificationType' is set
        if (bpIdentificationType == null) {
            throw new ApiException("Missing the required parameter 'bpIdentificationType' when calling aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberGet(Async)");
        }
        
        // verify the required parameter 'bpIdentificationNumber' is set
        if (bpIdentificationNumber == null) {
            throw new ApiException("Missing the required parameter 'bpIdentificationNumber' when calling aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberGet(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberGetCall(businessPartner, bpIdentificationType, bpIdentificationNumber, select, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get entity from A_BuPaIdentification by key
     * 
     * @param businessPartner Business Partner Number   Key identifying a business partner in the SAP system. The key is unique within a client. (required)
     * @param bpIdentificationType A document (such as an ID card or driver&#39;s license) or an entry in a system of records (such as a commercial register) whose key can be stored as an attribute for a business partner.   The identification type is for classifying identification numbers.You can define the identification types and their descriptions in Customizing.You can also specify for which business partner category an ID type should be valid.If necessary, assign the identification type to an Identification Category.You can only assign one identification type to an identification category. (required)
     * @param bpIdentificationNumber Identification Number   Number that serves to identify a business partner, such as driver&#39;s license, or ID card number. (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620) (optional)
     * @return CreatedABuPaIdentificationType
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public CreatedABuPaIdentificationType aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberGet(String businessPartner, String bpIdentificationType, String bpIdentificationNumber, List<String> select) throws ApiException {
        ApiResponse<CreatedABuPaIdentificationType> resp = aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberGetWithHttpInfo(businessPartner, bpIdentificationType, bpIdentificationNumber, select);
        return resp.getData();
    }

    /**
     * Get entity from A_BuPaIdentification by key
     * 
     * @param businessPartner Business Partner Number   Key identifying a business partner in the SAP system. The key is unique within a client. (required)
     * @param bpIdentificationType A document (such as an ID card or driver&#39;s license) or an entry in a system of records (such as a commercial register) whose key can be stored as an attribute for a business partner.   The identification type is for classifying identification numbers.You can define the identification types and their descriptions in Customizing.You can also specify for which business partner category an ID type should be valid.If necessary, assign the identification type to an Identification Category.You can only assign one identification type to an identification category. (required)
     * @param bpIdentificationNumber Identification Number   Number that serves to identify a business partner, such as driver&#39;s license, or ID card number. (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620) (optional)
     * @return ApiResponse&lt;CreatedABuPaIdentificationType&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<CreatedABuPaIdentificationType> aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberGetWithHttpInfo(String businessPartner, String bpIdentificationType, String bpIdentificationNumber, List<String> select) throws ApiException {
        com.squareup.okhttp.Call call = aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberGetValidateBeforeCall(businessPartner, bpIdentificationType, bpIdentificationNumber, select, null, null);
        Type localVarReturnType = new TypeToken<CreatedABuPaIdentificationType>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get entity from A_BuPaIdentification by key (asynchronously)
     * 
     * @param businessPartner Business Partner Number   Key identifying a business partner in the SAP system. The key is unique within a client. (required)
     * @param bpIdentificationType A document (such as an ID card or driver&#39;s license) or an entry in a system of records (such as a commercial register) whose key can be stored as an attribute for a business partner.   The identification type is for classifying identification numbers.You can define the identification types and their descriptions in Customizing.You can also specify for which business partner category an ID type should be valid.If necessary, assign the identification type to an Identification Category.You can only assign one identification type to an identification category. (required)
     * @param bpIdentificationNumber Identification Number   Number that serves to identify a business partner, such as driver&#39;s license, or ID card number. (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberGetAsync(String businessPartner, String bpIdentificationType, String bpIdentificationNumber, List<String> select, final ApiCallback<CreatedABuPaIdentificationType> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberGetValidateBeforeCall(businessPartner, bpIdentificationType, bpIdentificationNumber, select, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<CreatedABuPaIdentificationType>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberPatch */
    private com.squareup.okhttp.Call aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberPatchCall(String businessPartner, String bpIdentificationType, String bpIdentificationNumber, ModifiedABuPaIdentificationType aBuPaIdentificationType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = aBuPaIdentificationType;
        
        // create path and map variables
        String localVarPath = "/A_BuPaIdentification(BusinessPartner='{BusinessPartner}',BPIdentificationType='{BPIdentificationType}',BPIdentificationNumber='{BPIdentificationNumber}')".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "BusinessPartner" + "\\}", apiClient.escapeString(businessPartner.toString()))
        .replaceAll("\\{" + "BPIdentificationType" + "\\}", apiClient.escapeString(bpIdentificationType.toString()))
        .replaceAll("\\{" + "BPIdentificationNumber" + "\\}", apiClient.escapeString(bpIdentificationNumber.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "PATCH", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberPatchValidateBeforeCall(String businessPartner, String bpIdentificationType, String bpIdentificationNumber, ModifiedABuPaIdentificationType aBuPaIdentificationType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'businessPartner' is set
        if (businessPartner == null) {
            throw new ApiException("Missing the required parameter 'businessPartner' when calling aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberPatch(Async)");
        }
        
        // verify the required parameter 'bpIdentificationType' is set
        if (bpIdentificationType == null) {
            throw new ApiException("Missing the required parameter 'bpIdentificationType' when calling aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberPatch(Async)");
        }
        
        // verify the required parameter 'bpIdentificationNumber' is set
        if (bpIdentificationNumber == null) {
            throw new ApiException("Missing the required parameter 'bpIdentificationNumber' when calling aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberPatch(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberPatchCall(businessPartner, bpIdentificationType, bpIdentificationNumber, aBuPaIdentificationType, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Update entity in A_BuPaIdentification
     * 
     * @param businessPartner Business Partner Number   Key identifying a business partner in the SAP system. The key is unique within a client. (required)
     * @param bpIdentificationType A document (such as an ID card or driver&#39;s license) or an entry in a system of records (such as a commercial register) whose key can be stored as an attribute for a business partner.   The identification type is for classifying identification numbers.You can define the identification types and their descriptions in Customizing.You can also specify for which business partner category an ID type should be valid.If necessary, assign the identification type to an Identification Category.You can only assign one identification type to an identification category. (required)
     * @param bpIdentificationNumber Identification Number   Number that serves to identify a business partner, such as driver&#39;s license, or ID card number. (required)
     * @param aBuPaIdentificationType New property values (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberPatch(String businessPartner, String bpIdentificationType, String bpIdentificationNumber, ModifiedABuPaIdentificationType aBuPaIdentificationType) throws ApiException {
        aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberPatchWithHttpInfo(businessPartner, bpIdentificationType, bpIdentificationNumber, aBuPaIdentificationType);
    }

    /**
     * Update entity in A_BuPaIdentification
     * 
     * @param businessPartner Business Partner Number   Key identifying a business partner in the SAP system. The key is unique within a client. (required)
     * @param bpIdentificationType A document (such as an ID card or driver&#39;s license) or an entry in a system of records (such as a commercial register) whose key can be stored as an attribute for a business partner.   The identification type is for classifying identification numbers.You can define the identification types and their descriptions in Customizing.You can also specify for which business partner category an ID type should be valid.If necessary, assign the identification type to an Identification Category.You can only assign one identification type to an identification category. (required)
     * @param bpIdentificationNumber Identification Number   Number that serves to identify a business partner, such as driver&#39;s license, or ID card number. (required)
     * @param aBuPaIdentificationType New property values (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberPatchWithHttpInfo(String businessPartner, String bpIdentificationType, String bpIdentificationNumber, ModifiedABuPaIdentificationType aBuPaIdentificationType) throws ApiException {
        com.squareup.okhttp.Call call = aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberPatchValidateBeforeCall(businessPartner, bpIdentificationType, bpIdentificationNumber, aBuPaIdentificationType, null, null);
        return apiClient.execute(call);
    }

    /**
     * Update entity in A_BuPaIdentification (asynchronously)
     * 
     * @param businessPartner Business Partner Number   Key identifying a business partner in the SAP system. The key is unique within a client. (required)
     * @param bpIdentificationType A document (such as an ID card or driver&#39;s license) or an entry in a system of records (such as a commercial register) whose key can be stored as an attribute for a business partner.   The identification type is for classifying identification numbers.You can define the identification types and their descriptions in Customizing.You can also specify for which business partner category an ID type should be valid.If necessary, assign the identification type to an Identification Category.You can only assign one identification type to an identification category. (required)
     * @param bpIdentificationNumber Identification Number   Number that serves to identify a business partner, such as driver&#39;s license, or ID card number. (required)
     * @param aBuPaIdentificationType New property values (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberPatchAsync(String businessPartner, String bpIdentificationType, String bpIdentificationNumber, ModifiedABuPaIdentificationType aBuPaIdentificationType, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberPatchValidateBeforeCall(businessPartner, bpIdentificationType, bpIdentificationNumber, aBuPaIdentificationType, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /* Build call for aBuPaIdentificationGet */
    private com.squareup.okhttp.Call aBuPaIdentificationGetCall(Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_BuPaIdentification".replaceAll("\\{format\\}","json");

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (top != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$top", top));
        if (skip != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$skip", skip));
        if (filter != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$filter", filter));
        if (inlinecount != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$inlinecount", inlinecount));
        if (orderby != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$orderby", orderby));
        if (select != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$select", select));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aBuPaIdentificationGetValidateBeforeCall(Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        
        com.squareup.okhttp.Call call = aBuPaIdentificationGetCall(top, skip, filter, inlinecount, orderby, select, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get entities from A_BuPaIdentification
     * 
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374630) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374631) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374625) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374629) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620) (optional)
     * @return Wrapper7
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Wrapper7 aBuPaIdentificationGet(Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select) throws ApiException {
        ApiResponse<Wrapper7> resp = aBuPaIdentificationGetWithHttpInfo(top, skip, filter, inlinecount, orderby, select);
        return resp.getData();
    }

    /**
     * Get entities from A_BuPaIdentification
     * 
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374630) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374631) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374625) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374629) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620) (optional)
     * @return ApiResponse&lt;Wrapper7&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Wrapper7> aBuPaIdentificationGetWithHttpInfo(Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select) throws ApiException {
        com.squareup.okhttp.Call call = aBuPaIdentificationGetValidateBeforeCall(top, skip, filter, inlinecount, orderby, select, null, null);
        Type localVarReturnType = new TypeToken<Wrapper7>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get entities from A_BuPaIdentification (asynchronously)
     * 
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374630) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374631) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374625) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374629) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aBuPaIdentificationGetAsync(Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, final ApiCallback<Wrapper7> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aBuPaIdentificationGetValidateBeforeCall(top, skip, filter, inlinecount, orderby, select, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Wrapper7>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for aBuPaIdentificationPost */
    private com.squareup.okhttp.Call aBuPaIdentificationPostCall(APIBUSINESSPARTNERABuPaIdentificationType aBuPaIdentificationType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = aBuPaIdentificationType;
        
        // create path and map variables
        String localVarPath = "/A_BuPaIdentification".replaceAll("\\{format\\}","json");

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aBuPaIdentificationPostValidateBeforeCall(APIBUSINESSPARTNERABuPaIdentificationType aBuPaIdentificationType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        
        com.squareup.okhttp.Call call = aBuPaIdentificationPostCall(aBuPaIdentificationType, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Add new entity to A_BuPaIdentification
     * 
     * @param aBuPaIdentificationType New entity (optional)
     * @return CreatedABuPaIdentificationType
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public CreatedABuPaIdentificationType aBuPaIdentificationPost(APIBUSINESSPARTNERABuPaIdentificationType aBuPaIdentificationType) throws ApiException {
        ApiResponse<CreatedABuPaIdentificationType> resp = aBuPaIdentificationPostWithHttpInfo(aBuPaIdentificationType);
        return resp.getData();
    }

    /**
     * Add new entity to A_BuPaIdentification
     * 
     * @param aBuPaIdentificationType New entity (optional)
     * @return ApiResponse&lt;CreatedABuPaIdentificationType&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<CreatedABuPaIdentificationType> aBuPaIdentificationPostWithHttpInfo(APIBUSINESSPARTNERABuPaIdentificationType aBuPaIdentificationType) throws ApiException {
        com.squareup.okhttp.Call call = aBuPaIdentificationPostValidateBeforeCall(aBuPaIdentificationType, null, null);
        Type localVarReturnType = new TypeToken<CreatedABuPaIdentificationType>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Add new entity to A_BuPaIdentification (asynchronously)
     * 
     * @param aBuPaIdentificationType New entity (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aBuPaIdentificationPostAsync(APIBUSINESSPARTNERABuPaIdentificationType aBuPaIdentificationType, final ApiCallback<CreatedABuPaIdentificationType> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aBuPaIdentificationPostValidateBeforeCall(aBuPaIdentificationType, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<CreatedABuPaIdentificationType>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
