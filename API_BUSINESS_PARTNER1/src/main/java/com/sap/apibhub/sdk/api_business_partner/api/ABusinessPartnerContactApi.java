/*
 * OData Service for Business Partner
 * This service enables you to create, read, update, and    delete master data related to Business Partners,    Suppliers, and Customers in an SAP S/4HANA system.
 *
 * OpenAPI spec version: 1 
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.sap.apibhub.sdk.api_business_partner.api;

import com.sap.apibhub.sdk.client.ApiCallback;
import com.sap.apibhub.sdk.client.ApiClient;
import com.sap.apibhub.sdk.client.ApiException;
import com.sap.apibhub.sdk.client.ApiResponse;
import com.sap.apibhub.sdk.client.Configuration;
import com.sap.apibhub.sdk.client.Pair;
import com.sap.apibhub.sdk.client.ProgressRequestBody;
import com.sap.apibhub.sdk.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.sap.apibhub.sdk.api_business_partner.model.APIBUSINESSPARTNERABusinessPartnerContactType;
import com.sap.apibhub.sdk.api_business_partner.model.CreatedABusinessPartnerContactType;
import com.sap.apibhub.sdk.api_business_partner.model.ModifiedABusinessPartnerContactType;
import com.sap.apibhub.sdk.api_business_partner.model.OdataError;
import com.sap.apibhub.sdk.api_business_partner.model.Wrapper11;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ABusinessPartnerContactApi {
    private ApiClient apiClient;

    public ABusinessPartnerContactApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ABusinessPartnerContactApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /* Build call for aBusinessPartnerContactGet */
    private com.squareup.okhttp.Call aBusinessPartnerContactGetCall(Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_BusinessPartnerContact".replaceAll("\\{format\\}","json");

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (top != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$top", top));
        if (skip != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$skip", skip));
        if (filter != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$filter", filter));
        if (inlinecount != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$inlinecount", inlinecount));
        if (orderby != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$orderby", orderby));
        if (select != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$select", select));
        if (expand != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$expand", expand));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aBusinessPartnerContactGetValidateBeforeCall(Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        
        com.squareup.okhttp.Call call = aBusinessPartnerContactGetCall(top, skip, filter, inlinecount, orderby, select, expand, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get entities from A_BusinessPartnerContact
     * 
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374630) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374631) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374625) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374629) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374621) (optional)
     * @return Wrapper11
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Wrapper11 aBusinessPartnerContactGet(Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand) throws ApiException {
        ApiResponse<Wrapper11> resp = aBusinessPartnerContactGetWithHttpInfo(top, skip, filter, inlinecount, orderby, select, expand);
        return resp.getData();
    }

    /**
     * Get entities from A_BusinessPartnerContact
     * 
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374630) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374631) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374625) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374629) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374621) (optional)
     * @return ApiResponse&lt;Wrapper11&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Wrapper11> aBusinessPartnerContactGetWithHttpInfo(Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand) throws ApiException {
        com.squareup.okhttp.Call call = aBusinessPartnerContactGetValidateBeforeCall(top, skip, filter, inlinecount, orderby, select, expand, null, null);
        Type localVarReturnType = new TypeToken<Wrapper11>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get entities from A_BusinessPartnerContact (asynchronously)
     * 
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374630) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374631) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374625) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374629) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374621) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aBusinessPartnerContactGetAsync(Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, List<String> expand, final ApiCallback<Wrapper11> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aBusinessPartnerContactGetValidateBeforeCall(top, skip, filter, inlinecount, orderby, select, expand, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Wrapper11>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for aBusinessPartnerContactPost */
    private com.squareup.okhttp.Call aBusinessPartnerContactPostCall(APIBUSINESSPARTNERABusinessPartnerContactType aBusinessPartnerContactType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = aBusinessPartnerContactType;
        
        // create path and map variables
        String localVarPath = "/A_BusinessPartnerContact".replaceAll("\\{format\\}","json");

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aBusinessPartnerContactPostValidateBeforeCall(APIBUSINESSPARTNERABusinessPartnerContactType aBusinessPartnerContactType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        
        com.squareup.okhttp.Call call = aBusinessPartnerContactPostCall(aBusinessPartnerContactType, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Add new entity to A_BusinessPartnerContact
     * 
     * @param aBusinessPartnerContactType New entity (optional)
     * @return CreatedABusinessPartnerContactType
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public CreatedABusinessPartnerContactType aBusinessPartnerContactPost(APIBUSINESSPARTNERABusinessPartnerContactType aBusinessPartnerContactType) throws ApiException {
        ApiResponse<CreatedABusinessPartnerContactType> resp = aBusinessPartnerContactPostWithHttpInfo(aBusinessPartnerContactType);
        return resp.getData();
    }

    /**
     * Add new entity to A_BusinessPartnerContact
     * 
     * @param aBusinessPartnerContactType New entity (optional)
     * @return ApiResponse&lt;CreatedABusinessPartnerContactType&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<CreatedABusinessPartnerContactType> aBusinessPartnerContactPostWithHttpInfo(APIBUSINESSPARTNERABusinessPartnerContactType aBusinessPartnerContactType) throws ApiException {
        com.squareup.okhttp.Call call = aBusinessPartnerContactPostValidateBeforeCall(aBusinessPartnerContactType, null, null);
        Type localVarReturnType = new TypeToken<CreatedABusinessPartnerContactType>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Add new entity to A_BusinessPartnerContact (asynchronously)
     * 
     * @param aBusinessPartnerContactType New entity (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aBusinessPartnerContactPostAsync(APIBUSINESSPARTNERABusinessPartnerContactType aBusinessPartnerContactType, final ApiCallback<CreatedABusinessPartnerContactType> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aBusinessPartnerContactPostValidateBeforeCall(aBusinessPartnerContactType, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<CreatedABusinessPartnerContactType>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDateDelete */
    private com.squareup.okhttp.Call aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDateDeleteCall(String relationshipNumber, String businessPartnerCompany, String businessPartnerPerson, String validityEndDate, String ifMatch, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_BusinessPartnerContact(RelationshipNumber='{RelationshipNumber}',BusinessPartnerCompany='{BusinessPartnerCompany}',BusinessPartnerPerson='{BusinessPartnerPerson}',ValidityEndDate={ValidityEndDate})".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "RelationshipNumber" + "\\}", apiClient.escapeString(relationshipNumber.toString()))
        .replaceAll("\\{" + "BusinessPartnerCompany" + "\\}", apiClient.escapeString(businessPartnerCompany.toString()))
        .replaceAll("\\{" + "BusinessPartnerPerson" + "\\}", apiClient.escapeString(businessPartnerPerson.toString()))
        .replaceAll("\\{" + "ValidityEndDate" + "\\}", apiClient.escapeString(validityEndDate.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (ifMatch != null)
        localVarHeaderParams.put("If-Match", apiClient.parameterToString(ifMatch));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "DELETE", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDateDeleteValidateBeforeCall(String relationshipNumber, String businessPartnerCompany, String businessPartnerPerson, String validityEndDate, String ifMatch, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'relationshipNumber' is set
        if (relationshipNumber == null) {
            throw new ApiException("Missing the required parameter 'relationshipNumber' when calling aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDateDelete(Async)");
        }
        
        // verify the required parameter 'businessPartnerCompany' is set
        if (businessPartnerCompany == null) {
            throw new ApiException("Missing the required parameter 'businessPartnerCompany' when calling aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDateDelete(Async)");
        }
        
        // verify the required parameter 'businessPartnerPerson' is set
        if (businessPartnerPerson == null) {
            throw new ApiException("Missing the required parameter 'businessPartnerPerson' when calling aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDateDelete(Async)");
        }
        
        // verify the required parameter 'validityEndDate' is set
        if (validityEndDate == null) {
            throw new ApiException("Missing the required parameter 'validityEndDate' when calling aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDateDelete(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDateDeleteCall(relationshipNumber, businessPartnerCompany, businessPartnerPerson, validityEndDate, ifMatch, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Delete entity from A_BusinessPartnerContact
     * 
     * @param relationshipNumber BP Relationship Number   The business partner relationship number is an internal number that identifies the business partner relationship set. (required)
     * @param businessPartnerCompany Business Partner Number   Key identifying a business partner in the SAP system. The key is unique within a client. (required)
     * @param businessPartnerPerson Business Partner Number   Key identifying a business partner in the SAP system. The key is unique within a client. (required)
     * @param validityEndDate Validity Date (Valid To) (required)
     * @param ifMatch ETag (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDateDelete(String relationshipNumber, String businessPartnerCompany, String businessPartnerPerson, String validityEndDate, String ifMatch) throws ApiException {
        aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDateDeleteWithHttpInfo(relationshipNumber, businessPartnerCompany, businessPartnerPerson, validityEndDate, ifMatch);
    }

    /**
     * Delete entity from A_BusinessPartnerContact
     * 
     * @param relationshipNumber BP Relationship Number   The business partner relationship number is an internal number that identifies the business partner relationship set. (required)
     * @param businessPartnerCompany Business Partner Number   Key identifying a business partner in the SAP system. The key is unique within a client. (required)
     * @param businessPartnerPerson Business Partner Number   Key identifying a business partner in the SAP system. The key is unique within a client. (required)
     * @param validityEndDate Validity Date (Valid To) (required)
     * @param ifMatch ETag (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDateDeleteWithHttpInfo(String relationshipNumber, String businessPartnerCompany, String businessPartnerPerson, String validityEndDate, String ifMatch) throws ApiException {
        com.squareup.okhttp.Call call = aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDateDeleteValidateBeforeCall(relationshipNumber, businessPartnerCompany, businessPartnerPerson, validityEndDate, ifMatch, null, null);
        return apiClient.execute(call);
    }

    /**
     * Delete entity from A_BusinessPartnerContact (asynchronously)
     * 
     * @param relationshipNumber BP Relationship Number   The business partner relationship number is an internal number that identifies the business partner relationship set. (required)
     * @param businessPartnerCompany Business Partner Number   Key identifying a business partner in the SAP system. The key is unique within a client. (required)
     * @param businessPartnerPerson Business Partner Number   Key identifying a business partner in the SAP system. The key is unique within a client. (required)
     * @param validityEndDate Validity Date (Valid To) (required)
     * @param ifMatch ETag (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDateDeleteAsync(String relationshipNumber, String businessPartnerCompany, String businessPartnerPerson, String validityEndDate, String ifMatch, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDateDeleteValidateBeforeCall(relationshipNumber, businessPartnerCompany, businessPartnerPerson, validityEndDate, ifMatch, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /* Build call for aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDateGet */
    private com.squareup.okhttp.Call aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDateGetCall(String relationshipNumber, String businessPartnerCompany, String businessPartnerPerson, String validityEndDate, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_BusinessPartnerContact(RelationshipNumber='{RelationshipNumber}',BusinessPartnerCompany='{BusinessPartnerCompany}',BusinessPartnerPerson='{BusinessPartnerPerson}',ValidityEndDate={ValidityEndDate})".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "RelationshipNumber" + "\\}", apiClient.escapeString(relationshipNumber.toString()))
        .replaceAll("\\{" + "BusinessPartnerCompany" + "\\}", apiClient.escapeString(businessPartnerCompany.toString()))
        .replaceAll("\\{" + "BusinessPartnerPerson" + "\\}", apiClient.escapeString(businessPartnerPerson.toString()))
        .replaceAll("\\{" + "ValidityEndDate" + "\\}", apiClient.escapeString(validityEndDate.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (select != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$select", select));
        if (expand != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$expand", expand));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDateGetValidateBeforeCall(String relationshipNumber, String businessPartnerCompany, String businessPartnerPerson, String validityEndDate, List<String> select, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'relationshipNumber' is set
        if (relationshipNumber == null) {
            throw new ApiException("Missing the required parameter 'relationshipNumber' when calling aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDateGet(Async)");
        }
        
        // verify the required parameter 'businessPartnerCompany' is set
        if (businessPartnerCompany == null) {
            throw new ApiException("Missing the required parameter 'businessPartnerCompany' when calling aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDateGet(Async)");
        }
        
        // verify the required parameter 'businessPartnerPerson' is set
        if (businessPartnerPerson == null) {
            throw new ApiException("Missing the required parameter 'businessPartnerPerson' when calling aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDateGet(Async)");
        }
        
        // verify the required parameter 'validityEndDate' is set
        if (validityEndDate == null) {
            throw new ApiException("Missing the required parameter 'validityEndDate' when calling aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDateGet(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDateGetCall(relationshipNumber, businessPartnerCompany, businessPartnerPerson, validityEndDate, select, expand, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get entity from A_BusinessPartnerContact by key
     * 
     * @param relationshipNumber BP Relationship Number   The business partner relationship number is an internal number that identifies the business partner relationship set. (required)
     * @param businessPartnerCompany Business Partner Number   Key identifying a business partner in the SAP system. The key is unique within a client. (required)
     * @param businessPartnerPerson Business Partner Number   Key identifying a business partner in the SAP system. The key is unique within a client. (required)
     * @param validityEndDate Validity Date (Valid To) (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374621) (optional)
     * @return CreatedABusinessPartnerContactType
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public CreatedABusinessPartnerContactType aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDateGet(String relationshipNumber, String businessPartnerCompany, String businessPartnerPerson, String validityEndDate, List<String> select, List<String> expand) throws ApiException {
        ApiResponse<CreatedABusinessPartnerContactType> resp = aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDateGetWithHttpInfo(relationshipNumber, businessPartnerCompany, businessPartnerPerson, validityEndDate, select, expand);
        return resp.getData();
    }

    /**
     * Get entity from A_BusinessPartnerContact by key
     * 
     * @param relationshipNumber BP Relationship Number   The business partner relationship number is an internal number that identifies the business partner relationship set. (required)
     * @param businessPartnerCompany Business Partner Number   Key identifying a business partner in the SAP system. The key is unique within a client. (required)
     * @param businessPartnerPerson Business Partner Number   Key identifying a business partner in the SAP system. The key is unique within a client. (required)
     * @param validityEndDate Validity Date (Valid To) (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374621) (optional)
     * @return ApiResponse&lt;CreatedABusinessPartnerContactType&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<CreatedABusinessPartnerContactType> aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDateGetWithHttpInfo(String relationshipNumber, String businessPartnerCompany, String businessPartnerPerson, String validityEndDate, List<String> select, List<String> expand) throws ApiException {
        com.squareup.okhttp.Call call = aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDateGetValidateBeforeCall(relationshipNumber, businessPartnerCompany, businessPartnerPerson, validityEndDate, select, expand, null, null);
        Type localVarReturnType = new TypeToken<CreatedABusinessPartnerContactType>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get entity from A_BusinessPartnerContact by key (asynchronously)
     * 
     * @param relationshipNumber BP Relationship Number   The business partner relationship number is an internal number that identifies the business partner relationship set. (required)
     * @param businessPartnerCompany Business Partner Number   Key identifying a business partner in the SAP system. The key is unique within a client. (required)
     * @param businessPartnerPerson Business Partner Number   Key identifying a business partner in the SAP system. The key is unique within a client. (required)
     * @param validityEndDate Validity Date (Valid To) (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620) (optional)
     * @param expand Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374621) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDateGetAsync(String relationshipNumber, String businessPartnerCompany, String businessPartnerPerson, String validityEndDate, List<String> select, List<String> expand, final ApiCallback<CreatedABusinessPartnerContactType> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDateGetValidateBeforeCall(relationshipNumber, businessPartnerCompany, businessPartnerPerson, validityEndDate, select, expand, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<CreatedABusinessPartnerContactType>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDatePatch */
    private com.squareup.okhttp.Call aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDatePatchCall(String relationshipNumber, String businessPartnerCompany, String businessPartnerPerson, String validityEndDate, ModifiedABusinessPartnerContactType aBusinessPartnerContactType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = aBusinessPartnerContactType;
        
        // create path and map variables
        String localVarPath = "/A_BusinessPartnerContact(RelationshipNumber='{RelationshipNumber}',BusinessPartnerCompany='{BusinessPartnerCompany}',BusinessPartnerPerson='{BusinessPartnerPerson}',ValidityEndDate={ValidityEndDate})".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "RelationshipNumber" + "\\}", apiClient.escapeString(relationshipNumber.toString()))
        .replaceAll("\\{" + "BusinessPartnerCompany" + "\\}", apiClient.escapeString(businessPartnerCompany.toString()))
        .replaceAll("\\{" + "BusinessPartnerPerson" + "\\}", apiClient.escapeString(businessPartnerPerson.toString()))
        .replaceAll("\\{" + "ValidityEndDate" + "\\}", apiClient.escapeString(validityEndDate.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "PATCH", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDatePatchValidateBeforeCall(String relationshipNumber, String businessPartnerCompany, String businessPartnerPerson, String validityEndDate, ModifiedABusinessPartnerContactType aBusinessPartnerContactType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'relationshipNumber' is set
        if (relationshipNumber == null) {
            throw new ApiException("Missing the required parameter 'relationshipNumber' when calling aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDatePatch(Async)");
        }
        
        // verify the required parameter 'businessPartnerCompany' is set
        if (businessPartnerCompany == null) {
            throw new ApiException("Missing the required parameter 'businessPartnerCompany' when calling aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDatePatch(Async)");
        }
        
        // verify the required parameter 'businessPartnerPerson' is set
        if (businessPartnerPerson == null) {
            throw new ApiException("Missing the required parameter 'businessPartnerPerson' when calling aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDatePatch(Async)");
        }
        
        // verify the required parameter 'validityEndDate' is set
        if (validityEndDate == null) {
            throw new ApiException("Missing the required parameter 'validityEndDate' when calling aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDatePatch(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDatePatchCall(relationshipNumber, businessPartnerCompany, businessPartnerPerson, validityEndDate, aBusinessPartnerContactType, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Update entity in A_BusinessPartnerContact
     * 
     * @param relationshipNumber BP Relationship Number   The business partner relationship number is an internal number that identifies the business partner relationship set. (required)
     * @param businessPartnerCompany Business Partner Number   Key identifying a business partner in the SAP system. The key is unique within a client. (required)
     * @param businessPartnerPerson Business Partner Number   Key identifying a business partner in the SAP system. The key is unique within a client. (required)
     * @param validityEndDate Validity Date (Valid To) (required)
     * @param aBusinessPartnerContactType New property values (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDatePatch(String relationshipNumber, String businessPartnerCompany, String businessPartnerPerson, String validityEndDate, ModifiedABusinessPartnerContactType aBusinessPartnerContactType) throws ApiException {
        aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDatePatchWithHttpInfo(relationshipNumber, businessPartnerCompany, businessPartnerPerson, validityEndDate, aBusinessPartnerContactType);
    }

    /**
     * Update entity in A_BusinessPartnerContact
     * 
     * @param relationshipNumber BP Relationship Number   The business partner relationship number is an internal number that identifies the business partner relationship set. (required)
     * @param businessPartnerCompany Business Partner Number   Key identifying a business partner in the SAP system. The key is unique within a client. (required)
     * @param businessPartnerPerson Business Partner Number   Key identifying a business partner in the SAP system. The key is unique within a client. (required)
     * @param validityEndDate Validity Date (Valid To) (required)
     * @param aBusinessPartnerContactType New property values (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDatePatchWithHttpInfo(String relationshipNumber, String businessPartnerCompany, String businessPartnerPerson, String validityEndDate, ModifiedABusinessPartnerContactType aBusinessPartnerContactType) throws ApiException {
        com.squareup.okhttp.Call call = aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDatePatchValidateBeforeCall(relationshipNumber, businessPartnerCompany, businessPartnerPerson, validityEndDate, aBusinessPartnerContactType, null, null);
        return apiClient.execute(call);
    }

    /**
     * Update entity in A_BusinessPartnerContact (asynchronously)
     * 
     * @param relationshipNumber BP Relationship Number   The business partner relationship number is an internal number that identifies the business partner relationship set. (required)
     * @param businessPartnerCompany Business Partner Number   Key identifying a business partner in the SAP system. The key is unique within a client. (required)
     * @param businessPartnerPerson Business Partner Number   Key identifying a business partner in the SAP system. The key is unique within a client. (required)
     * @param validityEndDate Validity Date (Valid To) (required)
     * @param aBusinessPartnerContactType New property values (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDatePatchAsync(String relationshipNumber, String businessPartnerCompany, String businessPartnerPerson, String validityEndDate, ModifiedABusinessPartnerContactType aBusinessPartnerContactType, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aBusinessPartnerContactRelationshipNumberRelationshipNumberBusinessPartnerCompanyBusinessPartnerCompanyBusinessPartnerPersonBusinessPartnerPersonValidityEndDateValidityEndDatePatchValidateBeforeCall(relationshipNumber, businessPartnerCompany, businessPartnerPerson, validityEndDate, aBusinessPartnerContactType, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
}
