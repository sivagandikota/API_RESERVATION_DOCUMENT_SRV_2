/*
 * OData Service for Business Partner
 * This service enables you to create, read, update, and    delete master data related to Business Partners,    Suppliers, and Customers in an SAP S/4HANA system.
 *
 * OpenAPI spec version: 1 
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.sap.apibhub.sdk.api_business_partner.api;

import com.sap.apibhub.sdk.client.ApiCallback;
import com.sap.apibhub.sdk.client.ApiClient;
import com.sap.apibhub.sdk.client.ApiException;
import com.sap.apibhub.sdk.client.ApiResponse;
import com.sap.apibhub.sdk.client.Configuration;
import com.sap.apibhub.sdk.client.Pair;
import com.sap.apibhub.sdk.client.ProgressRequestBody;
import com.sap.apibhub.sdk.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.sap.apibhub.sdk.api_business_partner.model.APIBUSINESSPARTNERAAddressPhoneNumberType;
import com.sap.apibhub.sdk.api_business_partner.model.CreatedAAddressPhoneNumberType;
import com.sap.apibhub.sdk.api_business_partner.model.ModifiedAAddressPhoneNumberType;
import com.sap.apibhub.sdk.api_business_partner.model.OdataError;
import com.sap.apibhub.sdk.api_business_partner.model.Wrapper3;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class AAddressPhoneNumberApi {
    private ApiClient apiClient;

    public AAddressPhoneNumberApi() {
        this(Configuration.getDefaultApiClient());
    }

    public AAddressPhoneNumberApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /* Build call for aAddressPhoneNumberAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberDelete */
    private com.squareup.okhttp.Call aAddressPhoneNumberAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberDeleteCall(String addressID, String person, String ordinalNumber, String ifMatch, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_AddressPhoneNumber(AddressID='{AddressID}',Person='{Person}',OrdinalNumber='{OrdinalNumber}')".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "AddressID" + "\\}", apiClient.escapeString(addressID.toString()))
        .replaceAll("\\{" + "Person" + "\\}", apiClient.escapeString(person.toString()))
        .replaceAll("\\{" + "OrdinalNumber" + "\\}", apiClient.escapeString(ordinalNumber.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (ifMatch != null)
        localVarHeaderParams.put("If-Match", apiClient.parameterToString(ifMatch));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "DELETE", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aAddressPhoneNumberAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberDeleteValidateBeforeCall(String addressID, String person, String ordinalNumber, String ifMatch, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'addressID' is set
        if (addressID == null) {
            throw new ApiException("Missing the required parameter 'addressID' when calling aAddressPhoneNumberAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberDelete(Async)");
        }
        
        // verify the required parameter 'person' is set
        if (person == null) {
            throw new ApiException("Missing the required parameter 'person' when calling aAddressPhoneNumberAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberDelete(Async)");
        }
        
        // verify the required parameter 'ordinalNumber' is set
        if (ordinalNumber == null) {
            throw new ApiException("Missing the required parameter 'ordinalNumber' when calling aAddressPhoneNumberAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberDelete(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aAddressPhoneNumberAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberDeleteCall(addressID, person, ordinalNumber, ifMatch, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Delete entity from A_AddressPhoneNumber
     * 
     * @param addressID Internal key for identifying a Business Address Services address.   For more information about the meaning and use of the address number and the Business Address Services concepts, see the function group SZA0 documentation. (required)
     * @param person Internal key for identifying a person in Business Address Services.   For more information about the meaning and use of the person number and Business Address Services concepts, see the function group SZA0 documentation. (required)
     * @param ordinalNumber Sequence Number (required)
     * @param ifMatch ETag (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void aAddressPhoneNumberAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberDelete(String addressID, String person, String ordinalNumber, String ifMatch) throws ApiException {
        aAddressPhoneNumberAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberDeleteWithHttpInfo(addressID, person, ordinalNumber, ifMatch);
    }

    /**
     * Delete entity from A_AddressPhoneNumber
     * 
     * @param addressID Internal key for identifying a Business Address Services address.   For more information about the meaning and use of the address number and the Business Address Services concepts, see the function group SZA0 documentation. (required)
     * @param person Internal key for identifying a person in Business Address Services.   For more information about the meaning and use of the person number and Business Address Services concepts, see the function group SZA0 documentation. (required)
     * @param ordinalNumber Sequence Number (required)
     * @param ifMatch ETag (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> aAddressPhoneNumberAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberDeleteWithHttpInfo(String addressID, String person, String ordinalNumber, String ifMatch) throws ApiException {
        com.squareup.okhttp.Call call = aAddressPhoneNumberAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberDeleteValidateBeforeCall(addressID, person, ordinalNumber, ifMatch, null, null);
        return apiClient.execute(call);
    }

    /**
     * Delete entity from A_AddressPhoneNumber (asynchronously)
     * 
     * @param addressID Internal key for identifying a Business Address Services address.   For more information about the meaning and use of the address number and the Business Address Services concepts, see the function group SZA0 documentation. (required)
     * @param person Internal key for identifying a person in Business Address Services.   For more information about the meaning and use of the person number and Business Address Services concepts, see the function group SZA0 documentation. (required)
     * @param ordinalNumber Sequence Number (required)
     * @param ifMatch ETag (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aAddressPhoneNumberAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberDeleteAsync(String addressID, String person, String ordinalNumber, String ifMatch, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aAddressPhoneNumberAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberDeleteValidateBeforeCall(addressID, person, ordinalNumber, ifMatch, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /* Build call for aAddressPhoneNumberAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberGet */
    private com.squareup.okhttp.Call aAddressPhoneNumberAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberGetCall(String addressID, String person, String ordinalNumber, List<String> select, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_AddressPhoneNumber(AddressID='{AddressID}',Person='{Person}',OrdinalNumber='{OrdinalNumber}')".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "AddressID" + "\\}", apiClient.escapeString(addressID.toString()))
        .replaceAll("\\{" + "Person" + "\\}", apiClient.escapeString(person.toString()))
        .replaceAll("\\{" + "OrdinalNumber" + "\\}", apiClient.escapeString(ordinalNumber.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (select != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$select", select));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aAddressPhoneNumberAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberGetValidateBeforeCall(String addressID, String person, String ordinalNumber, List<String> select, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'addressID' is set
        if (addressID == null) {
            throw new ApiException("Missing the required parameter 'addressID' when calling aAddressPhoneNumberAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberGet(Async)");
        }
        
        // verify the required parameter 'person' is set
        if (person == null) {
            throw new ApiException("Missing the required parameter 'person' when calling aAddressPhoneNumberAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberGet(Async)");
        }
        
        // verify the required parameter 'ordinalNumber' is set
        if (ordinalNumber == null) {
            throw new ApiException("Missing the required parameter 'ordinalNumber' when calling aAddressPhoneNumberAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberGet(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aAddressPhoneNumberAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberGetCall(addressID, person, ordinalNumber, select, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get entity from A_AddressPhoneNumber by key
     * 
     * @param addressID Internal key for identifying a Business Address Services address.   For more information about the meaning and use of the address number and the Business Address Services concepts, see the function group SZA0 documentation. (required)
     * @param person Internal key for identifying a person in Business Address Services.   For more information about the meaning and use of the person number and Business Address Services concepts, see the function group SZA0 documentation. (required)
     * @param ordinalNumber Sequence Number (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620) (optional)
     * @return CreatedAAddressPhoneNumberType
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public CreatedAAddressPhoneNumberType aAddressPhoneNumberAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberGet(String addressID, String person, String ordinalNumber, List<String> select) throws ApiException {
        ApiResponse<CreatedAAddressPhoneNumberType> resp = aAddressPhoneNumberAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberGetWithHttpInfo(addressID, person, ordinalNumber, select);
        return resp.getData();
    }

    /**
     * Get entity from A_AddressPhoneNumber by key
     * 
     * @param addressID Internal key for identifying a Business Address Services address.   For more information about the meaning and use of the address number and the Business Address Services concepts, see the function group SZA0 documentation. (required)
     * @param person Internal key for identifying a person in Business Address Services.   For more information about the meaning and use of the person number and Business Address Services concepts, see the function group SZA0 documentation. (required)
     * @param ordinalNumber Sequence Number (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620) (optional)
     * @return ApiResponse&lt;CreatedAAddressPhoneNumberType&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<CreatedAAddressPhoneNumberType> aAddressPhoneNumberAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberGetWithHttpInfo(String addressID, String person, String ordinalNumber, List<String> select) throws ApiException {
        com.squareup.okhttp.Call call = aAddressPhoneNumberAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberGetValidateBeforeCall(addressID, person, ordinalNumber, select, null, null);
        Type localVarReturnType = new TypeToken<CreatedAAddressPhoneNumberType>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get entity from A_AddressPhoneNumber by key (asynchronously)
     * 
     * @param addressID Internal key for identifying a Business Address Services address.   For more information about the meaning and use of the address number and the Business Address Services concepts, see the function group SZA0 documentation. (required)
     * @param person Internal key for identifying a person in Business Address Services.   For more information about the meaning and use of the person number and Business Address Services concepts, see the function group SZA0 documentation. (required)
     * @param ordinalNumber Sequence Number (required)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aAddressPhoneNumberAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberGetAsync(String addressID, String person, String ordinalNumber, List<String> select, final ApiCallback<CreatedAAddressPhoneNumberType> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aAddressPhoneNumberAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberGetValidateBeforeCall(addressID, person, ordinalNumber, select, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<CreatedAAddressPhoneNumberType>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for aAddressPhoneNumberAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberPatch */
    private com.squareup.okhttp.Call aAddressPhoneNumberAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberPatchCall(String addressID, String person, String ordinalNumber, ModifiedAAddressPhoneNumberType aAddressPhoneNumberType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = aAddressPhoneNumberType;
        
        // create path and map variables
        String localVarPath = "/A_AddressPhoneNumber(AddressID='{AddressID}',Person='{Person}',OrdinalNumber='{OrdinalNumber}')".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "AddressID" + "\\}", apiClient.escapeString(addressID.toString()))
        .replaceAll("\\{" + "Person" + "\\}", apiClient.escapeString(person.toString()))
        .replaceAll("\\{" + "OrdinalNumber" + "\\}", apiClient.escapeString(ordinalNumber.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "PATCH", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aAddressPhoneNumberAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberPatchValidateBeforeCall(String addressID, String person, String ordinalNumber, ModifiedAAddressPhoneNumberType aAddressPhoneNumberType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'addressID' is set
        if (addressID == null) {
            throw new ApiException("Missing the required parameter 'addressID' when calling aAddressPhoneNumberAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberPatch(Async)");
        }
        
        // verify the required parameter 'person' is set
        if (person == null) {
            throw new ApiException("Missing the required parameter 'person' when calling aAddressPhoneNumberAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberPatch(Async)");
        }
        
        // verify the required parameter 'ordinalNumber' is set
        if (ordinalNumber == null) {
            throw new ApiException("Missing the required parameter 'ordinalNumber' when calling aAddressPhoneNumberAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberPatch(Async)");
        }
        
        
        com.squareup.okhttp.Call call = aAddressPhoneNumberAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberPatchCall(addressID, person, ordinalNumber, aAddressPhoneNumberType, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Update entity in A_AddressPhoneNumber
     * 
     * @param addressID Internal key for identifying a Business Address Services address.   For more information about the meaning and use of the address number and the Business Address Services concepts, see the function group SZA0 documentation. (required)
     * @param person Internal key for identifying a person in Business Address Services.   For more information about the meaning and use of the person number and Business Address Services concepts, see the function group SZA0 documentation. (required)
     * @param ordinalNumber Sequence Number (required)
     * @param aAddressPhoneNumberType New property values (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void aAddressPhoneNumberAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberPatch(String addressID, String person, String ordinalNumber, ModifiedAAddressPhoneNumberType aAddressPhoneNumberType) throws ApiException {
        aAddressPhoneNumberAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberPatchWithHttpInfo(addressID, person, ordinalNumber, aAddressPhoneNumberType);
    }

    /**
     * Update entity in A_AddressPhoneNumber
     * 
     * @param addressID Internal key for identifying a Business Address Services address.   For more information about the meaning and use of the address number and the Business Address Services concepts, see the function group SZA0 documentation. (required)
     * @param person Internal key for identifying a person in Business Address Services.   For more information about the meaning and use of the person number and Business Address Services concepts, see the function group SZA0 documentation. (required)
     * @param ordinalNumber Sequence Number (required)
     * @param aAddressPhoneNumberType New property values (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> aAddressPhoneNumberAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberPatchWithHttpInfo(String addressID, String person, String ordinalNumber, ModifiedAAddressPhoneNumberType aAddressPhoneNumberType) throws ApiException {
        com.squareup.okhttp.Call call = aAddressPhoneNumberAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberPatchValidateBeforeCall(addressID, person, ordinalNumber, aAddressPhoneNumberType, null, null);
        return apiClient.execute(call);
    }

    /**
     * Update entity in A_AddressPhoneNumber (asynchronously)
     * 
     * @param addressID Internal key for identifying a Business Address Services address.   For more information about the meaning and use of the address number and the Business Address Services concepts, see the function group SZA0 documentation. (required)
     * @param person Internal key for identifying a person in Business Address Services.   For more information about the meaning and use of the person number and Business Address Services concepts, see the function group SZA0 documentation. (required)
     * @param ordinalNumber Sequence Number (required)
     * @param aAddressPhoneNumberType New property values (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aAddressPhoneNumberAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberPatchAsync(String addressID, String person, String ordinalNumber, ModifiedAAddressPhoneNumberType aAddressPhoneNumberType, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aAddressPhoneNumberAddressIDAddressIDPersonPersonOrdinalNumberOrdinalNumberPatchValidateBeforeCall(addressID, person, ordinalNumber, aAddressPhoneNumberType, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /* Build call for aAddressPhoneNumberGet */
    private com.squareup.okhttp.Call aAddressPhoneNumberGetCall(Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/A_AddressPhoneNumber".replaceAll("\\{format\\}","json");

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (top != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$top", top));
        if (skip != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$skip", skip));
        if (filter != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$filter", filter));
        if (inlinecount != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "$inlinecount", inlinecount));
        if (orderby != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$orderby", orderby));
        if (select != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "$select", select));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aAddressPhoneNumberGetValidateBeforeCall(Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        
        com.squareup.okhttp.Call call = aAddressPhoneNumberGetCall(top, skip, filter, inlinecount, orderby, select, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get entities from A_AddressPhoneNumber
     * 
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374630) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374631) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374625) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374629) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620) (optional)
     * @return Wrapper3
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Wrapper3 aAddressPhoneNumberGet(Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select) throws ApiException {
        ApiResponse<Wrapper3> resp = aAddressPhoneNumberGetWithHttpInfo(top, skip, filter, inlinecount, orderby, select);
        return resp.getData();
    }

    /**
     * Get entities from A_AddressPhoneNumber
     * 
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374630) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374631) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374625) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374629) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620) (optional)
     * @return ApiResponse&lt;Wrapper3&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Wrapper3> aAddressPhoneNumberGetWithHttpInfo(Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select) throws ApiException {
        com.squareup.okhttp.Call call = aAddressPhoneNumberGetValidateBeforeCall(top, skip, filter, inlinecount, orderby, select, null, null);
        Type localVarReturnType = new TypeToken<Wrapper3>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get entities from A_AddressPhoneNumber (asynchronously)
     * 
     * @param top Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374630) (optional)
     * @param skip Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374631) (optional)
     * @param filter Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374625) (optional)
     * @param inlinecount Include count of items, see [OData Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption) (optional)
     * @param orderby Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374629) (optional)
     * @param select Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aAddressPhoneNumberGetAsync(Integer top, Integer skip, String filter, String inlinecount, List<String> orderby, List<String> select, final ApiCallback<Wrapper3> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aAddressPhoneNumberGetValidateBeforeCall(top, skip, filter, inlinecount, orderby, select, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Wrapper3>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for aAddressPhoneNumberPost */
    private com.squareup.okhttp.Call aAddressPhoneNumberPostCall(APIBUSINESSPARTNERAAddressPhoneNumberType aAddressPhoneNumberType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = aAddressPhoneNumberType;
        
        // create path and map variables
        String localVarPath = "/A_AddressPhoneNumber".replaceAll("\\{format\\}","json");

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {"APIBHUB_SANDBOX_APIKEY", "basicAuthentication" };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call aAddressPhoneNumberPostValidateBeforeCall(APIBUSINESSPARTNERAAddressPhoneNumberType aAddressPhoneNumberType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        
        com.squareup.okhttp.Call call = aAddressPhoneNumberPostCall(aAddressPhoneNumberType, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Add new entity to A_AddressPhoneNumber
     * 
     * @param aAddressPhoneNumberType New entity (optional)
     * @return CreatedAAddressPhoneNumberType
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public CreatedAAddressPhoneNumberType aAddressPhoneNumberPost(APIBUSINESSPARTNERAAddressPhoneNumberType aAddressPhoneNumberType) throws ApiException {
        ApiResponse<CreatedAAddressPhoneNumberType> resp = aAddressPhoneNumberPostWithHttpInfo(aAddressPhoneNumberType);
        return resp.getData();
    }

    /**
     * Add new entity to A_AddressPhoneNumber
     * 
     * @param aAddressPhoneNumberType New entity (optional)
     * @return ApiResponse&lt;CreatedAAddressPhoneNumberType&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<CreatedAAddressPhoneNumberType> aAddressPhoneNumberPostWithHttpInfo(APIBUSINESSPARTNERAAddressPhoneNumberType aAddressPhoneNumberType) throws ApiException {
        com.squareup.okhttp.Call call = aAddressPhoneNumberPostValidateBeforeCall(aAddressPhoneNumberType, null, null);
        Type localVarReturnType = new TypeToken<CreatedAAddressPhoneNumberType>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Add new entity to A_AddressPhoneNumber (asynchronously)
     * 
     * @param aAddressPhoneNumberType New entity (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call aAddressPhoneNumberPostAsync(APIBUSINESSPARTNERAAddressPhoneNumberType aAddressPhoneNumberType, final ApiCallback<CreatedAAddressPhoneNumberType> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = aAddressPhoneNumberPostValidateBeforeCall(aAddressPhoneNumberType, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<CreatedAAddressPhoneNumberType>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
